{"version":3,"file":"index.js","sources":["../../src/SearchInputContext.tsx","../../src/SearchResultsMenu/EmptyOption/EmptyOption.styles.ts","../../src/SearchResultsMenu/LoadingOption/LoadingOption.styles.ts","../../src/SearchResultsMenu/SearchResultsMenu.style.ts","../../src/SearchResultsMenu/SearchResultsMenu.tsx","../../src/SearchResultsMenu/EmptyOption/EmptyOption.tsx","../../src/SearchResultsMenu/LoadingOption/LoadingOption.tsx","../../src/SearchInput/SearchInput.types.ts","../../src/SearchInput/SearchInput.styles.ts","../../src/SearchResult/SearchResult.styles.ts","../../src/SearchInput/SearchInput.tsx","../../src/SearchResultGroup/SearchResultGroup.styles.ts","../../src/SearchResult/SearchResult.tsx","../../src/SearchResultGroup/SearchResultGroup.tsx"],"sourcesContent":["import React, { createContext, PropsWithChildren, useContext } from 'react';\n\nimport { useDynamicRefs } from '@leafygreen-ui/hooks';\n\nimport { SearchInputProps } from '.';\n\nexport interface SearchInputContextProps\n  extends Pick<SearchInputProps, 'state'> {\n  highlight?: number;\n  resultDynamicRefs?: ReturnType<typeof useDynamicRefs>;\n}\n\nconst SearchInputContext = createContext<SearchInputContextProps>({});\n\nexport function SearchInputContextProvider({\n  children,\n  ...props\n}: PropsWithChildren<SearchInputContextProps>) {\n  return (\n    <SearchInputContext.Provider value={props}>\n      {children}\n    </SearchInputContext.Provider>\n  );\n}\n\nexport function useSearchInputContext() {\n  return useContext(SearchInputContext);\n}\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { spacing } from '@leafygreen-ui/tokens';\n\nexport const emptyOptionStyles = css`\n  display: flex;\n  align-items: center;\n  gap: ${spacing[2]}px;\n  font-style: italic;\n  font-weight: 300;\n  padding-block: ${spacing[1]}px;\n`;\n\nexport const emptyOptionThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light1};\n  `,\n};\n","import { css, keyframes } from '@leafygreen-ui/emotion';\nimport { spacing } from '@leafygreen-ui/tokens';\n\nexport const loadingOptionStyles = css`\n  display: flex;\n  align-items: center;\n  gap: ${spacing[2]}px;\n  padding-block: ${spacing[1]}px;\n`;\n\nconst loadingSpinner = keyframes`\n  from {\n    transform: rotate(0deg);\n  } \n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const loadingOptionIcon = css`\n  height: 16px;\n  width: 16px;\n  animation: ${loadingSpinner} 1.5s linear infinite;\n`;\n","import { transparentize } from 'polished';\n\nimport { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const searchResultsMenuStyles = css`\n  box-shadow: 0px 4px 7px ${transparentize(0.75, '#000000')};\n  padding: 12px 0;\n  border-radius: 12px;\n`;\n\nexport const searchResultsMenuThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.white};\n    border: 1px solid ${palette.gray.light2};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.dark3};\n    border: 1px solid ${palette.gray.dark2};\n  `,\n};\n\nexport const searchResultsListStyles = css`\n  padding: 0;\n  margin: 0;\n  border-radius: inherit;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n`;\n","import React, { useMemo } from 'react';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useAvailableSpace } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport Popover from '@leafygreen-ui/popover';\nimport { spacing } from '@leafygreen-ui/tokens';\n\nimport { useSearchInputContext } from '../SearchInputContext';\n\nimport { EmptyOption } from './EmptyOption';\nimport { LoadingOption } from './LoadingOption';\nimport {\n  searchResultsListStyles,\n  searchResultsMenuStyles,\n  searchResultsMenuThemeStyles,\n} from './SearchResultsMenu.style';\nimport { SearchResultsMenuProps } from './SearchResultsMenu.types';\n\nconst MAX_MENU_HEIGHT = 256;\n\n/**\n * @internal\n */\nexport const SearchResultsMenu = React.forwardRef<\n  HTMLUListElement,\n  SearchResultsMenuProps\n>(\n  (\n    {\n      children,\n      open = false,\n      refEl,\n      usePortal,\n      portalClassName,\n      portalContainer,\n      scrollContainer,\n      footerSlot,\n      ...rest\n    }: SearchResultsMenuProps,\n    ref,\n  ) => {\n    const { theme } = useDarkMode();\n    const { state } = useSearchInputContext();\n\n    const menuWidth = useMemo(\n      () => refEl.current?.clientWidth ?? 0,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [refEl, open],\n    );\n\n    /** The max height of the menu element */\n    const availableSpace = useAvailableSpace(refEl);\n    const maxHeightValue = !isUndefined(availableSpace)\n      ? `${Math.min(availableSpace, MAX_MENU_HEIGHT)}px`\n      : 'unset';\n\n    return (\n      // @ts-ignore `portalClassName`, `portalContainer` and `scrollContainer` are only passed in when `usePortal` is true.\n      <Popover\n        data-testid=\"lg-search-input-popover\"\n        spacing={spacing[2]}\n        active={open}\n        align=\"bottom\"\n        justify=\"start\"\n        className={cx(\n          searchResultsMenuStyles,\n          searchResultsMenuThemeStyles[theme],\n          css`\n            width: ${menuWidth}px;\n            min-width: ${menuWidth}px;\n          `,\n        )}\n        refEl={refEl}\n        usePortal={usePortal}\n        portalClassName={usePortal ? portalClassName : undefined}\n        portalContainer={usePortal ? portalContainer : null}\n        scrollContainer={usePortal ? scrollContainer : null}\n      >\n        {state === 'loading' ? (\n          <LoadingOption />\n        ) : (\n          <>\n            <ul\n              role=\"listbox\"\n              aria-live=\"polite\"\n              aria-relevant=\"additions removals\"\n              aria-expanded={open}\n              ref={ref}\n              className={cx(\n                searchResultsListStyles,\n                css`\n                  max-height: ${maxHeightValue};\n                `,\n              )}\n              {...rest}\n            >\n              {React.Children.count(children) ? children : <EmptyOption />}\n            </ul>\n            {footerSlot}\n          </>\n        )}\n      </Popover>\n    );\n  },\n);\n\nSearchResultsMenu.displayName = 'SearchResultsMenu';\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { InputOption } from '@leafygreen-ui/input-option';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport {\n  emptyOptionStyles,\n  emptyOptionThemeStyles,\n} from './EmptyOption.styles';\n\nexport const EmptyOption = () => {\n  const { theme } = useDarkMode();\n\n  return (\n    <InputOption\n      aria-label=\"No results found\"\n      isInteractive={false}\n      className={cx(emptyOptionStyles, emptyOptionThemeStyles[theme])}\n    >\n      <span>No results found</span>\n    </InputOption>\n  );\n};\n","import React from 'react';\n\nimport RefreshIcon from '@leafygreen-ui/icon/dist/Refresh';\nimport { InputOption } from '@leafygreen-ui/input-option';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { loadingOptionIcon, loadingOptionStyles } from './LoadingOption.styles';\n\nexport const LoadingOption = () => {\n  const { darkMode } = useDarkMode();\n\n  return (\n    <InputOption\n      data-testid=\"lg-search-input-loading-option\"\n      aria-label=\"Loading results\"\n      isInteractive={false}\n      className={loadingOptionStyles}\n    >\n      <RefreshIcon\n        color={darkMode ? palette.blue.light1 : palette.blue.base}\n        className={loadingOptionIcon}\n      />\n      <span>Loading results</span>\n    </InputOption>\n  );\n};\n","import {\n  ChangeEventHandler,\n  ComponentPropsWithoutRef,\n  FormEventHandler,\n} from 'react';\n\nimport { AriaLabelProps } from '@leafygreen-ui/a11y';\nimport { DarkModeProps } from '@leafygreen-ui/lib';\n\nexport const State = {\n  Unset: 'unset',\n  Loading: 'loading',\n} as const;\n\nexport type State = (typeof State)[keyof typeof State];\n\nexport const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\ninterface BaseSearchInputProps\n  extends DarkModeProps,\n    Omit<ComponentPropsWithoutRef<'form'>, 'onChange'> {\n  /**\n   * The current state of the SearchInput. This can be none, or loading.\n   */\n  state?: State;\n\n  /**\n   * Determines the font size, padding and spacing.\n   */\n  size?: Size;\n\n  /**\n   * Determines whether the field is currently disabled.\n   * Default: false\n   */\n  disabled?: boolean;\n\n  /**\n   * The current value of the text box\n   */\n  value?: string;\n\n  /**\n   * Callback fired when the input value changes.\n   * Use this callback to filter the `SearchResult` options\n   */\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n\n  /**\n   * Callback fired when a search result is clicked,\n   * or the enter key is pressed.\n   */\n  onSubmit?: FormEventHandler<HTMLFormElement>;\n\n  /**\n   * The placeholder text shown in the input field before the user begins typing.\n   */\n  placeholder?: string;\n}\n\nexport type SearchInputProps = BaseSearchInputProps & AriaLabelProps;\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  focusRing,\n  fontFamilies,\n  fontWeights,\n  hoverRing,\n  transitionDuration,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nimport { Size } from './SearchInput.types';\n\n/**\n * Adds an inset box shadow to hide the UA background styles for autofilled inputs\n */\nconst autofillShadowOverride = (color: string) => `0 0 0 100px ${color} inset`;\n\nexport const formStyle = css`\n  outline: none;\n`;\n\nexport const inputWrapperStyle = css`\n  position: relative;\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-items: center;\n  border: 1px solid;\n  border-radius: 6px;\n  z-index: 0;\n  transition: ${transitionDuration.default}ms ease-in-out;\n  transition-property: border-color, box-shadow;\n`;\n\nexport const inputWrapperSizeStyle: Record<Size, string> = {\n  [Size.Small]: css`\n    font-size: ${typeScales.body1.fontSize}px;\n    line-height: ${typeScales.body1.lineHeight}px;\n    height: 28px;\n    grid-template-columns: 28px 1fr;\n    grid-auto-columns: 28px;\n  `,\n  [Size.Default]: css`\n    font-size: ${typeScales.body1.fontSize}px;\n    line-height: ${typeScales.body1.lineHeight}px;\n    height: 36px;\n    grid-template-columns: 36px 1fr;\n    grid-auto-columns: 36px;\n  `,\n  [Size.Large]: css`\n    font-size: 18px;\n    line-height: 32px;\n    height: 48px;\n    grid-template-columns: 48px 1fr;\n    grid-auto-columns: 48px;\n  `,\n};\n\nexport const inputWrapperThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.black};\n    background: ${palette.white};\n    border-color: ${palette.gray.base};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light2};\n    background-color: ${palette.gray.dark4};\n    border-color: ${palette.gray.base};\n  `,\n};\n\nexport const inputWrapperInteractiveStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:hover,\n    &:active {\n      &:not(:disabled):not(:focus-within) {\n        box-shadow: ${hoverRing.light.gray};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    &:hover,\n    &:active {\n      &:not(:disabled):not(:focus-within) {\n        box-shadow: ${hoverRing.dark.gray};\n      }\n    }\n  `,\n};\n\nexport const inputWrapperFocusStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:not(:disabled):focus-within {\n      box-shadow: ${focusRing.light.input};\n      border-color: ${palette.white};\n    }\n  `,\n  [Theme.Dark]: css`\n    &:not(:disabled):focus-within {\n      box-shadow: ${focusRing.dark.input};\n      border-color: ${palette.gray.dark4};\n    }\n  `,\n};\n\nexport const inputWrapperDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    cursor: not-allowed;\n    color: ${palette.gray.base};\n    background-color: ${palette.gray.light2};\n    border-color: ${palette.gray.light1};\n  `,\n  [Theme.Dark]: css`\n    cursor: not-allowed;\n    color: ${palette.gray.dark2};\n    background-color: ${palette.gray.dark3};\n    border-color: ${palette.gray.dark2};\n  `,\n};\n\nexport const baseInputStyle = css`\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n  background-color: inherit;\n  font-family: ${fontFamilies.default};\n  width: 100%;\n  height: 1.5em;\n  font-weight: ${fontWeights.regular};\n  z-index: 1;\n  outline: none;\n  border: none;\n  padding: 0;\n\n  &[aria-disabled='true'] {\n    cursor: not-allowed;\n\n    &:hover,\n    &:active {\n      box-shadow: none;\n    }\n  }\n\n  &::placeholder {\n    font-size: inherit;\n    line-height: inherit;\n  }\n  &::-ms-clear,\n  &::-ms-reveal {\n    display: none;\n    width: 0;\n    height: 0;\n  }\n  &::-webkit-search-decoration,\n  &::-webkit-search-cancel-button,\n  &::-webkit-search-results-button,\n  &::-webkit-search-results-decoration {\n    display: none;\n  }\n`;\n\nexport const inputThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:-webkit-autofill {\n      color: inherit;\n      background: transparent;\n      border: none;\n      -webkit-text-fill-color: inherit;\n\n      &[aria-disabled='false'] {\n        box-shadow: ${autofillShadowOverride(palette.white)};\n\n        &:focus {\n          box-shadow: ${autofillShadowOverride(palette.white)},\n            ${focusRing.light.input};\n        }\n\n        &:hover:not(:focus) {\n          box-shadow: ${autofillShadowOverride(palette.white)},\n            ${hoverRing.light.gray};\n        }\n      }\n    }\n\n    &::placeholder {\n      color: ${palette.gray.base};\n      font-weight: ${fontWeights.regular};\n    }\n\n    &[aria-disabled='true'] {\n      &::placeholder {\n        color: ${palette.gray.base};\n      }\n\n      &:-webkit-autofill {\n        &,\n        &:hover,\n        &:focus {\n          appearance: none;\n          border: 1px solid ${palette.gray.base};\n          -webkit-text-fill-color: ${palette.gray.base};\n          box-shadow: ${autofillShadowOverride(palette.gray.light2)};\n        }\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    &:-webkit-autofill {\n      color: inherit;\n      background: transparent;\n      border: none;\n      -webkit-text-fill-color: ${palette.gray.light3};\n      &[aria-disabled='false'] {\n        box-shadow: ${autofillShadowOverride(palette.gray.dark4)};\n\n        &:focus {\n          box-shadow: ${autofillShadowOverride(palette.gray.dark4)},\n            ${focusRing.dark.input};\n          border-color: ${palette.blue.light1};\n        }\n\n        &:hover:not(:focus) {\n          box-shadow: ${autofillShadowOverride(palette.gray.dark4)},\n            ${hoverRing.dark.gray};\n        }\n      }\n    }\n\n    &::placeholder {\n      color: ${palette.gray.base};\n      font-weight: ${fontWeights.regular};\n    }\n\n    &[aria-disabled='true'] {\n      &::placeholder {\n        color: ${palette.gray.dark1};\n      }\n\n      &:-webkit-autofill {\n        &,\n        &:hover,\n        &:focus {\n          appearance: none;\n          border: 1px solid ${palette.gray.dark1};\n          -webkit-text-fill-color: ${palette.gray.dark1};\n          box-shadow: ${autofillShadowOverride(palette.gray.dark2)};\n        }\n      }\n    }\n  `,\n};\n\nexport const searchIconThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light1};\n  `,\n};\n\nexport const searchIconSizeStyle: Record<Size, string> = {\n  [Size.Small]: css`\n    left: 10px;\n  `,\n  [Size.Default]: css`\n    left: 12px;\n  `,\n  [Size.Large]: css`\n    left: 16px;\n  `,\n};\n\nexport const searchIconDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.base};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark1};\n  `,\n};\n\nexport const clearButtonStyle = css``;\nexport const clearButtonSizeStyle: Record<Size, string> = {\n  [Size.Small]: css`\n    height: 26px;\n    width: 26px;\n  `,\n  [Size.Default]: css`\n    height: 28px;\n    width: 28px;\n  `,\n  [Size.Large]: css`\n    height: 28px;\n    width: 28px;\n  `,\n};\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  fontFamilies,\n  fontWeights,\n  spacing,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nexport const titleClassName = createUniqueClassName('search-result-title');\nexport const descriptionClassName = createUniqueClassName(\n  'search-result-description',\n);\n\nexport const searchResultStyles = css`\n  display: block;\n  font-family: ${fontFamilies.default};\n  font-size: ${typeScales.body1.fontSize}px;\n  line-height: ${spacing[3]}px;\n  padding: ${spacing[1]}px ${spacing[3]}px;\n\n  & .${titleClassName} {\n    font-weight: ${fontWeights.bold};\n  }\n`;\n\nexport const searchResultThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    & .${titleClassName} {\n      color: ${palette.black};\n    }\n    & .${descriptionClassName} {\n      color: ${palette.gray.dark1};\n    }\n  `,\n  [Theme.Dark]: css`\n    & .${titleClassName} {\n      color: ${palette.gray.light2};\n    }\n    & .${descriptionClassName} {\n      color: ${palette.gray.light1};\n    }\n  `,\n};\n\nexport const searchResultDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    & .${titleClassName} {\n      color: ${palette.gray.light1};\n    }\n    & .${descriptionClassName} {\n      color: ${palette.gray.light1};\n    }\n  `,\n  [Theme.Dark]: css`\n    & .${titleClassName} {\n      color: ${palette.gray.dark1};\n    }\n    & .${descriptionClassName} {\n      color: ${palette.gray.dark1};\n    }\n  `,\n};\n\nexport const descriptionStyle = css`\n  max-height: ${spacing[3] * 3}px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import React, {\n  ChangeEventHandler,\n  EventHandler,\n  FocusEventHandler,\n  FormEventHandler,\n  KeyboardEventHandler,\n  MouseEventHandler,\n  SyntheticEvent,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport {\n  useAutoScroll,\n  useBackdropClick,\n  useControlledValue,\n  useDynamicRefs,\n  useForwardedRef,\n} from '@leafygreen-ui/hooks';\nimport MagnifyingGlass from '@leafygreen-ui/icon/dist/MagnifyingGlass';\nimport XIcon from '@leafygreen-ui/icon/dist/XWithCircle';\nimport IconButton from '@leafygreen-ui/icon-button';\nimport LeafyGreenProvider, {\n  useDarkMode,\n} from '@leafygreen-ui/leafygreen-provider';\nimport {\n  createSyntheticEvent,\n  getNodeTextContent,\n  isComponentType,\n  keyMap,\n} from '@leafygreen-ui/lib';\n\nimport { SearchInputContextProvider } from '../SearchInputContext';\nimport { SearchResultProps } from '../SearchResult';\nimport { SearchResultGroupProps } from '../SearchResultGroup';\nimport { SearchResultsMenu } from '../SearchResultsMenu';\n\nimport {\n  baseInputStyle,\n  clearButtonSizeStyle,\n  formStyle,\n  inputThemeStyle,\n  inputWrapperDisabledStyle,\n  inputWrapperFocusStyles,\n  inputWrapperInteractiveStyles,\n  inputWrapperSizeStyle,\n  inputWrapperStyle,\n  inputWrapperThemeStyle,\n  searchIconDisabledStyle,\n  searchIconSizeStyle,\n  searchIconThemeStyle,\n} from './SearchInput.styles';\nimport { SearchInputProps, Size, State } from './SearchInput.types';\n\n/**\n * # SearchInput\n *\n * SearchInput component\n *\n * @param props.state The current state of the SearchInput. This can be none, or loading.\n * @param props.darkMode determines whether or not the component appears in dark theme.\n * @param props.size determines the size of the text and the height of the input.\n */\n\nexport const SearchInput = React.forwardRef<HTMLInputElement, SearchInputProps>(\n  function SearchInput(\n    {\n      placeholder = 'Search',\n      className,\n      darkMode: darkModeProp,\n      size = Size.Default,\n      disabled,\n      children,\n      state = State.Unset,\n      value: valueProp,\n      onChange: onChangeProp,\n      onSubmit: onSubmitProp,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      ...rest\n    }: SearchInputProps,\n    forwardRef: React.Ref<HTMLInputElement>,\n  ) {\n    const { theme, darkMode } = useDarkMode(darkModeProp);\n    const [isOpen, setOpen] = useState(false);\n    // The index of the currently highlighted result option\n    const [highlightIndex, setHighlightIndex] = useState<number>(0);\n\n    const closeMenu = () => setOpen(false);\n    const openMenu = () => setOpen(true);\n\n    const formRef = useRef<HTMLFormElement>(null);\n    const searchBoxRef = useRef<HTMLDivElement>(null);\n    const menuRef = useRef<HTMLUListElement>(null);\n    const inputRef = useForwardedRef(forwardRef, null);\n    const clearButtonRef = useRef<HTMLButtonElement>(null);\n    const resultRefs = useDynamicRefs<HTMLElement>({ prefix: 'result' });\n    const [focusedElement, trackFocusedElement] = useState<Element>();\n    const highlightedElementRef = resultRefs(`${highlightIndex}`);\n\n    const withTypeAhead = !isUndefined(children);\n\n    const { value, handleChange } = useControlledValue(valueProp, onChangeProp);\n\n    /** Fires a change event to update the input value */\n    const changeInputValue = useCallback(\n      (newVal: string) => {\n        if (inputRef.current) {\n          /**\n           * Change the element's value\n           * and then trigger the change event handler with a new synthetic event.\n           * This makes sure that programmatically changing the value affects\n           * both controlled & uncontrolled components\n           */\n          inputRef.current.value = newVal;\n          handleChange(\n            createSyntheticEvent(\n              new Event('change', {\n                cancelable: true,\n                bubbles: true,\n              }),\n              inputRef.current,\n            ),\n          );\n        }\n      },\n      [handleChange, inputRef],\n    );\n\n    /**\n     * Helper function that both counts the number of `SearchResult` descendants\n     * and adds the appropriate props to said children\n     */\n    const processChildren = useCallback(() => {\n      // Count results (not just children, since groups are still children)\n      let resultsCount = 0;\n\n      const processChild = (\n        child: React.ReactNode,\n      ): JSX.Element | undefined => {\n        if (isComponentType(child, 'SearchResult')) {\n          resultsCount += 1;\n          const index = resultsCount - 1;\n\n          const textValue = getNodeTextContent(child);\n\n          const onElementClick: MouseEventHandler = e => {\n            child.props.onClick?.(e); // call the child's onClick handler\n\n            // Update the input value so the submit event has a target.value\n            changeInputValue(textValue);\n\n            const wasClickedWithMouse = e.detail >= 1;\n\n            if (wasClickedWithMouse && formRef.current && inputRef.current) {\n              /**\n               * Selecting an option should fire a a `submit` event,\n               * so users can provide a single `onSubmit` handler\n               * instead of providing individual `onClick` handlers for each result.\n               *\n               * We only fire a new `submit` event if the element was clicked with the mouse,\n               * since the `Enter` key also fires the `submit` event\n               */\n              const submitEvent = new Event('submit', {\n                cancelable: true,\n                bubbles: true,\n              });\n              formRef.current?.dispatchEvent(submitEvent);\n            }\n          };\n\n          return React.cloneElement(child, {\n            ...child.props,\n            id: `result-${index}`,\n            key: `result-${index}`,\n            ref: child.props.ref ?? resultRefs?.(`${index}`),\n            highlighted: index === highlightIndex,\n            onClick: onElementClick,\n          } as SearchResultProps);\n        } else if (isComponentType(child, 'SearchResultGroup')) {\n          const nestedChildren = React.Children.map(\n            child.props.children,\n            processChild,\n          );\n\n          if (nestedChildren && nestedChildren.length > 0) {\n            return React.cloneElement(child, {\n              ...child.props,\n              children: nestedChildren,\n            } as SearchResultGroupProps);\n          }\n        }\n      };\n\n      const updatedChildren = React.Children.map(children, processChild);\n\n      return {\n        resultsCount,\n        updatedChildren,\n      };\n    }, [children, highlightIndex, inputRef, resultRefs, changeInputValue]);\n\n    const { updatedChildren, resultsCount } = useMemo(\n      () => processChildren(),\n      [processChildren],\n    );\n\n    type Direction = 'next' | 'prev' | 'first' | 'last';\n    const updateHighlight = (direction: Direction) => {\n      switch (direction) {\n        case 'first': {\n          setHighlightIndex(0);\n          break;\n        }\n\n        case 'last': {\n          setHighlightIndex(resultsCount);\n          break;\n        }\n\n        case 'next': {\n          const nextIndex =\n            !isUndefined(highlightIndex) && highlightIndex + 1 < resultsCount\n              ? highlightIndex + 1\n              : 0;\n          setHighlightIndex(nextIndex);\n          break;\n        }\n\n        case 'prev': {\n          const nextIndex =\n            !isUndefined(highlightIndex) && highlightIndex - 1 >= 0\n              ? highlightIndex - 1\n              : resultsCount - 1;\n          setHighlightIndex(nextIndex);\n        }\n      }\n    };\n\n    /** Event Handlers */\n\n    const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n      handleChange?.(e);\n    };\n\n    const handleOpenMenuAction: EventHandler<SyntheticEvent<any>> = e => {\n      if (disabled) {\n        e.preventDefault();\n        e.stopPropagation();\n      } else {\n        openMenu();\n      }\n    };\n\n    const handleSearchBoxMousedown: MouseEventHandler<HTMLDivElement> = e => {\n      if (disabled) {\n        // Prevent container from gaining focus by default\n        e.preventDefault();\n      }\n    };\n\n    const handleSearchBoxClick: MouseEventHandler<HTMLDivElement> = e => {\n      handleOpenMenuAction(e);\n    };\n\n    // Fired whenever the wrapper gains focus,\n    // and any time the focus within changes\n    const handleSearchBoxFocus: FocusEventHandler<HTMLDivElement> = e => {\n      const eventTarget = e.target as HTMLElement;\n      const target =\n        eventTarget === clearButtonRef.current // If the click was on the button\n          ? clearButtonRef.current // keep it there\n          : inputRef.current ?? eventTarget; // otherwise move the focus to the input\n      target.focus();\n      trackFocusedElement(target);\n    };\n\n    const handleClearButtonClick: MouseEventHandler<HTMLButtonElement> = e => {\n      // Don't open the menu if it was the clear button that was clicked.\n      e.stopPropagation();\n      changeInputValue('');\n      inputRef?.current?.focus();\n    };\n\n    const handleSearchBoxKeyDown: KeyboardEventHandler<HTMLDivElement> = e => {\n      const isFocusInMenu = menuRef.current?.contains(document.activeElement);\n      const isFocusOnSearchBox = searchBoxRef.current?.contains(\n        document.activeElement,\n      );\n\n      const isFocusInComponent = isFocusOnSearchBox || isFocusInMenu;\n\n      if (isFocusInComponent) {\n        switch (e.key) {\n          case keyMap.Enter: {\n            highlightedElementRef?.current?.click();\n            break;\n          }\n\n          case keyMap.Escape: {\n            closeMenu();\n            inputRef.current?.focus();\n            break;\n          }\n\n          case keyMap.ArrowDown: {\n            if (withTypeAhead) {\n              inputRef.current?.focus();\n              openMenu();\n              e.preventDefault(); // Stop page scroll\n              updateHighlight('next');\n            }\n            break;\n          }\n\n          case keyMap.ArrowUp: {\n            if (withTypeAhead) {\n              inputRef.current?.focus();\n              openMenu();\n              e.preventDefault(); // Stop page scroll\n              updateHighlight('prev');\n            }\n            break;\n          }\n\n          case keyMap.Tab: {\n            if (isOpen) {\n              closeMenu();\n            }\n            break;\n          }\n\n          default: {\n            if (withTypeAhead) {\n              openMenu();\n            }\n          }\n        }\n      }\n    };\n\n    const handleFormSubmit: FormEventHandler<HTMLFormElement> = e => {\n      e.preventDefault(); // prevent page reload\n\n      onSubmitProp?.(e);\n      if (withTypeAhead) {\n        closeMenu();\n        changeInputValue(''); // Clear the input\n      }\n    };\n\n    const handleBackdropClick = () => {\n      closeMenu();\n    };\n\n    useAutoScroll(highlightedElementRef, menuRef, 12);\n    useBackdropClick(\n      handleBackdropClick,\n      [searchBoxRef, menuRef],\n      isOpen && withTypeAhead,\n    );\n\n    return (\n      <LeafyGreenProvider darkMode={darkMode}>\n        <SearchInputContextProvider\n          state={state}\n          highlight={highlightIndex}\n          resultDynamicRefs={resultRefs}\n        >\n          <form\n            role=\"search\"\n            ref={formRef}\n            className={cx(formStyle, className)}\n            onSubmit={handleFormSubmit}\n            {...rest}\n          >\n            {/* Disable eslint: onClick sets focus. Key events would already have focus */}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions */}\n            <div\n              ref={searchBoxRef}\n              role=\"searchbox\"\n              tabIndex={-1}\n              onMouseDown={handleSearchBoxMousedown}\n              onClick={handleSearchBoxClick}\n              onFocus={handleSearchBoxFocus}\n              onKeyDown={handleSearchBoxKeyDown}\n              className={cx(\n                inputWrapperStyle,\n                inputWrapperSizeStyle[size],\n                inputWrapperThemeStyle[theme],\n                {\n                  [inputWrapperFocusStyles[theme]]:\n                    focusedElement === inputRef.current,\n                  [inputWrapperDisabledStyle[theme]]: disabled,\n                  [inputWrapperInteractiveStyles[theme]]: !disabled,\n                },\n              )}\n              aria-label={ariaLabel}\n              aria-labelledby={ariaLabelledBy}\n            >\n              <MagnifyingGlass\n                className={cx(\n                  searchIconThemeStyle[theme],\n                  searchIconSizeStyle[size],\n                  { [searchIconDisabledStyle[theme]]: disabled },\n                )}\n                role=\"presentation\"\n              />\n              <input\n                type=\"search\"\n                className={cx(baseInputStyle, inputThemeStyle[theme])}\n                value={value}\n                onChange={handleInputChange}\n                placeholder={placeholder}\n                ref={inputRef}\n                readOnly={disabled}\n                aria-disabled={disabled}\n              />\n              {value && (\n                <IconButton\n                  ref={clearButtonRef}\n                  type=\"button\"\n                  aria-label=\"Clear search\"\n                  onClick={handleClearButtonClick}\n                  className={clearButtonSizeStyle[size]}\n                  tabIndex={disabled ? -1 : 0}\n                  disabled={disabled}\n                >\n                  <XIcon />\n                </IconButton>\n              )}\n            </div>\n            {withTypeAhead && (\n              <SearchResultsMenu\n                open={isOpen}\n                refEl={searchBoxRef}\n                ref={menuRef}\n              >\n                {updatedChildren}\n              </SearchResultsMenu>\n            )}\n          </form>\n        </SearchInputContextProvider>\n      </LeafyGreenProvider>\n    );\n  },\n);\n\nSearchInput.displayName = 'SearchInput';\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const searchResultLabelWrapperStyle = css`\n  padding-top: 12px;\n  padding-bottom: 0;\n`;\n\nexport const searchResultLabelStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.base};\n  `,\n};\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { InputOption } from '@leafygreen-ui/input-option';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { getNodeTextContent } from '@leafygreen-ui/lib';\nimport { InferredPolymorphic, PolymorphicAs } from '@leafygreen-ui/polymorphic';\n\nimport {\n  descriptionClassName,\n  descriptionStyle,\n  searchResultDisabledStyle,\n  searchResultStyles,\n  searchResultThemeStyles,\n  titleClassName,\n} from './SearchResult.styles';\nimport { SearchResultProps } from './SearchResult.types';\n\nexport const SearchResult = InferredPolymorphic<SearchResultProps, 'li'>(\n  (\n    {\n      as = 'li' as PolymorphicAs,\n      children,\n      description,\n      disabled,\n      className,\n      darkMode,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { theme } = useDarkMode(darkMode);\n    const textContent = getNodeTextContent(children);\n    /**\n     * If `rest[aria-label]` exists, use that;\n     * if `rest['aria-labelledby']` exists, then we have no label;\n     * if neither exist we set the label to `textContent`\n     */\n    const ariaLabel =\n      rest['aria-label'] ?? (rest['aria-labelledby'] ? '' : textContent);\n\n    return (\n      <InputOption\n        {...rest}\n        as={as}\n        ref={ref}\n        className={cx(\n          searchResultStyles,\n          searchResultThemeStyles[theme],\n          {\n            [searchResultDisabledStyle[theme]]: disabled,\n          },\n          className,\n        )}\n        disabled={disabled}\n        aria-labelledby={rest['aria-labelledby']}\n        aria-label={ariaLabel}\n      >\n        <div className={titleClassName}>{children}</div>\n        {description && (\n          <div className={cx(descriptionClassName, descriptionStyle)}>\n            {description}\n          </div>\n        )}\n      </InputOption>\n    );\n  },\n  'SearchResult',\n);\n\nSearchResult.displayName = 'SearchResult';\n","import React from 'react';\n\nimport { InputOption } from '@leafygreen-ui/input-option';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { validateChildren } from '@leafygreen-ui/lib';\nimport { Overline } from '@leafygreen-ui/typography';\n\nimport {\n  searchResultLabelStyle,\n  searchResultLabelWrapperStyle,\n} from './SearchResultGroup.styles';\nimport { SearchResultGroupProps } from './SearchResultGroup.types';\n\nexport const SearchResultGroup = ({\n  children,\n  label,\n  ...rest\n}: SearchResultGroupProps) => {\n  const validatedChildren = validateChildren(children, [\n    'SearchResult',\n    'SearchResultGroup',\n  ]);\n\n  const { theme } = useDarkMode();\n\n  return (\n    <div>\n      <InputOption\n        aria-label={label}\n        isInteractive={false}\n        className={searchResultLabelWrapperStyle}\n        {...rest}\n      >\n        <Overline className={searchResultLabelStyle[theme]}>{label}</Overline>\n      </InputOption>\n      {validatedChildren}\n    </div>\n  );\n};\n\nSearchResultGroup.displayName = 'SearchResultGroup';\n"],"names":["_templateObject","_templateObject2","_templateObject3","_emptyOptionThemeStyl","_excluded","SearchInputContext","createContext","SearchInputContextProvider","_ref","children","props","_objectWithoutProperties","React","createElement","Provider","value","_searchResultsMenuThe","_templateObject4","emptyOptionStyles","css","_taggedTemplateLiteral","spacing","emptyOptionThemeStyles","_defineProperty","Theme","Light","palette","gray","dark1","Dark","light1","EmptyOption","theme","useDarkMode","InputOption","isInteractive","className","cx","loadingOptionStyles","loadingSpinner","keyframes","loadingOptionIcon","LoadingOption","darkMode","RefreshIcon","color","blue","base","searchResultsMenuStyles","transparentize","searchResultsMenuThemeStyles","white","light2","dark3","dark2","searchResultsListStyles","SearchResultsMenu","forwardRef","ref","_ref$open","open","refEl","usePortal","portalClassName","portalContainer","scrollContainer","footerSlot","rest","state","useContext","menuWidth","useMemo","_refEl$current$client","_refEl$current","current","clientWidth","availableSpace","useAvailableSpace","maxHeightValue","isUndefined","concat","Math","min","Popover","active","align","justify","undefined","Fragment","_extends","role","Children","count","displayName","_templateObject5","_inputWrapperSizeStyl","_templateObject6","_templateObject7","_inputWrapperThemeSty","_templateObject8","_templateObject9","_inputWrapperInteract","_templateObject10","_templateObject11","_inputWrapperFocusSty","_templateObject12","_templateObject13","_inputWrapperDisabled","_templateObject14","_templateObject15","_templateObject16","_inputThemeStyle","_templateObject17","_templateObject18","_searchIconThemeStyle","_templateObject19","_templateObject20","_templateObject21","_searchIconSizeStyle","_templateObject22","_templateObject23","_searchIconDisabledSt","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_clearButtonSizeStyle","State","Unset","Loading","Size","Small","Default","Large","autofillShadowOverride","formStyle","inputWrapperStyle","transitionDuration","default","inputWrapperSizeStyle","typeScales","body1","fontSize","lineHeight","inputWrapperThemeStyle","black","dark4","inputWrapperInteractiveStyles","hoverRing","light","dark","inputWrapperFocusStyles","focusRing","input","inputWrapperDisabledStyle","baseInputStyle","fontFamilies","fontWeights","regular","inputThemeStyle","light3","searchIconThemeStyle","searchIconSizeStyle","searchIconDisabledStyle","_searchResultThemeSty","_searchResultDisabled","clearButtonSizeStyle","SearchInput","_cx","_ref$placeholder","placeholder","darkModeProp","_ref$size","size","disabled","_ref$state","valueProp","onChangeProp","onChange","onSubmitProp","onSubmit","ariaLabel","ariaLabelledBy","_useDarkMode","_useState2","_slicedToArray","useState","isOpen","setOpen","_useState4","highlightIndex","setHighlightIndex","closeMenu","openMenu","formRef","useRef","searchBoxRef","menuRef","inputRef","useForwardedRef","clearButtonRef","resultRefs","useDynamicRefs","prefix","_useState6","focusedElement","trackFocusedElement","highlightedElementRef","withTypeAhead","_useControlledValue","useControlledValue","handleChange","changeInputValue","useCallback","newVal","createSyntheticEvent","Event","cancelable","bubbles","processChildren","resultsCount","updatedChildren","map","processChild","child","isComponentType","_child$props$ref","index","textValue","getNodeTextContent","cloneElement","_objectSpread","id","key","highlighted","onClick","e","_child$props$onClick","_child$props","call","detail","_formRef$current","submitEvent","dispatchEvent","nestedChildren","length","_useMemo","updateHighlight","direction","nextIndex","_nextIndex","useAutoScroll","useBackdropClick","LeafyGreenProvider","highlight","resultDynamicRefs","preventDefault","tabIndex","onMouseDown","stopPropagation","handleOpenMenuAction","onFocus","_inputRef$current","eventTarget","target","focus","onKeyDown","_menuRef$current","_searchBoxRef$current","isFocusInMenu","contains","document","activeElement","keyMap","Enter","_highlightedElementRe","click","Escape","_inputRef$current3","ArrowDown","_inputRef$current4","ArrowUp","_inputRef$current5","Tab","MagnifyingGlass","type","readOnly","IconButton","_inputRef$current2","XIcon","_searchResultLabelSty","titleClassName","createUniqueClassName","descriptionClassName","searchResultStyles","bold","searchResultThemeStyles","searchResultDisabledStyle","descriptionStyle","SearchResult","InferredPolymorphic","_rest$ariaLabel","_ref$as","as","description","textContent","searchResultLabelWrapperStyle","searchResultLabelStyle","SearchResultGroup","label","validatedChildren","validateChildren","Overline"],"mappings":"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"}