{"version":3,"file":"index.js","sources":["../../src/Popover.types.ts","../../src/utils/positionUtils.ts","../../src/Popover/Popover.tsx","../../src/Popover.testutils.tsx","../../src/index.ts"],"sourcesContent":["import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { HTMLElementProps } from '@leafygreen-ui/lib';\n\ntype TransitionProps = React.ComponentProps<typeof Transition<HTMLElement>>;\n\ntype TransitionLifecycleCallbacks = Pick<\n  TransitionProps,\n  'onEnter' | 'onEntering' | 'onEntered' | 'onExit' | 'onExiting' | 'onExited'\n>;\n\n/**\n * Options to determine the alignment of the popover relative to\n * the other component\n * @param Top will align content above other element\n * @param Bottom will align content below other element\n * @param Left will align content to the left of other element\n * @param Right will align content to the right of other element\n */\nconst Align = {\n  Top: 'top',\n  Bottom: 'bottom',\n  Left: 'left',\n  Right: 'right',\n  CenterVertical: 'center-vertical',\n  CenterHorizontal: 'center-horizontal',\n} as const;\n\ntype Align = (typeof Align)[keyof typeof Align];\n\nexport { Align };\n\n/**\n * Options to determine the justification of the popover relative to\n * the other component\n * @param Start will justify content against the start of other element\n * @param Middle will justify content against the middle of other element\n * @param End will justify content against the end of other element\n * @param Fit will justify content against both the start and the end of the other element\n */\nconst Justify = {\n  Start: 'start',\n  Middle: 'middle',\n  End: 'end',\n  Fit: 'fit',\n} as const;\n\ntype Justify = (typeof Justify)[keyof typeof Justify];\n\nexport { Justify };\n\nexport interface ElementPosition {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  height: number;\n  width: number;\n}\n\nexport interface ChildrenFunctionParameters {\n  align: Align;\n  justify: Justify;\n  referenceElPos: ElementPosition;\n}\n\nexport type PortalControlProps =\n  | {\n      /**\n       * Specifies that the popover content should be rendered at the end of the DOM,\n       * rather than in the DOM tree.\n       *\n       * default: `true`\n       */\n      usePortal?: true;\n\n      /**\n       * When usePortal is `true`, specifies a class name to apply to the root element of the portal.\n       */\n      portalClassName?: string;\n\n      /**\n       * When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.\n       */\n      portalContainer?: HTMLElement | null;\n\n      /**\n       * A ref for the portal element\n       */\n      portalRef?: React.MutableRefObject<HTMLElement | null>;\n\n      /**\n       * When usePortal is `true`, specifies the scrollable element to position relative to.\n       */\n      scrollContainer?: HTMLElement | null;\n    }\n  | {\n      /**\n       * Specifies that the popover content should be rendered at the end of the DOM,\n       * rather than in the DOM tree.\n       *\n       * default: `true`\n       */\n      usePortal: false;\n\n      /**\n       * When usePortal is `true`, specifies a class name to apply to the root element of the portal.\n       */\n      portalClassName?: undefined;\n\n      /**\n       * When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.\n       */\n      portalContainer?: null;\n\n      /**\n       * A ref for the portal element\n       */\n      portalRef?: undefined;\n\n      /**\n       * When usePortal is `true`, specifies the scrollable element to position relative to.\n       */\n      scrollContainer?: null;\n    };\n\n/**\n * Base popover props.\n * Use these props to extend popover behavior\n */\nexport type PopoverProps = {\n  /**\n   * Content that will appear inside of the popover component.\n   */\n  children:\n    | React.ReactNode\n    | ((Options: ChildrenFunctionParameters) => React.ReactNode);\n\n  /**\n   * Determines the active state of the popover component\n   *\n   * default: `false`\n   */\n  active?: boolean;\n\n  /**\n   * Class name applied to popover container.\n   */\n  className?: string;\n\n  /**\n   * Class name applied to the popover content container\n   */\n  contentClassName?: string;\n\n  /**\n   * Determines the alignment of the popover content relative to the trigger element\n   *\n   * default: `bottom`\n   */\n  align?: Align;\n\n  /**\n   * Determines the justification of the popover content relative to the trigger element\n   *\n   * default: `start`\n   */\n  justify?: Justify;\n\n  /**\n   * A reference to the element against which the popover component will be positioned.\n   */\n  refEl?: React.RefObject<HTMLElement>;\n\n  /**\n   * Specifies the amount of spacing (in pixels) between the trigger element and the Popover content.\n   *\n   * default: `10`\n   */\n  spacing?: number;\n\n  /**\n   * Should the Popover auto adjust its content when the DOM changes (using MutationObserver).\n   *\n   * default: false\n   */\n  adjustOnMutation?: boolean;\n\n  /**\n   * Click event handler passed to the root div element within the portal container.\n   */\n  onClick?: React.MouseEventHandler;\n\n  /**\n   * Number that controls the z-index of the popover element directly.\n   */\n  popoverZIndex?: number;\n} & PortalControlProps &\n  TransitionLifecycleCallbacks;\n\n/** Props used by the popover component */\nexport type PopoverComponentProps = Omit<HTMLElementProps<'div'>, 'children'> &\n  PopoverProps;\n","import { Align, ElementPosition, Justify } from '../Popover.types';\n\ninterface ElementViewportPositions {\n  referenceElViewportPos: ElementPosition;\n  contentElViewportPos: ElementPosition;\n  spacing: number;\n}\n\ninterface ElementDocumentPositions {\n  referenceElDocumentPos: ElementPosition;\n  contentElDocumentPos: ElementPosition;\n  spacing: number;\n}\n\ninterface ElementPositions\n  extends Partial<ElementViewportPositions>,\n    Partial<ElementDocumentPositions> {}\n\ninterface WindowSize {\n  windowWidth: number;\n  windowHeight: number;\n}\n\ninterface CalculatePosition\n  extends Required<ElementPositions>,\n    Partial<WindowSize> {\n  useRelativePositioning: boolean;\n  align: Align;\n  justify: Justify;\n  scrollContainer: HTMLElement | null | undefined;\n}\n\n// Returns the style object that is used to position and transition the popover component\nexport function calculatePosition({\n  useRelativePositioning,\n  spacing,\n  align,\n  justify,\n  referenceElViewportPos = defaultElementPosition,\n  referenceElDocumentPos = defaultElementPosition,\n  contentElViewportPos = defaultElementPosition,\n  contentElDocumentPos = defaultElementPosition,\n  scrollContainer,\n  windowHeight = window.innerHeight,\n  windowWidth = window.innerWidth,\n}: CalculatePosition): {\n  align: Align;\n  justify: Justify;\n  positionCSS: any;\n} {\n  // Use scrollContainer width and height instead of window width and height when a scrollContainer is set\n  // so we can correctly determine if the content element is safely within the \"window\"\n  const windowContainerWidth = scrollContainer\n    ? scrollContainer.offsetWidth\n    : windowWidth;\n  const windowContainerHeight = scrollContainer\n    ? scrollContainer.offsetHeight\n    : windowHeight;\n\n  const windowSafeCommonArgs = {\n    windowWidth: windowContainerWidth,\n    windowHeight: windowContainerHeight,\n    referenceElViewportPos,\n    contentElViewportPos,\n    spacing,\n  };\n\n  const windowSafeAlign = getWindowSafeAlign(align, windowSafeCommonArgs);\n  const windowSafeJustify = getWindowSafeJustify(\n    justify,\n    windowSafeAlign,\n    windowSafeCommonArgs,\n  );\n\n  const transformOrigin = getTransformOrigin({\n    align: windowSafeAlign,\n    justify: windowSafeJustify,\n  });\n\n  const transform = getTransform(windowSafeAlign, spacing);\n\n  // calculatePosition will run and return CSS even if getBoundingClientRect() returns 0 for all properties, which then causes the content to have incorrect CSS. To avoid this we only want to return CSS if something is returned.\n  //  Justify fit does not position itself properly in this case so we continue to return the CSS\n  if (Math.floor(contentElViewportPos.width) === 0 && justify !== Justify.Fit) {\n    return {\n      align,\n      justify,\n      positionCSS: {\n        left: 0,\n        top: 0,\n        transform,\n        transformOrigin,\n      },\n    };\n  }\n\n  if (useRelativePositioning) {\n    return {\n      align: windowSafeAlign,\n      justify: windowSafeJustify,\n      positionCSS: {\n        ...calcRelativePosition({\n          align: windowSafeAlign,\n          justify: windowSafeJustify,\n          referenceElDocumentPos,\n          contentElDocumentPos,\n          spacing,\n        }),\n        transformOrigin,\n        transform,\n      },\n    };\n  }\n\n  return {\n    align: windowSafeAlign,\n    justify: windowSafeJustify,\n    positionCSS: {\n      ...calcAbsolutePosition({\n        align: windowSafeAlign,\n        justify: windowSafeJustify,\n        referenceElDocumentPos,\n        contentElDocumentPos,\n        spacing,\n        windowHeight: windowContainerHeight,\n        windowWidth: windowContainerWidth,\n      }),\n      transformOrigin,\n      transform,\n    },\n  };\n}\n\nconst defaultElementPosition = {\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  height: 0,\n  width: 0,\n};\n\n/**\n * Returns the width and height as well as the top, bottom, left, and right positions of an element.\n */\nconst getElementPosition = (element: HTMLElement, isReference?: boolean) => {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width: boundingWidth,\n  } = element.getBoundingClientRect();\n  const { offsetHeight: height } = element;\n  // Returns the unrounded, floating point width of the content element which does not include transformations.\n  // `offsetWidth` would not work because this returns a rounded number of the element's layout width and `getBoundingClientRect.width` would also not work because it returns an exact number of the rendered width which can include transformations.\n  // If this element is the reference element return element.getBoundingClientRect().width since we don't have to be as strict with the width. If we used getComputedStyle then the reference element has to have a display other than inline set on it.\n  const width = isReference\n    ? boundingWidth\n    : parseFloat(getComputedStyle(element).width);\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    height,\n    width,\n  };\n};\n\nexport function getElementDocumentPosition(\n  element: HTMLElement | null,\n  scrollContainer?: HTMLElement | null,\n  isReference?: boolean,\n): ElementPosition {\n  if (!element) {\n    return defaultElementPosition;\n  }\n\n  const { top, bottom, left, right, height, width } = getElementPosition(\n    element,\n    isReference,\n  );\n\n  if (scrollContainer) {\n    const { scrollTop, scrollLeft } = scrollContainer;\n    const {\n      top: offsetTop,\n      bottom: offsetBottom,\n      left: offsetLeft,\n      right: offsetRight,\n    } = scrollContainer.getBoundingClientRect();\n\n    return {\n      top: top + scrollTop - offsetTop,\n      bottom: bottom + scrollTop - offsetBottom,\n      left: left + scrollLeft - offsetLeft,\n      right: right + scrollLeft - offsetRight,\n      height,\n      width,\n    };\n  }\n\n  const { scrollX, scrollY } = window;\n\n  return {\n    top: top + scrollY,\n    bottom: bottom + scrollY,\n    left: left + scrollX,\n    right: right + scrollX,\n    height,\n    width,\n  };\n}\n\n// Gets top offset, left offset, width and height dimensions for a node\nexport function getElementViewportPosition(\n  element: HTMLElement | null,\n  scrollContainer?: HTMLElement | null,\n  isReference?: boolean,\n): ElementPosition {\n  if (!element) {\n    return defaultElementPosition;\n  }\n\n  const { top, bottom, left, right, height, width } = getElementPosition(\n    element,\n    isReference,\n  );\n\n  if (scrollContainer) {\n    const {\n      top: offsetTop,\n      bottom: offsetBottom,\n      left: offsetLeft,\n      right: offsetRight,\n    } = scrollContainer.getBoundingClientRect();\n\n    return {\n      top: top - offsetTop,\n      bottom: bottom - offsetBottom,\n      left: left - offsetLeft,\n      right: right - offsetRight,\n      height,\n      width,\n    };\n  }\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    height,\n    width,\n  };\n}\n\ninterface TransformOriginArgs {\n  align: Align;\n  justify: Justify;\n}\n\ntype XOrigin = 'left' | 'right' | 'center';\ntype YOrigin = 'top' | 'bottom' | 'center';\n\nconst yJustifyOrigins: Record<Justify, YOrigin> = {\n  [Justify.Start]: 'top',\n  [Justify.Middle]: 'center',\n  [Justify.End]: 'bottom',\n  [Justify.Fit]: 'center',\n};\n\nconst xJustifyOrigins: Record<Justify, XOrigin> = {\n  [Justify.Start]: 'left',\n  [Justify.Middle]: 'center',\n  [Justify.End]: 'right',\n  [Justify.Fit]: 'center',\n};\n\nconst transformOriginMappings: {\n  [A in Align]: { x: XOrigin; y?: undefined } | { x?: undefined; y: YOrigin };\n} = {\n  [Align.Left]: { x: 'right' },\n  [Align.Right]: { x: 'left' },\n  [Align.Top]: { y: 'bottom' },\n  [Align.Bottom]: { y: 'top' },\n  [Align.CenterHorizontal]: { x: 'center' },\n  [Align.CenterVertical]: { y: 'center' },\n};\n\n// Constructs the transform origin for any given pair of alignment / justification\nfunction getTransformOrigin({ align, justify }: TransformOriginArgs): string {\n  const alignMapping = transformOriginMappings[align];\n  const x: XOrigin = alignMapping.x ?? xJustifyOrigins[justify];\n  const y: YOrigin = alignMapping.y ?? yJustifyOrigins[justify];\n\n  return `${x} ${y}`;\n}\n\n// Get transform styles for position object\nfunction getTransform(align: Align, transformAmount: number): string {\n  const scaleAmount = 0.8;\n\n  switch (align) {\n    case Align.Top:\n      return `translate3d(0, ${transformAmount}px, 0) scale(${scaleAmount})`;\n\n    case Align.Bottom:\n      return `translate3d(0, -${transformAmount}px, 0) scale(${scaleAmount})`;\n\n    case Align.Left:\n      return `translate3d(${transformAmount}px, 0, 0) scale(${scaleAmount})`;\n\n    case Align.Right:\n      return `translate3d(-${transformAmount}px, 0, 0) scale(${scaleAmount})`;\n\n    case Align.CenterHorizontal:\n    case Align.CenterVertical:\n      // NOTE(JeT): For centered alignments, \"spacing\" doesn't make sense\n      return `scale(${scaleAmount})`;\n  }\n}\n\ninterface AbsolutePositionObject {\n  top?: string | 0;\n  bottom?: string | 0;\n  left?: string | 0;\n  right?: string | 0;\n}\n\ninterface CalcPositionArgs extends ElementDocumentPositions {\n  align: Align;\n  justify: Justify;\n  spacing: number;\n}\n\ntype JustifyPositions = {\n  readonly [J in Justify]:\n    | AbsolutePositionObject\n    | ((positions: ElementDocumentPositions) => AbsolutePositionObject);\n};\n\n/**\n * Position mappings for when the main axis alignment is horizontal\n * (left/right/horizontal-center)\n */\nconst verticalJustifyRelativePositions: JustifyPositions = {\n  [Justify.Start]: { top: 0 },\n  [Justify.End]: { bottom: 0 },\n  [Justify.Middle]: ({ contentElDocumentPos, referenceElDocumentPos }) => ({\n    top: `${\n      referenceElDocumentPos.height / 2 - contentElDocumentPos.height / 2\n    }px`,\n  }),\n  [Justify.Fit]: { top: 0, bottom: 0 },\n};\n\n/**\n * Position mappings for when the main axis alignment is vertical\n * (top/bottom/vertical-center)\n */\nconst horizontalJustifyRelativePositions: JustifyPositions = {\n  [Justify.Start]: { left: 0 },\n  [Justify.End]: { right: 0 },\n  [Justify.Middle]: ({ contentElDocumentPos, referenceElDocumentPos }) => ({\n    left: `${\n      referenceElDocumentPos.width / 2 - contentElDocumentPos.width / 2\n    }px`,\n  }),\n  [Justify.Fit]: { left: 0, right: 0 },\n};\n\nconst relativePositionMappings: Record<\n  Align,\n  {\n    constant?: (positions: ElementDocumentPositions) => AbsolutePositionObject;\n    justifyPositions: JustifyPositions;\n  }\n> = {\n  [Align.Top]: {\n    constant: ({ spacing }) => ({ bottom: `calc(100% + ${spacing}px)` }),\n    justifyPositions: horizontalJustifyRelativePositions,\n  },\n  [Align.Bottom]: {\n    constant: ({ spacing }) => ({ top: `calc(100% + ${spacing}px)` }),\n    justifyPositions: horizontalJustifyRelativePositions,\n  },\n  [Align.CenterVertical]: {\n    constant: ({ referenceElDocumentPos }) => ({\n      top: `calc(${referenceElDocumentPos.height / 2}px - 50%)`,\n    }),\n    justifyPositions: horizontalJustifyRelativePositions,\n  },\n  [Align.Left]: {\n    constant: ({ spacing }) => ({ right: `calc(100% + ${spacing}px)` }),\n    justifyPositions: verticalJustifyRelativePositions,\n  },\n  [Align.Right]: {\n    constant: ({ spacing }) => ({ left: `calc(100% + ${spacing}px)` }),\n    justifyPositions: verticalJustifyRelativePositions,\n  },\n  [Align.CenterHorizontal]: {\n    constant: ({ referenceElDocumentPos }) => ({\n      left: `calc(${referenceElDocumentPos.width / 2}px - 50%)`,\n    }),\n    justifyPositions: verticalJustifyRelativePositions,\n  },\n};\n\n// Returns positioning for an element absolutely positioned within it's relative parent\nfunction calcRelativePosition({\n  align,\n  justify,\n  referenceElDocumentPos,\n  contentElDocumentPos,\n  spacing,\n}: CalcPositionArgs): AbsolutePositionObject {\n  const alignMapping = relativePositionMappings[align];\n  const justifyMapping = alignMapping.justifyPositions[justify];\n  const mappingArgs = { contentElDocumentPos, referenceElDocumentPos, spacing };\n\n  return {\n    ...alignMapping.constant?.(mappingArgs),\n    ...(typeof justifyMapping === 'function'\n      ? justifyMapping(mappingArgs)\n      : justifyMapping),\n  };\n}\n\ntype CalcAbsolutePositionArgs = CalcPositionArgs & WindowSize;\n\nfunction calcAbsolutePosition({\n  align,\n  justify,\n  referenceElDocumentPos,\n  contentElDocumentPos,\n  spacing,\n  windowWidth,\n  windowHeight,\n}: CalcAbsolutePositionArgs): AbsolutePositionObject {\n  const leftNum = calcLeft({\n    align,\n    justify,\n    referenceElPos: referenceElDocumentPos,\n    contentElPos: contentElDocumentPos,\n    spacing,\n  });\n\n  const left = `${leftNum}px`;\n\n  const top = `${calcTop({\n    align,\n    justify,\n    referenceElPos: referenceElDocumentPos,\n    contentElPos: contentElDocumentPos,\n    spacing,\n  })}px`;\n\n  if (justify !== Justify.Fit) {\n    return { left, top };\n  }\n\n  if (\n    (\n      [Align.Left, Align.Right, Align.CenterHorizontal] as Array<Align>\n    ).includes(align)\n  ) {\n    return {\n      left,\n      top,\n      bottom: `${windowHeight - referenceElDocumentPos.bottom}px`,\n    };\n  }\n\n  return {\n    left,\n    top,\n    right: `${windowWidth - (leftNum + referenceElDocumentPos.width)}px`, // take the left position of the content element and add the width of the reference element. This is where we want the right position of the content element to be. To get the equivalent right position minus this number from the container width.\n  };\n}\n\ninterface CalcPosition {\n  align?: Align;\n  justify?: Justify;\n  spacing: number;\n  contentElPos: ElementPosition;\n  referenceElPos: ElementPosition;\n}\n\n// Returns the 'top' position in pixels for a valid alignment or justification.\nfunction calcTop({\n  align,\n  justify,\n  contentElPos,\n  referenceElPos,\n  spacing,\n}: CalcPosition): number {\n  switch (align) {\n    case Align.Left:\n    case Align.Right:\n    case Align.CenterHorizontal:\n      switch (justify) {\n        case Justify.Start:\n        case Justify.Fit:\n          return referenceElPos.top;\n\n        case Justify.End:\n          return (\n            referenceElPos.top + referenceElPos.height - contentElPos.height\n          );\n\n        case Justify.Middle:\n        default:\n          return (\n            referenceElPos.top -\n            (contentElPos.height - referenceElPos.height) / 2\n          );\n      }\n\n    case Align.CenterVertical:\n      return (\n        referenceElPos.top - (contentElPos.height - referenceElPos.height) / 2\n      );\n\n    case Align.Top:\n      return referenceElPos.top - contentElPos.height - spacing;\n\n    case Align.Bottom:\n    default:\n      return referenceElPos.top + referenceElPos.height + spacing;\n  }\n}\n\n// Returns the 'left' position in pixels for a valid alignment or justification.\nfunction calcLeft({\n  align,\n  justify,\n  contentElPos,\n  referenceElPos,\n  spacing,\n}: CalcPosition): number {\n  switch (align) {\n    case Align.Top:\n    case Align.Bottom:\n    case Align.CenterVertical:\n      switch (justify) {\n        case Justify.End:\n          return (\n            referenceElPos.left + referenceElPos.width - contentElPos.width\n          );\n\n        case Justify.Middle:\n          return (\n            referenceElPos.left -\n            (contentElPos.width - referenceElPos.width) / 2\n          );\n\n        case Justify.Start:\n        case Justify.Fit:\n        default:\n          return referenceElPos.left;\n      }\n\n    case Align.Left:\n      return referenceElPos.left - contentElPos.width - spacing;\n\n    case Align.Right:\n      return referenceElPos.left + referenceElPos.width + spacing;\n\n    case Align.CenterHorizontal:\n    default:\n      return (\n        referenceElPos.left - (contentElPos.width - referenceElPos.width) / 2\n      );\n  }\n}\n\n// Check if horizontal position is safely within edge of window\nfunction safelyWithinHorizontalWindow({\n  left,\n  windowWidth,\n  contentWidth,\n}: {\n  left: number;\n  windowWidth: number;\n  contentWidth: number;\n}): boolean {\n  const tooWide = left + contentWidth > windowWidth;\n  return left >= 0 && !tooWide;\n}\n\n// Check if vertical position is safely within edge of window\nfunction safelyWithinVerticalWindow({\n  top,\n  windowHeight,\n  contentHeight,\n}: {\n  top: number;\n  windowHeight: number;\n  contentHeight: number;\n}): boolean {\n  const tooTall = top + contentHeight > windowHeight;\n\n  return top >= 0 && !tooTall;\n}\n\ninterface WindowSafeCommonArgs extends ElementViewportPositions, WindowSize {}\n\nconst alignFallbacks: { [A in Align]: ReadonlyArray<Align> } = {\n  [Align.Top]: [Align.Bottom],\n  [Align.Bottom]: [Align.Top],\n  [Align.Left]: [Align.Right],\n  [Align.Right]: [Align.Left],\n  [Align.CenterHorizontal]: [Align.Left, Align.Right],\n  [Align.CenterVertical]: [Align.Top, Align.Bottom],\n};\n\n// Determines the alignment to render based on an order of alignment fallbacks\n// Returns the first alignment that doesn't collide with the window,\n// defaulting to the align prop if all alignments fail.\nfunction getWindowSafeAlign(\n  align: Align,\n  windowSafeCommon: WindowSafeCommonArgs,\n): Align {\n  const {\n    spacing,\n    windowWidth,\n    windowHeight,\n    contentElViewportPos,\n    referenceElViewportPos,\n  } = windowSafeCommon;\n\n  const alignOptions = [align, ...alignFallbacks[align]];\n\n  return (\n    alignOptions.find(fallback => {\n      // Check that an alignment will not cause the popover to collide with the window.\n      if (\n        (\n          [Align.Top, Align.Bottom, Align.CenterVertical] as Array<Align>\n        ).includes(fallback)\n      ) {\n        const top = calcTop({\n          align: fallback,\n          contentElPos: contentElViewportPos,\n          referenceElPos: referenceElViewportPos,\n          spacing,\n        });\n\n        return safelyWithinVerticalWindow({\n          top,\n          windowHeight,\n          contentHeight: contentElViewportPos.height,\n        });\n      }\n\n      if (\n        (\n          [Align.Left, Align.Right, Align.CenterHorizontal] as Array<Align>\n        ).includes(fallback)\n      ) {\n        const left = calcLeft({\n          align: fallback,\n          contentElPos: contentElViewportPos,\n          referenceElPos: referenceElViewportPos,\n          spacing,\n        });\n        return safelyWithinHorizontalWindow({\n          left,\n          windowWidth,\n          contentWidth: contentElViewportPos.width,\n        });\n      }\n\n      return false;\n    }) || align\n  );\n}\n\nconst justifyFallbacks: { [J in Justify]: ReadonlyArray<Justify> } = {\n  [Justify.Start]: [Justify.End, Justify.Middle],\n  [Justify.Middle]: [Justify.End, Justify.Start],\n  [Justify.End]: [Justify.Start, Justify.Middle],\n  [Justify.Fit]: [Justify.Middle, Justify.Start, Justify.End],\n};\n\n// Determines the justification to render based on an order of justification fallbacks\n// Returns the first justification that doesn't collide with the window,\n// defaulting to the justify prop if all justifications fail.\nfunction getWindowSafeJustify(\n  justify: Justify,\n  align: Align,\n  windowSafeCommon: WindowSafeCommonArgs,\n): Justify {\n  const {\n    spacing,\n    windowWidth,\n    windowHeight,\n    contentElViewportPos,\n    referenceElViewportPos,\n  } = windowSafeCommon;\n\n  const justifyOptions = [justify, ...justifyFallbacks[justify]];\n\n  switch (align) {\n    case Align.Top:\n    case Align.Bottom:\n    case Align.CenterVertical:\n      return (\n        justifyOptions.find(fallback =>\n          safelyWithinHorizontalWindow({\n            contentWidth:\n              fallback === Justify.Fit\n                ? referenceElViewportPos.width\n                : contentElViewportPos.width,\n            windowWidth,\n            left: calcLeft({\n              contentElPos: contentElViewportPos,\n              referenceElPos: referenceElViewportPos,\n              spacing,\n              align: align,\n              justify: fallback,\n            }),\n          }),\n        ) ?? justifyFallbacks[justify][0]\n      );\n\n    case Align.Left:\n    case Align.Right:\n    case Align.CenterHorizontal:\n      return (\n        justifyOptions.find(fallback =>\n          safelyWithinVerticalWindow({\n            contentHeight:\n              fallback === Justify.Fit\n                ? referenceElViewportPos.height\n                : contentElViewportPos.height,\n            windowHeight,\n            top: calcTop({\n              contentElPos: contentElViewportPos,\n              referenceElPos: referenceElViewportPos,\n              spacing,\n              align,\n              justify: fallback,\n            }),\n          }),\n        ) ?? justifyFallbacks[justify][0]\n      );\n  }\n}\n","import React, { forwardRef, Fragment, useMemo, useState } from 'react';\nimport { Transition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport {\n  useIsomorphicLayoutEffect,\n  useMutationObserver,\n  useObjectDependency,\n  usePrevious,\n  useViewportSize,\n} from '@leafygreen-ui/hooks';\nimport {\n  usePopoverContext,\n  usePopoverPortalContainer,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { consoleOnce, createUniqueClassName } from '@leafygreen-ui/lib';\nimport Portal from '@leafygreen-ui/portal';\nimport { transitionDuration } from '@leafygreen-ui/tokens';\n\nimport {\n  Align,\n  Justify,\n  PopoverComponentProps,\n  PopoverProps,\n} from '../Popover.types';\nimport {\n  calculatePosition,\n  getElementDocumentPosition,\n  getElementViewportPosition,\n} from '../utils/positionUtils';\n\nconst rootPopoverStyle = css`\n  position: absolute;\n  transition: transform ${transitionDuration.default}ms ease-in-out,\n    opacity ${transitionDuration.default}ms ease-in-out;\n  opacity: 0;\n`;\n\nconst mutationOptions = {\n  // If attributes changes, such as className which affects layout\n  attributes: true,\n  // Watch if text changes in the node\n  characterData: true,\n  // Watch for any immediate children are modified\n  childList: true,\n  // Extend watching to entire sub tree to make sure we catch any modifications\n  subtree: true,\n};\n\nexport const contentClassName = createUniqueClassName('popover-content');\n\n/**\n *\n * React Component that handles positioning of content relative to another element.\n *\n * ```\n * <button>\n *  <Popover active={true}>Hello world!</Popover>\n * </button>\n * ```\n * @param props.active Boolean to describe whether or not Popover is active.\n * @param props.spacing The spacing (in pixels) between the reference element, and the popover.\n * @param props.align Alignment of Popover component relative to another element: `top`, `bottom`, `left`, `right`, `center-horizontal`, `center-vertical`.\n * @param props.justify Justification of Popover component relative to another element: `start`, `middle`, `end`, `fit`.\n * @param props.adjustOnMutation Should the Popover auto adjust its content when the DOM changes (using MutationObserver).\n * @param props.children Content to appear inside of Popover container.\n * @param props.className Classname applied to Popover container.\n * @param props.popoverZIndex Number that controls the z-index of the popover element directly.\n * @param props.refEl Reference element that Popover component should be positioned against.\n * @param props.usePortal Boolean to describe if content should be portaled to end of DOM, or appear in DOM tree.\n * @param props.portalClassName Classname applied to root element of the portal.\n * @param props.portalContainer HTML element that the popover is portaled within.\n * @param props.portalRef A ref for the Portal element.\n * @param props.scrollContainer HTML ancestor element that's scrollable to position the popover accurately within scrolling containers.\n */\nexport const Popover = forwardRef<HTMLDivElement, PopoverComponentProps>(\n  (\n    {\n      active = false,\n      spacing = 10,\n      align = Align.Bottom,\n      justify = Justify.Start,\n      adjustOnMutation = false,\n      children,\n      className,\n      popoverZIndex,\n      refEl,\n      usePortal = true,\n      portalClassName,\n      portalContainer: portalContainerProp,\n      portalRef,\n      scrollContainer: scrollContainerProp,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      ...rest\n    }: PopoverProps,\n    fwdRef,\n  ) => {\n    const [placeholderNode, setPlaceholderNode] = useState<HTMLElement | null>(\n      null,\n    );\n    const [contentNode, setContentNode] = useState<HTMLElement | null>(null);\n    const [forceUpdateCounter, setForceUpdateCounter] = useState(0);\n\n    const { setIsPopoverOpen } = usePopoverContext();\n\n    let { portalContainer, scrollContainer } = usePopoverPortalContainer();\n\n    portalContainer = portalContainerProp || portalContainer;\n    scrollContainer = scrollContainerProp || scrollContainer;\n\n    // When usePortal is true and a scrollContainer is passed in\n    // show a warning if the portalContainer is not inside of the scrollContainer.\n    // Note: If no portalContainer is passed the portalContainer will be undefined and this warning will show up.\n    // By default if no portalContainer is passed the <Portal> component will create a div and append it to the body.\n    if (usePortal && scrollContainer) {\n      if (!scrollContainer.contains(portalContainer as HTMLElement)) {\n        consoleOnce.warn(\n          'To ensure correct positioning make sure that the portalContainer element is inside of the scrollContainer',\n        );\n      }\n    }\n\n    // To remove StrictMode warnings produced by react-transition-group we need\n    // to pass in a useRef object to the <Transition> component.\n    // To do so we're shadowing the contentNode onto this nodeRef as\n    // <Transition> only accepts useRef objects.\n    const contentNodeRef = React.useRef(contentNode);\n    contentNodeRef.current = contentNode;\n\n    let referenceElement: HTMLElement | null = null;\n\n    if (refEl && refEl.current) {\n      referenceElement = refEl.current;\n    } else if (placeholderNode) {\n      const parent = placeholderNode.parentNode;\n\n      if (parent && parent instanceof HTMLElement) {\n        referenceElement = parent;\n      }\n    }\n\n    const viewportSize = useViewportSize();\n\n    // We calculate the position of the popover when it becomes active,\n    // so it's safe for us to only enable the mutation observers once the popover is active.\n    const observeMutations = adjustOnMutation && active;\n\n    const lastTimeRefElMutated = useMutationObserver(\n      referenceElement,\n      mutationOptions,\n      Date.now,\n      observeMutations,\n    );\n\n    const lastTimeContentElMutated = useMutationObserver(\n      contentNode?.parentNode as HTMLElement,\n      mutationOptions,\n      Date.now,\n      observeMutations,\n    );\n\n    // We don't memoize these values as they're reliant on scroll positioning\n    const referenceElViewportPos = useObjectDependency(\n      getElementViewportPosition(referenceElement, scrollContainer, true),\n    );\n\n    // We use contentNode.parentNode since the parentNode has a transition applied to it and we want to be able to get the width of this element before it is transformed. Also as noted below, the parentNode cannot have a ref on it.\n    // Previously the contentNode was passed in but since it is a child of transformed element it was not possible to get an untransformed width.\n    const contentElViewportPos = useObjectDependency(\n      getElementViewportPosition(\n        contentNode?.parentNode as HTMLElement,\n        scrollContainer,\n      ),\n    );\n\n    const referenceElDocumentPos = useObjectDependency(\n      useMemo(\n        () =>\n          getElementDocumentPosition(referenceElement, scrollContainer, true),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n          referenceElement,\n          scrollContainer,\n          viewportSize,\n          lastTimeRefElMutated,\n          active,\n          align,\n          justify,\n          forceUpdateCounter,\n        ],\n      ),\n    );\n\n    const contentElDocumentPos = useObjectDependency(\n      useMemo(\n        () => getElementDocumentPosition(contentNode),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n          contentNode?.parentNode,\n          viewportSize,\n          lastTimeContentElMutated,\n          active,\n          align,\n          justify,\n          forceUpdateCounter,\n        ],\n      ),\n    );\n\n    const prevJustify = usePrevious<Justify>(justify);\n    const prevAlign = usePrevious<Align>(align);\n\n    const layoutMightHaveChanged =\n      (prevJustify !== justify &&\n        (justify === Justify.Fit || prevJustify === Justify.Fit)) ||\n      (prevAlign !== align && justify === Justify.Fit);\n\n    useIsomorphicLayoutEffect(() => {\n      // justify={Justify.Fit} can cause the content's height/width to change\n      // If we're switching to/from Fit, force an extra pass to make sure the popover is positioned correctly.\n      // Also if we're switching between alignments and have Justify.Fit, it may switch between setting the width and\n      // setting the height, so force an update in that case as well.\n      if (layoutMightHaveChanged) {\n        setForceUpdateCounter(n => n + 1);\n      }\n    }, [layoutMightHaveChanged]);\n\n    // Don't render the popover initially since computing the position depends on\n    // the window which isn't available if the component is rendered on server side.\n    const [shouldRender, setShouldRender] = useState(false);\n\n    useIsomorphicLayoutEffect(() => setShouldRender(true), []);\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    const {\n      align: windowSafeAlign,\n      justify: windowSafeJustify,\n      positionCSS: { transform, ...positionCSS },\n    } = calculatePosition({\n      useRelativePositioning: !usePortal,\n      spacing,\n      align,\n      justify,\n      referenceElViewportPos,\n      referenceElDocumentPos,\n      contentElViewportPos,\n      contentElDocumentPos,\n      scrollContainer,\n    });\n\n    const activeStyle = css`\n      opacity: 1;\n      position: ${usePortal ? '' : 'absolute'};\n      pointer-events: initial;\n    `;\n\n    const Root = usePortal ? Portal : Fragment;\n    const portalProps = {\n      className: portalContainer ? undefined : portalClassName,\n      container: portalContainer ?? undefined,\n      portalRef,\n    };\n    const rootProps = usePortal ? portalProps : {};\n\n    let renderedChildren: null | React.ReactNode;\n\n    if (children == null) {\n      renderedChildren = null;\n    } else if (typeof children === 'function') {\n      renderedChildren = children({\n        align: windowSafeAlign,\n        justify: windowSafeJustify,\n        referenceElPos: referenceElDocumentPos,\n      });\n    } else {\n      renderedChildren = children;\n    }\n\n    return (\n      <Transition\n        nodeRef={contentNodeRef}\n        in={active}\n        timeout={transitionDuration.default}\n        mountOnEnter\n        unmountOnExit\n        appear\n        onEntering={onEntering}\n        onEnter={onEnter}\n        onEntered={(...args) => {\n          setIsPopoverOpen(true);\n          onEntered?.(...args);\n        }}\n        onExiting={onExiting}\n        onExit={onExit}\n        onExited={(...args) => {\n          setIsPopoverOpen(false);\n          onExited?.(...args);\n        }}\n      >\n        {state => (\n          <>\n            {/* Using <span> to prevent validateDOMNesting warnings. Warnings will still show up if `usePortal` is false */}\n            <span\n              ref={setPlaceholderNode}\n              className={css`\n                display: none;\n              `}\n            />\n            <Root {...rootProps}>\n              <div\n                {...rest}\n                ref={fwdRef}\n                className={cx(\n                  rootPopoverStyle,\n                  css(positionCSS),\n                  {\n                    [css({ transform })]:\n                      state === 'entering' || state === 'exiting',\n                    [activeStyle]: state === 'entered',\n                    [css`\n                      z-index: ${popoverZIndex};\n                    `]: typeof popoverZIndex === 'number',\n                  },\n                  className,\n                  {\n                    [css`\n                      transition-delay: 0ms;\n                    `]: state === 'exiting',\n                  },\n                )}\n              >\n                {/*\n                    We create this inner node with a ref because placing it on its parent\n                    creates an infinite loop in some cases when dynamic styles are applied.\n                  */}\n                <div ref={setContentNode} className={contentClassName}>\n                  {renderedChildren}\n                </div>\n              </div>\n            </Root>\n          </>\n        )}\n      </Transition>\n    );\n  },\n);\n\nPopover.displayName = 'Popover';\n\nPopover.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  align: PropTypes.oneOf(Object.values(Align)),\n  justify: PropTypes.oneOf(Object.values(Justify)),\n  /// @ts-expect-error Types of property '[nominalTypeHack]' are incompatible.\n  refEl: PropTypes.shape({\n    current:\n      typeof window !== 'undefined'\n        ? PropTypes.instanceOf(Element)\n        : PropTypes.any,\n  }),\n  /// @ts-ignore Types of property '[nominalTypeHack]' are incompatible. - error only in R18\n  usePortal: PropTypes.bool,\n  /// @ts-ignore Types of property '[nominalTypeHack]' are incompatible. - error only in R18\n  portalClassName: PropTypes.string,\n  spacing: PropTypes.number,\n  adjustOnMutation: PropTypes.bool,\n};\n","import { Align, Justify } from './Popover.types';\n\n/**\n * @internal\n */\nexport const getJustify = (a: Align, j: Justify): string => {\n  switch (a) {\n    case 'left':\n      return 'end';\n    case 'right':\n      return 'start';\n\n    case 'top':\n    case 'bottom':\n    case 'center-vertical':\n    case 'center-horizontal':\n    default:\n      switch (j) {\n        case 'middle':\n        case 'fit':\n          return 'center';\n\n        default:\n          return j;\n      }\n  }\n};\n\n/**\n * @internal\n */\nexport const getAlign = (a: Align, j: Justify) => {\n  switch (a) {\n    case 'top':\n      return 'end';\n    case 'bottom':\n      return 'start';\n    default:\n      switch (j) {\n        case 'middle':\n        case 'fit':\n          return 'center';\n\n        default:\n          return j;\n      }\n  }\n};\n","import { contentClassName, Popover } from './Popover';\nimport { getAlign, getJustify } from './Popover.testutils';\nexport {\n  Align,\n  type ChildrenFunctionParameters,\n  type ElementPosition,\n  Justify,\n  type PopoverProps,\n  type PortalControlProps,\n} from './Popover.types';\n\nexport { contentClassName, Popover };\nexport const TestUtils = {\n  getAlign,\n  getJustify,\n};\n\nexport default Popover;\n"],"names":["Align","Top","Bottom","Left","Right","CenterVertical","CenterHorizontal","Justify","Start","Middle","End","Fit","calculatePosition","_ref","useRelativePositioning","spacing","align","justify","_ref$referenceElViewp","referenceElViewportPos","defaultElementPosition","_ref$referenceElDocum","referenceElDocumentPos","_ref$contentElViewpor","contentElViewportPos","_ref$contentElDocumen","contentElDocumentPos","scrollContainer","_ref$windowHeight","windowHeight","window","innerHeight","_ref$windowWidth","windowWidth","innerWidth","windowContainerWidth","offsetWidth","windowContainerHeight","offsetHeight","windowSafeCommonArgs","windowSafeAlign","windowSafeCommon","alignOptions","concat","_toConsumableArray","alignFallbacks","find","fallback","includes","safelyWithinVerticalWindow","top","calcTop","contentElPos","referenceElPos","contentHeight","height","safelyWithinHorizontalWindow","left","calcLeft","contentWidth","width","getWindowSafeAlign","windowSafeJustify","_justifyOptions$find","_justifyOptions$find2","justifyOptions","justifyFallbacks","getWindowSafeJustify","transformOrigin","_ref2","_alignMapping$x","_alignMapping$y","alignMapping","transformOriginMappings","x","xJustifyOrigins","y","yJustifyOrigins","getTransformOrigin","transform","transformAmount","scaleAmount","getTransform","Math","floor","positionCSS","_objectSpread","calcRelativePosition","calcAbsolutePosition","bottom","right","getElementPosition","element","isReference","_element$getBoundingC","getBoundingClientRect","boundingWidth","parseFloat","getComputedStyle","getElementDocumentPosition","_getElementPosition","scrollTop","scrollLeft","_scrollContainer$getB","_window","scrollX","scrollY","getElementViewportPosition","_getElementPosition2","_scrollContainer$getB2","_defineProperty","verticalJustifyRelativePositions","_ref3","horizontalJustifyRelativePositions","_ref4","relativePositionMappings","constant","_ref5","justifyPositions","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_alignMapping$constan","justifyMapping","mappingArgs","call","_ref12","leftNum","_ref13","_ref14","_ref15","_ref16","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_excluded","_excluded2","rootPopoverStyle","css","_taggedTemplateLiteral","transitionDuration","default","mutationOptions","attributes","characterData","childList","subtree","contentClassName","createUniqueClassName","Popover","forwardRef","fwdRef","_portalContainer","_ref$active","active","_ref$spacing","_ref$align","_ref$justify","_ref$adjustOnMutation","adjustOnMutation","children","className","popoverZIndex","refEl","_ref$usePortal","usePortal","portalClassName","portalContainerProp","portalContainer","portalRef","scrollContainerProp","onEnter","onEntering","_onEntered","onEntered","onExit","onExiting","_onExited","onExited","rest","_objectWithoutProperties","_useState2","_slicedToArray","useState","placeholderNode","setPlaceholderNode","_useState4","contentNode","setContentNode","_useState6","forceUpdateCounter","setForceUpdateCounter","setIsPopoverOpen","usePopoverContext","_usePopoverPortalCont","usePopoverPortalContainer","contains","consoleOnce","warn","contentNodeRef","React","useRef","current","referenceElement","parent","parentNode","HTMLElement","viewportSize","useViewportSize","observeMutations","lastTimeRefElMutated","useMutationObserver","Date","now","lastTimeContentElMutated","useObjectDependency","useMemo","prevJustify","usePrevious","prevAlign","layoutMightHaveChanged","useIsomorphicLayoutEffect","n","_useState8","shouldRender","setShouldRender","renderedChildren","_calculatePosition","_calculatePosition$po","activeStyle","Root","Portal","Fragment","portalProps","undefined","container","rootProps","createElement","Transition","nodeRef","in","timeout","mountOnEnter","unmountOnExit","appear","_len","arguments","length","args","Array","_key","apply","_len2","_key2","state","ref","_extends","cx","displayName","propTypes","PropTypes","oneOfType","node","func","bool","string","oneOf","Object","values","shape","instanceOf","Element","any","number","TestUtils","getAlign","a","j","getJustify"],"mappings":"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"}