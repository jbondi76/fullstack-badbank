[
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "TextArea",
    "props": {
      "TextareaHTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea",
      "BaseTextAreaProps": {
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Whether or not the field is currently disabled.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "placeholder": {
          "name": "placeholder",
          "defaultValue": null,
          "description": "The placeholder text shown in the input field before the user begins typing.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "The current value of the input field. If a value is passed to this prop, component will be controlled by consumer.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "Callback to be executed when the value of the input field changes.",
          "required": false,
          "type": {
            "name": "ChangeEventHandler<HTMLTextAreaElement>"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "ID associated with the TextArea component.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onBlur": {
          "name": "onBlur",
          "defaultValue": null,
          "description": "Callback to be executed when the input stops being focused.",
          "required": false,
          "type": {
            "name": "FocusEventHandler<HTMLTextAreaElement>"
          },
          "tags": {}
        },
        "description": {
          "name": "description",
          "defaultValue": null,
          "description": "Text that gives more detail about the requirements for the input.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "state": {
          "name": "state",
          "defaultValue": {
            "value": "none"
          },
          "description": "The current state of the TextArea. This can be `none` or `error`.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "State",
            "value": [
              {
                "value": "\"none\""
              },
              {
                "value": "\"error\""
              }
            ]
          },
          "tags": {
            "default": "\"none\""
          }
        },
        "errorMessage": {
          "name": "errorMessage",
          "defaultValue": null,
          "description": "The message shown below the input element if the value is invalid.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "handleValidation": {
          "name": "handleValidation",
          "defaultValue": null,
          "description": "Callback called whenever validation should be run.\n\nSee [Form Validation & Error Handling](https://www.mongodb.design/foundation/forms/#form-validation--error-handling) for more",
          "required": false,
          "type": {
            "name": "(value: string) => void"
          },
          "tags": {}
        },
        "baseFontSize": {
          "name": "baseFontSize",
          "defaultValue": null,
          "description": "Override the global `baseFontSize` set in LeafygreenProvider. This will only change the font size of the input text, not the label or description",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "BaseFontSize",
            "value": [
              {
                "value": "13"
              },
              {
                "value": "16"
              }
            ]
          },
          "tags": {}
        },
        "label": {
          "name": "label",
          "defaultValue": null,
          "description": "Text shown in bold above the input element.\n\nOptional if `aria-labelledby` is provided",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "aria-labelledby": {
          "name": "aria-labelledby",
          "defaultValue": null,
          "description": "Screen-reader label element\n\nOptional if `label` is provided",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      },
      "LgIdProps": {
        "data-lgid": {
          "name": "data-lgid",
          "defaultValue": null,
          "description": "LG test id passed to the component wrapper.",
          "required": false,
          "type": {
            "name": "`lg-${string}`"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "LeafygreenUiTextArea",
    "props": {
      "TextareaHTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea",
      "BaseTextAreaProps": {
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Whether or not the field is currently disabled.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "placeholder": {
          "name": "placeholder",
          "defaultValue": null,
          "description": "The placeholder text shown in the input field before the user begins typing.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "The current value of the input field. If a value is passed to this prop, component will be controlled by consumer.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "Callback to be executed when the value of the input field changes.",
          "required": false,
          "type": {
            "name": "ChangeEventHandler<HTMLTextAreaElement>"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "ID associated with the TextArea component.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onBlur": {
          "name": "onBlur",
          "defaultValue": null,
          "description": "Callback to be executed when the input stops being focused.",
          "required": false,
          "type": {
            "name": "FocusEventHandler<HTMLTextAreaElement>"
          },
          "tags": {}
        },
        "description": {
          "name": "description",
          "defaultValue": null,
          "description": "Text that gives more detail about the requirements for the input.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "state": {
          "name": "state",
          "defaultValue": {
            "value": "none"
          },
          "description": "The current state of the TextArea. This can be `none` or `error`.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "State",
            "value": [
              {
                "value": "\"none\""
              },
              {
                "value": "\"error\""
              }
            ]
          },
          "tags": {
            "default": "\"none\""
          }
        },
        "errorMessage": {
          "name": "errorMessage",
          "defaultValue": null,
          "description": "The message shown below the input element if the value is invalid.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "handleValidation": {
          "name": "handleValidation",
          "defaultValue": null,
          "description": "Callback called whenever validation should be run.\n\nSee [Form Validation & Error Handling](https://www.mongodb.design/foundation/forms/#form-validation--error-handling) for more",
          "required": false,
          "type": {
            "name": "(value: string) => void"
          },
          "tags": {}
        },
        "baseFontSize": {
          "name": "baseFontSize",
          "defaultValue": null,
          "description": "Override the global `baseFontSize` set in LeafygreenProvider. This will only change the font size of the input text, not the label or description",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "BaseFontSize",
            "value": [
              {
                "value": "13"
              },
              {
                "value": "16"
              }
            ]
          },
          "tags": {}
        },
        "label": {
          "name": "label",
          "defaultValue": null,
          "description": "Text shown in bold above the input element.\n\nOptional if `aria-labelledby` is provided",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "aria-labelledby": {
          "name": "aria-labelledby",
          "defaultValue": null,
          "description": "Screen-reader label element\n\nOptional if `label` is provided",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      },
      "LgIdProps": {
        "data-lgid": {
          "name": "data-lgid",
          "defaultValue": null,
          "description": "LG test id passed to the component wrapper.",
          "required": false,
          "type": {
            "name": "`lg-${string}`"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "getTestUtils",
    "props": {
      "String": "",
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "Takes an integer value and returns the item at that index,\nallowing for positive and negative integers.\nNegative integers count back from the last item in the array.",
          "required": true,
          "type": {
            "name": "(index: number) => string"
          },
          "tags": {}
        }
      }
    }
  }
]