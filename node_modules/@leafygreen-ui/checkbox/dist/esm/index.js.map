{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/Check/Check.style.ts","../../src/Check/index.tsx","../../src/Checkbox/Checkbox.style.ts","../../src/Check/SvgCheck.tsx","../../src/Check/SvgIndeterminate.tsx","../../src/Checkbox/Checkbox.tsx"],"sourcesContent":["import { transitionDuration } from '@leafygreen-ui/tokens';\n\nexport const checkBoxSize = 14;\nexport const checkAnimationDuration = transitionDuration.faster;\nexport const hypotenusePct = 100 * Math.sqrt(2); // relative distance from corner to corner\nexport const insetPct = 100 - hypotenusePct;\nexport const rippleScale = 2.25;\nexport const rippleTransitionScale = 4;\nexport const rippleTransitionDelay = -rippleTransitionScale / rippleScale;\n","import { TransitionStatus } from 'react-transition-group';\n\nimport { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport {\n  checkAnimationDuration,\n  checkBoxSize,\n  insetPct,\n  rippleScale,\n  rippleTransitionDelay,\n  rippleTransitionScale,\n} from '../constants';\n\nexport const rippleClassName = createUniqueClassName('ripple');\nexport const checkBorderSizePx = 2;\n\nexport const disableAnimation = css`\n  &,\n  &:before {\n    transition: unset;\n    transition-delay: 0ms;\n    transition-duration: 0ms;\n  }\n`;\n\nexport const wrapperBaseStyle = css`\n  grid-area: check;\n  position: relative;\n  display: flex;\n  z-index: 1;\n  height: ${checkBoxSize}px;\n  width: ${checkBoxSize}px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  border: ${checkBorderSizePx}px solid;\n  overflow: hidden;\n  background-color: transparent;\n  transition: box-shadow 100ms ease-in-out, background-color 0ms linear,\n    border-color 0ms linear;\n\n  // delay border-color out\n  transition-delay: 0ms, 0ms, ${checkAnimationDuration}ms;\n\n  /**\n   * The animated background circle\n   */\n  &:before {\n    content: '';\n    position: absolute;\n    inset: ${insetPct}%;\n    z-index: 1;\n    border-radius: 100%;\n    transform: scale(0);\n    transform-origin: center center;\n    transition: transform ${checkAnimationDuration}ms ease-in-out;\n    transition-delay: ${checkAnimationDuration / 2}ms;\n  }\n`;\n\nexport const wrapperThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    border-color: ${palette.gray.dark2};\n\n    &:before {\n      background-color: ${palette.blue.base};\n    }\n  `,\n  [Theme.Dark]: css`\n    border-color: ${palette.gray.base};\n\n    &:before {\n      background-color: ${palette.blue.light1};\n    }\n  `,\n};\n\nexport const wrapperCheckedBaseStyle = css`\n  // Delay background transition in\n  transition-delay: 0ms, ${checkAnimationDuration}ms, 0ms;\n\n  &:before {\n    transform: scale(1);\n    // No delay on enter\n    transition-delay: 0ms;\n  }\n`;\n\nexport const wrapperCheckedThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.blue.base};\n    border-color: ${palette.blue.base};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.blue.light1};\n    border-color: ${palette.blue.light1};\n  `,\n};\n\nexport const wrapperDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    border-color: ${palette.gray.light2};\n    background-color: ${palette.gray.light3};\n    box-shadow: unset;\n\n    &:before {\n      background-color: ${palette.gray.light3};\n    }\n  `,\n\n  [Theme.Dark]: css`\n    border-color: ${palette.gray.dark2};\n    background-color: ${palette.gray.dark3};\n    box-shadow: unset;\n\n    &:before {\n      background-color: ${palette.gray.dark3};\n    }\n  `,\n};\n\nexport const wrapperCheckedDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.gray.light2};\n\n    &:before {\n      background-color: ${palette.gray.light2};\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.dark2};\n\n    &:before {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n};\n\nexport const rippleBaseStyles = css`\n  grid-area: check;\n  position: relative;\n  top: ${checkBorderSizePx}px;\n  height: ${checkBoxSize}px;\n  width: ${checkBoxSize}px;\n  z-index: 0;\n  border-radius: 100%;\n  opacity: 1;\n  transform: scale(0);\n  transform-origin: center center;\n  transition: 0ms ease-in-out;\n  transition-property: transform, opacity;\n`;\n\nexport const rippleThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.blue.dark1};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.blue.light2};\n  `,\n};\n\nexport const rippleCheckedStyles = css`\n  // only animate ripple on enter\n  transition-duration: ${rippleTransitionScale * checkAnimationDuration}ms;\n  transition-delay: ${rippleTransitionDelay * checkAnimationDuration}ms;\n  transform: scale(${rippleScale});\n  opacity: 0;\n`;\n\nexport const checkIconStyles = css`\n  z-index: 1;\n  transform-origin: center;\n  transition: transform ${checkAnimationDuration}ms ease-in-out;\n`;\n\nexport const checkInStyles = css`\n  transform: scale(1) rotate(0);\n  transition-delay: ${checkAnimationDuration / 8}ms;\n`;\n\nexport const checkOutStyles = css`\n  transform: scale(0) rotate(-45deg);\n`;\n\nexport const checkIconTransitionStyles: Record<TransitionStatus, string> = {\n  entering: checkOutStyles,\n  entered: checkInStyles,\n  exiting: checkOutStyles,\n  exited: checkOutStyles,\n  unmounted: checkOutStyles,\n};\n","import React, { useRef } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { usePrefersReducedMotion } from '@leafygreen-ui/a11y';\nimport { cx } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { CheckProps } from '../Checkbox/Checkbox.types';\nimport { checkAnimationDuration } from '../constants';\n\nimport {\n  checkIconStyles,\n  checkIconTransitionStyles,\n  disableAnimation,\n  rippleBaseStyles,\n  rippleCheckedStyles,\n  rippleClassName,\n  rippleThemeStyles,\n  wrapperBaseStyle,\n  wrapperCheckedBaseStyle,\n  wrapperCheckedDisabledStyle,\n  wrapperCheckedThemeStyle,\n  wrapperDisabledStyle,\n  wrapperThemeStyle,\n} from './Check.style';\nimport SvgCheck from './SvgCheck';\nimport SvgIndeterminate from './SvgIndeterminate';\n\nconst checkIconColor: Record<Theme, Record<'default' | 'disabled', string>> = {\n  [Theme.Light]: {\n    default: palette.white,\n    disabled: palette.gray.light3,\n  },\n  [Theme.Dark]: {\n    default: palette.white,\n    disabled: palette.gray.dark1,\n  },\n};\n\n/**\n * @internal\n * @returns JSX.Element\n */\nexport function Check({\n  theme,\n  isChecked,\n  indeterminate,\n  disabled,\n  animate,\n  selector,\n}: CheckProps) {\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const CheckSVG = indeterminate ? SvgIndeterminate : SvgCheck;\n  const showCheckIcon = indeterminate || isChecked;\n  const shouldAnimate = animate && !indeterminate && !prefersReducedMotion;\n\n  const transitionRef = useRef<HTMLElement | null>(null);\n\n  return (\n    <>\n      <div\n        className={cx(selector, wrapperBaseStyle, wrapperThemeStyle[theme], {\n          [wrapperCheckedBaseStyle]: showCheckIcon,\n          [wrapperCheckedThemeStyle[theme]]: showCheckIcon,\n          [wrapperDisabledStyle[theme]]: disabled,\n          [wrapperCheckedDisabledStyle[theme]]: disabled && showCheckIcon,\n          [disableAnimation]: !shouldAnimate,\n        })}\n      >\n        <Transition\n          in={showCheckIcon}\n          timeout={prefersReducedMotion ? 0 : checkAnimationDuration}\n          enter={shouldAnimate}\n          exit={shouldAnimate}\n          nodeRef={transitionRef}\n        >\n          {state => (\n            <CheckSVG\n              stroke={\n                disabled\n                  ? checkIconColor[theme].disabled\n                  : checkIconColor[theme].default\n              }\n              className={cx(checkIconStyles, checkIconTransitionStyles[state], {\n                [disableAnimation]: !shouldAnimate,\n              })}\n            />\n          )}\n        </Transition>\n      </div>\n      <div\n        className={cx(\n          rippleClassName,\n          rippleBaseStyles,\n          rippleThemeStyles[theme],\n          {\n            [rippleCheckedStyles]: isChecked && shouldAnimate,\n            [disableAnimation]: !shouldAnimate,\n          },\n        )}\n      />\n    </>\n  );\n}\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { focusRing, hoverRing } from '@leafygreen-ui/tokens';\n\nimport { checkBoxSize } from '../constants';\n\nexport const checkWrapperClassName = createUniqueClassName('check-wrapper');\nexport const inputClassName = createUniqueClassName('input');\n\nexport const containerStyle = css`\n  display: grid;\n  grid-template-columns: ${checkBoxSize}px auto;\n  grid-template-areas: 'label label' '. description';\n  gap: 0 8px;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  z-index: 0;\n`;\n\n/** &:disabled won't work and [disabled] isn't a valid property because this isn't an input */\nexport const disabledContainerStyle = css`\n  cursor: not-allowed;\n`;\n\nexport const labelStyle = css`\n  grid-area: label;\n  display: grid;\n  grid-template-columns: ${checkBoxSize}px auto;\n  grid-template-areas: 'check text';\n  gap: 8px;\n  justify-content: flex-start;\n  align-items: baseline;\n  cursor: pointer;\n`;\n\nexport const labelHoverSelector = `\n  &:hover:not(:focus-within)\n    > .${inputClassName}:not([disabled])\n      + .${checkWrapperClassName}\n`;\n\nexport const labelHoverStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    ${labelHoverSelector} {\n      box-shadow: ${hoverRing.light.gray};\n    }\n  `,\n  [Theme.Dark]: css`\n    ${labelHoverSelector} {\n      box-shadow: ${hoverRing.dark.gray};\n    }\n  `,\n};\n\nexport const disabledLabelStyle = css`\n  cursor: not-allowed;\n`;\n\nexport const disabledLabelDarkThemeOverrideStyle = css`\n  color: ${palette.gray.base};\n`;\n\nexport const inputStyle = css`\n  margin: 0;\n  position: absolute;\n  height: 0;\n  width: 0;\n  left: 0;\n  top: 0;\n  pointer-events: none;\n  opacity: 0;\n`;\n\nexport const inputFocusStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible + .${checkWrapperClassName} {\n      box-shadow: ${focusRing.light.default};\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible + .${checkWrapperClassName} {\n      box-shadow: ${focusRing.dark.default};\n    }\n  `,\n};\n\nexport const labelTextStyle = css`\n  align-self: baseline;\n`;\n\nexport const descriptionStyle = css`\n  grid-area: description;\n`;\n\nexport const labelTextColorStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.black};\n  `,\n\n  [Theme.Dark]: css`\n    color: ${palette.gray.light2};\n  `,\n};\n\nexport const disabledTextStyle = css`\n  color: ${palette.gray.dark1};\n`;\n","import React from 'react';\n\nimport { palette } from '@leafygreen-ui/palette';\n\nconst SvgCheck = (props: any) => {\n  return (\n    <svg\n      width=\"10\"\n      height=\"10\"\n      viewBox=\"0 0 10 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M2 5.5L4.12132 7.62132L8.36396 3.37868\"\n        stroke={props.stroke ?? palette.white}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default SvgCheck;\n","import React from 'react';\n\nimport { palette } from '@leafygreen-ui/palette';\n\nconst SvgIndeterminate = (props: any) => {\n  return (\n    <svg\n      width=\"10\"\n      height=\"10\"\n      viewBox=\"0 0 10 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <line\n        x1=\"2\"\n        x2=\"8\"\n        y1=\"5\"\n        y2=\"5\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        stroke={props.stroke ?? palette.white}\n      />\n    </svg>\n  );\n};\n\nexport default SvgIndeterminate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport LeafyGreenProvider, {\n  useDarkMode,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { fontWeights } from '@leafygreen-ui/tokens';\nimport {\n  Description,\n  Label,\n  useUpdatedBaseFontSize,\n} from '@leafygreen-ui/typography';\n\nimport { Check } from '../Check';\n\nimport {\n  checkWrapperClassName,\n  containerStyle,\n  descriptionStyle,\n  disabledContainerStyle,\n  disabledLabelDarkThemeOverrideStyle,\n  disabledLabelStyle,\n  inputClassName,\n  inputFocusStyles,\n  inputStyle,\n  labelHoverStyle,\n  labelStyle,\n  labelTextStyle,\n} from './Checkbox.style';\nimport { CheckboxProps } from './Checkbox.types';\n\n/**\n * Checkboxes should be used whenever a user has an option they’d like to opt in or out of.\n *\n * Unlike toggles, checkboxes are used for actions, or features, that don’t immediately turn on or off. Checkboxes are usually found in forms as opposed to config pages.\n */\nfunction Checkbox({\n  animate = true,\n  baseFontSize: baseFontSizeProp,\n  bold: boldProp,\n  checked: checkedProp,\n  className,\n  darkMode: darkModeProp,\n  description,\n  disabled = false,\n  id: idProp,\n  indeterminate: indeterminateProp,\n  label = '',\n  onClick: onClickProp,\n  onChange: onChangeProp,\n  name,\n  style,\n  ...rest\n}: CheckboxProps) {\n  const { darkMode, theme } = useDarkMode(darkModeProp);\n  const baseFontSize = useUpdatedBaseFontSize(baseFontSizeProp);\n\n  const [checked, setChecked] = React.useState(false);\n  const isChecked = React.useMemo(\n    () => (checkedProp != null ? checkedProp : checked),\n    [checkedProp, checked],\n  );\n\n  const checkboxId = useIdAllocator({ prefix: 'checkbox', id: idProp });\n  const labelId = `${checkboxId}-label`;\n\n  // If a prop is passed, use the prop\n  // otherwise default bold if there's a description\n  const bold = boldProp ?? !!description;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChangeProp) {\n      onChangeProp(e);\n    }\n\n    if (checkedProp == null) {\n      setChecked(e.target.checked);\n    }\n  };\n\n  const onClick = (\n    e: React.MouseEvent<HTMLInputElement> & { target: HTMLInputElement },\n  ) => {\n    if (onClickProp) {\n      onClickProp(e);\n    }\n\n    // For Microsoft Edge and IE, when checkbox is indeterminate, change event does not fire when clicked.\n    // Explicitly call onChange for this case\n    if (indeterminateProp) {\n      onChange(e);\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <LeafyGreenProvider\n      baseFontSize={baseFontSize === 16 ? baseFontSize : 14}\n      darkMode={darkMode}\n    >\n      <div\n        className={cx(\n          containerStyle,\n          {\n            [disabledContainerStyle]: disabled,\n          },\n          className,\n        )}\n        style={style}\n      >\n        <Label\n          id={labelId}\n          htmlFor={checkboxId}\n          disabled={disabled}\n          className={cx(labelStyle, labelHoverStyle[theme], {\n            [disabledLabelStyle]: disabled,\n            [disabledLabelDarkThemeOverrideStyle]: disabled && darkMode,\n          })}\n        >\n          <input\n            {...rest}\n            id={checkboxId}\n            className={cx(inputClassName, inputStyle, inputFocusStyles[theme])}\n            type=\"checkbox\"\n            name={name}\n            disabled={disabled}\n            checked={isChecked}\n            aria-label=\"checkbox\"\n            aria-disabled={disabled}\n            aria-checked={indeterminateProp ? 'mixed' : isChecked}\n            aria-labelledby={labelId}\n            onClick={onClick}\n            onChange={onChange}\n          />\n\n          <Check\n            theme={theme}\n            isChecked={isChecked}\n            indeterminate={indeterminateProp}\n            disabled={disabled}\n            animate={animate}\n            selector={checkWrapperClassName}\n          />\n\n          {label && (\n            <span\n              className={cx(labelTextStyle, {\n                [css`\n                  font-weight: ${fontWeights.regular};\n                `]: !bold,\n              })}\n            >\n              {label}\n            </span>\n          )}\n        </Label>\n\n        {description && (\n          <Description\n            className={cx(descriptionStyle, {\n              [disabledLabelDarkThemeOverrideStyle]: disabled && darkMode,\n            })}\n            disabled={disabled}\n          >\n            {description}\n          </Description>\n        )}\n      </div>\n    </LeafyGreenProvider>\n  );\n}\n\nCheckbox.displayName = 'Checkbox';\n\nCheckbox.propTypes = {\n  darkMode: PropTypes.bool,\n  description: PropTypes.string,\n  checked: PropTypes.bool,\n  label: PropTypes.node,\n  disabled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  animate: PropTypes.bool,\n};\n\nexport default Checkbox;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_wrapperThemeStyle","_templateObject5","_templateObject6","_templateObject7","_wrapperCheckedThemeS","_templateObject8","_templateObject9","_wrapperDisabledStyle","_templateObject10","_templateObject11","_wrapperCheckedDisabl","_templateObject12","_templateObject13","_templateObject14","_rippleThemeStyles","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_checkIconColor","_labelHoverStyle","_inputFocusStyles","_labelTextColorStyle","checkBoxSize","checkAnimationDuration","transitionDuration","faster","insetPct","Math","sqrt","rippleClassName","createUniqueClassName","disableAnimation","css","_taggedTemplateLiteral","wrapperBaseStyle","wrapperThemeStyle","_defineProperty","Theme","Light","palette","gray","dark2","blue","base","Dark","light1","wrapperCheckedBaseStyle","wrapperCheckedThemeStyle","wrapperDisabledStyle","light2","light3","dark3","wrapperCheckedDisabledStyle","rippleBaseStyles","rippleThemeStyles","dark1","rippleCheckedStyles","checkIconStyles","checkInStyles","checkOutStyles","checkIconTransitionStyles","entering","entered","exiting","exited","unmounted","SvgCheck","props","_props$stroke","React","createElement","_extends","width","height","viewBox","fill","xmlns","d","stroke","white","strokeWidth","strokeLinecap","strokeLinejoin","SvgIndeterminate","x1","x2","y1","y2","checkIconColor","default","disabled","Check","_ref","_cx","_cx3","theme","isChecked","indeterminate","animate","selector","prefersReducedMotion","usePrefersReducedMotion","CheckSVG","showCheckIcon","shouldAnimate","transitionRef","useRef","Fragment","className","cx","Transition","in","timeout","enter","exit","nodeRef","state","checkWrapperClassName","inputClassName","containerStyle","disabledContainerStyle","labelStyle","labelHoverSelector","concat","labelHoverStyle","hoverRing","light","dark","disabledLabelStyle","disabledLabelDarkThemeOverrideStyle","inputStyle","inputFocusStyles","focusRing","labelTextStyle","descriptionStyle","black","_excluded","Checkbox","_cx2","_ref$animate","baseFontSizeProp","baseFontSize","boldProp","bold","checkedProp","checked","darkModeProp","darkMode","description","_ref$disabled","idProp","id","indeterminateProp","_ref$label","label","onClickProp","onClick","onChangeProp","onChange","name","style","rest","_objectWithoutProperties","_useDarkMode","useDarkMode","useUpdatedBaseFontSize","_React$useState2","_slicedToArray","useState","setChecked","useMemo","checkboxId","useIdAllocator","prefix","labelId","e","target","LeafyGreenProvider","Label","htmlFor","type","stopPropagation","fontWeights","regular","Description","displayName","propTypes","PropTypes","bool","string","node","func","oneOfType","number"],"mappings":"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"}