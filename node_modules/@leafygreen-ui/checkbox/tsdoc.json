[
  {
    "tags": {},
    "description": "Checkboxes should be used whenever a user has an option they’d like to opt in or out of.\n\nUnlike toggles, checkboxes are used for actions, or features, that don’t immediately turn on or off. Checkboxes are usually found in forms as opposed to config pages.",
    "methods": [],
    "displayName": "Checkbox",
    "props": {
      "InputHTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",
      "InternalCheckboxProps": {
        "checked": {
          "name": "checked",
          "defaultValue": null,
          "description": "Whether the checkbox is checked. Manually setting this puts `Checkbox` into controlled mode.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Whether the checkbox is disabled",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "`false`"
          }
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "Event handler for the `<input>` element.",
          "required": false,
          "type": {
            "name": "ChangeEventHandler<HTMLInputElement>"
          },
          "tags": {}
        },
        "baseFontSize": {
          "name": "baseFontSize",
          "defaultValue": null,
          "description": "Base font size of the component. Only effective when `size == 'default'`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "BaseFontSize",
            "value": [
              {
                "value": "13"
              },
              {
                "value": "16"
              }
            ]
          },
          "tags": {}
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": null,
          "description": "Determines whether or not the Checkbox will appear in dark mode.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "description": {
          "name": "description",
          "defaultValue": null,
          "description": "Description text rendered under the label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "bold": {
          "name": "bold",
          "defaultValue": null,
          "description": "Whether the label's font-weight is bold or regular.\nIf left `undefined` this prop will default to `true` if a description is provided,\notherwise defaults to `false`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "indeterminate": {
          "name": "indeterminate",
          "defaultValue": null,
          "description": "If `true`, the indeterminate icon will be rendered regardless of the `checked` prop.\n\nFor Microsoft Edge and IE, when checkbox is indeterminate, change event does not fire when clicked.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "animate": {
          "name": "animate",
          "defaultValue": {
            "value": true
          },
          "description": "Whether there should be animation when the checkbox's state changes",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "`true`"
          }
        },
        "label": {
          "name": "label",
          "defaultValue": {
            "value": ""
          },
          "description": "Element rendered as a label adjacent to the checkbox.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "aria-label": {
          "name": "aria-label",
          "defaultValue": null,
          "description": "Defines a string value that labels the current element.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "aria-labelledby": {
          "name": "aria-labelledby",
          "defaultValue": null,
          "description": "Identifies the element (or elements) that labels the current element.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  }
]