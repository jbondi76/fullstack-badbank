import e from"react";import{storybookArgTypes as r,storybookExcludedControlParams as t}from"@lg-tools/storybook-utils";import{css as n,cx as o}from"@leafygreen-ui/emotion";import{Body as i,H3 as a,Link as l}from"@leafygreen-ui/typography";import c from"prop-types";import{useDarkMode as d}from"@leafygreen-ui/leafygreen-provider";import{Theme as s}from"@leafygreen-ui/lib";import{palette as u}from"@leafygreen-ui/palette";import f from"@leafygreen-ui/tooltip";function m(e,r,t){return(r=function(e){var r=function(e,r){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,r||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(e,"string");return"symbol"==typeof r?r:String(r)}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(){return p=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},p.apply(this,arguments)}function g(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function y(e,r){return r||(r=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}function b(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var h,v,k,M,x,O=["definition","children","className","tooltipClassName","darkMode"],j=n(h||(h=y(["\n  border-radius: 2px;\n  text-decoration: underline dotted 2px;\n  text-underline-offset: 0.125em;\n\n  &:hover {\n    a > * {\n      // Remove the Link underline styles\n      &::after {\n        height: 0;\n      }\n    }\n  }\n\n  &:focus,\n  &:focus-visible {\n    outline-color: ",";\n    outline-offset: 3px;\n    outline-style: solid;\n    outline-width: 2px;\n  }\n"])),u.blue.light1),E=(m(M={},s.Light,n(v||(v=y(["\n    text-decoration-color: ",";\n\n    &:hover,\n    &:focus,\n    &:focus-visible {\n      text-decoration-color: ",";\n    }\n  "])),u.black,u.black)),m(M,s.Dark,n(k||(k=y(["\n    text-decoration-color: ",";\n\n    &:hover,\n    &:focus,\n    &:focus-visible {\n      text-decoration-color: ",";\n    }\n  "])),u.gray.light2,u.gray.light2)),M);function S(r){var t=r.definition,n=r.children,i=r.className,a=r.tooltipClassName,l=r.darkMode,c=g(r,O),s=d(l),u=s.theme,m=s.darkMode;return e.createElement(f,p({justify:"middle",spacing:9,className:a,darkMode:m},c,{trigger:e.createElement("span",{tabIndex:0,className:o(j,E[u],i)},n)}),t)}S.displayName="InlineDefinition",S.propTypes={definition:c.node.isRequired,className:c.string,children:c.node};var w,N=["darkMode"],A=["darkMode"],I={title:"Components/InlineDefinition",component:S,parameters:{default:"LiveExample",controls:{exclude:[].concat((w=t,function(e){if(Array.isArray(e))return b(e)}(w)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(w)||function(e,r){if(e){if("string"==typeof e)return b(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?b(e,r):void 0}}(w)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),["trigger","open"])},generate:{combineArgs:{darkMode:[!1,!0]},args:{open:!0}}},args:{darkMode:!1,definition:"Sharding is a method for horizontally scaling across multiple replica sets by breaking up large datasets (e.g. partitioning) into smaller parts. Sharding is native to MongoDB.",spacing:9,children:"Shard"},argTypes:{definition:{control:"text"},children:{control:"text"},darkMode:r.darkMode}},P=function(r){var t=r.darkMode,n=g(r,N);return e.createElement(i,{darkMode:t},e.createElement(S,p({darkMode:t},n)))}.bind({}),D=function(r){var t=r.darkMode,o=g(r,A);return e.createElement("div",{className:n(x||(x=y(["\n      display: flex;\n      flex-direction: column;\n    "])))},e.createElement(a,{darkMode:t},e.createElement(S,p({darkMode:t},o),"Shard")," ","your cluster"),e.createElement(i,{darkMode:t},"Base hourly rate is for a MongoDB"," ",e.createElement(S,p({darkMode:t},o),"replica set")," ","with 3 data bearing servers."),e.createElement(i,{darkMode:t},"MongoDB shards data at the"," ",e.createElement(S,p({darkMode:t},o),e.createElement(l,{darkMode:t,href:"https://docs.mongodb.com/manual/core/sharding-shard-a-collection"},"collections"))," ","level, distributing the collection data across the shards in the cluster."))};D.parameters={chromatic:{disableSnapshot:!0}};var B=function(){};export{P as Basic,B as Generated,D as LiveExample,I as default};
