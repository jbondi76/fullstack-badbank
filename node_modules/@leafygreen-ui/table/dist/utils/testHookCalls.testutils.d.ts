import React from 'react';
import { LeafyGreenTable, LeafyGreenTableOptions } from '../useLeafyGreenTable';
import { ColumnDef } from '..';
import { Person } from './makeData.testutils';
export declare const getDefaultTestData: (rowProps: object) => Array<Person>;
export type TestColumnsProps = Omit<ColumnDef<Person, any>, 'accessorKey' | 'header'>;
export declare const getDefaultTestColumns: (props: TestColumnsProps) => Array<ColumnDef<Person>>;
export interface TestTableWithHookProps {
    rowProps?: object;
    columnProps?: TestColumnsProps;
    hookProps?: Partial<LeafyGreenTableOptions<Person>>;
    stateProps?: any;
}
/**
 * A hook call utilized across different test suites to simplify test `render`s' markup
 */
export declare const useTestHookCall: ({ rowProps, columnProps, hookProps, }: TestTableWithHookProps) => {
    containerRef: React.RefObject<HTMLDivElement>;
    table: LeafyGreenTable<Person>;
    rowSelection: {};
};
//# sourceMappingURL=testHookCalls.testutils.d.ts.map