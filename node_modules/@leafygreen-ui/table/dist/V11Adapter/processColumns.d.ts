import React from 'react';
import { SortingFn } from '@tanstack/react-table';
import { Align } from '../Cell/Cell.types';
import { TableProps } from '../TableV10/Table';
import { ValidDataType } from './V11Adapter.types';
/**
 * Converts V10's HeaderRow ReactElement to an Array<ColumnDef>
 * to be consumed by `react-table`.
 *
 * @param data returned value from `processData`
 * @param columns V10's `columns` prop
 * @param headerLabels any overrides to the header's label when the label does not correspond to its data's key in `data`
 * @returns Array<ColumnDef>
 */
declare const processColumns: <T extends ValidDataType>(data: T[], columns: React.ReactFragment | React.ReactElement<import("../TableV10/HeaderRow").HeaderRowProps | import("../TableV10/TableHeader").TableHeaderProps<T>, string | React.JSXElementConstructor<any>> | React.ReactElement<import("../TableV10/HeaderRow").HeaderRowProps | import("../TableV10/TableHeader").TableHeaderProps<T>, string | React.JSXElementConstructor<any>>[], headerLabels?: {
    [key: string]: string;
} | undefined) => {
    accessorKey: string;
    header: any;
    align: Align;
    enableSorting: boolean;
    sortingFn: SortingFn<T> | undefined;
}[];
export default processColumns;
//# sourceMappingURL=processColumns.d.ts.map