import React from 'react';
import { HTMLElementProps } from '@leafygreen-ui/lib';
import { HeaderRowProps } from './HeaderRow';
import { TableHeaderProps } from './TableHeader';
/**
 * @deprecated
 */
export interface TableRowInterface<Shape = {}> {
    datum: Shape;
    index: number;
}
/**
 * @deprecated
 * @noDocgen
 */
export interface TableProps<Shape> extends Omit<HTMLElementProps<'table'>, 'children' | 'columns'> {
    /**
     * The array of data displayed in rows. Each array element's type is determined by the `Shape` generic.
     *
     * @type Array of Objects
     */
    data: Array<Shape>;
    /**
     * React element to render the table's header row.
     * @type Array of `<TableHeader />`
     */
    columns: React.ReactElement<HeaderRowProps | TableHeaderProps<Shape>> | Array<React.ReactElement<HeaderRowProps | TableHeaderProps<Shape>>> | React.ReactFragment;
    /**
     * A function that takes in the datum of a single row as a parameter and returns a `JSX.Element` determining how it should be rendered.
     *
     * Should make use of the `<Cell>` component.
     * @type ({datum}) => JSX.Element
     */
    children: (TableRowArgs: TableRowInterface<Shape>) => JSX.Element;
    /**
     * Override the global `baseFontSize` set in LeafyGreenProvider
     */
    baseFontSize?: 14 | 16;
    /**
     * Determines whether or not the component will appear in dark mode.
     */
    darkMode?: boolean;
}
/**
 * @deprecated
 * @noDocgen
 */
declare function Table<Shape>({ columns, data: dataProp, children, className, baseFontSize, darkMode: darkModeProp, ...rest }: TableProps<Shape>): React.JSX.Element;
declare namespace Table {
    var displayName: string;
}
export default Table;
//# sourceMappingURL=Table.d.ts.map