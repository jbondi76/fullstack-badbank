{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/Check/Check.style.ts","../../src/Checkbox/Checkbox.style.ts","../../src/Check/SvgCheck.tsx","../../src/Check/SvgIndeterminate.tsx","../../src/Check/index.tsx","../../src/Checkbox/Checkbox.tsx","../../src/utils/getTestUtils.tsx"],"sourcesContent":["import { transitionDuration } from '@leafygreen-ui/tokens';\n\nexport const checkBoxSize = 14;\nexport const checkAnimationDuration = transitionDuration.faster;\nexport const hypotenusePct = 100 * Math.sqrt(2); // relative distance from corner to corner\nexport const insetPct = 100 - hypotenusePct;\nexport const rippleScale = 2.25;\nexport const rippleTransitionScale = 4;\nexport const rippleTransitionDelay = -rippleTransitionScale / rippleScale;\n\nconst LGID_ROOT = 'lg-checkbox';\n\nexport const LGIDS_CHECKBOX = {\n  root: LGID_ROOT,\n} as const;\n","import { TransitionStatus } from 'react-transition-group';\n\nimport { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport {\n  checkAnimationDuration,\n  checkBoxSize,\n  insetPct,\n  rippleScale,\n  rippleTransitionDelay,\n  rippleTransitionScale,\n} from '../constants';\n\nexport const rippleClassName = createUniqueClassName('ripple');\nexport const checkBorderSizePx = 2;\n\nexport const disableAnimation = css`\n  &,\n  &:before {\n    transition: unset;\n    transition-delay: 0ms;\n    transition-duration: 0ms;\n  }\n`;\n\nexport const wrapperBaseStyle = css`\n  grid-area: check;\n  position: relative;\n  display: flex;\n  z-index: 1;\n  height: ${checkBoxSize}px;\n  width: ${checkBoxSize}px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  border: ${checkBorderSizePx}px solid;\n  overflow: hidden;\n  background-color: transparent;\n  transition: box-shadow 100ms ease-in-out, background-color 0ms linear,\n    border-color 0ms linear;\n\n  // delay border-color out\n  transition-delay: 0ms, 0ms, ${checkAnimationDuration}ms;\n\n  /**\n   * The animated background circle\n   */\n  &:before {\n    content: '';\n    position: absolute;\n    inset: ${insetPct}%;\n    z-index: 1;\n    border-radius: 100%;\n    transform: scale(0);\n    transform-origin: center center;\n    transition: transform ${checkAnimationDuration}ms ease-in-out;\n    transition-delay: ${checkAnimationDuration / 2}ms;\n  }\n`;\n\nexport const wrapperThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    border-color: ${palette.gray.dark2};\n\n    &:before {\n      background-color: ${palette.blue.base};\n    }\n  `,\n  [Theme.Dark]: css`\n    border-color: ${palette.gray.base};\n\n    &:before {\n      background-color: ${palette.blue.light1};\n    }\n  `,\n};\n\nexport const wrapperCheckedBaseStyle = css`\n  // Delay background transition in\n  transition-delay: 0ms, ${checkAnimationDuration}ms, 0ms;\n\n  &:before {\n    transform: scale(1);\n    // No delay on enter\n    transition-delay: 0ms;\n  }\n`;\n\nexport const wrapperCheckedThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.blue.base};\n    border-color: ${palette.blue.base};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.blue.light1};\n    border-color: ${palette.blue.light1};\n  `,\n};\n\nexport const wrapperDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    border-color: ${palette.gray.light2};\n    background-color: ${palette.gray.light3};\n    box-shadow: unset;\n\n    &:before {\n      background-color: ${palette.gray.light3};\n    }\n  `,\n\n  [Theme.Dark]: css`\n    border-color: ${palette.gray.dark2};\n    background-color: ${palette.gray.dark3};\n    box-shadow: unset;\n\n    &:before {\n      background-color: ${palette.gray.dark3};\n    }\n  `,\n};\n\nexport const wrapperCheckedDisabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.gray.light2};\n\n    &:before {\n      background-color: ${palette.gray.light2};\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.dark2};\n\n    &:before {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n};\n\nexport const rippleBaseStyles = css`\n  grid-area: check;\n  position: relative;\n  top: ${checkBorderSizePx}px;\n  height: ${checkBoxSize}px;\n  width: ${checkBoxSize}px;\n  z-index: 0;\n  border-radius: 100%;\n  opacity: 1;\n  transform: scale(0);\n  transform-origin: center center;\n  transition: 0ms ease-in-out;\n  transition-property: transform, opacity;\n`;\n\nexport const rippleThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.blue.dark1};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.blue.light2};\n  `,\n};\n\nexport const rippleCheckedStyles = css`\n  // only animate ripple on enter\n  transition-duration: ${rippleTransitionScale * checkAnimationDuration}ms;\n  transition-delay: ${rippleTransitionDelay * checkAnimationDuration}ms;\n  transform: scale(${rippleScale});\n  opacity: 0;\n`;\n\nexport const checkIconStyles = css`\n  z-index: 1;\n  transform-origin: center;\n  transition: transform ${checkAnimationDuration}ms ease-in-out;\n`;\n\nexport const checkInStyles = css`\n  transform: scale(1) rotate(0);\n  transition-delay: ${checkAnimationDuration / 8}ms;\n`;\n\nexport const checkOutStyles = css`\n  transform: scale(0) rotate(-45deg);\n`;\n\nexport const checkIconTransitionStyles: Record<TransitionStatus, string> = {\n  entering: checkOutStyles,\n  entered: checkInStyles,\n  exiting: checkOutStyles,\n  exited: checkOutStyles,\n  unmounted: checkOutStyles,\n};\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { focusRing, hoverRing } from '@leafygreen-ui/tokens';\n\nimport { checkBoxSize } from '../constants';\n\nexport const checkWrapperClassName = createUniqueClassName('check-wrapper');\nexport const inputClassName = createUniqueClassName('input');\n\nexport const containerStyle = css`\n  display: grid;\n  grid-template-columns: ${checkBoxSize}px auto;\n  grid-template-areas: 'label label' '. description';\n  gap: 0 8px;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  z-index: 0;\n`;\n\n/** &:disabled won't work and [disabled] isn't a valid property because this isn't an input */\nexport const disabledContainerStyle = css`\n  cursor: not-allowed;\n`;\n\nexport const labelStyle = css`\n  grid-area: label;\n  display: grid;\n  grid-template-columns: ${checkBoxSize}px auto;\n  grid-template-areas: 'check text';\n  gap: 8px;\n  justify-content: flex-start;\n  align-items: baseline;\n  cursor: pointer;\n`;\n\nexport const labelHoverSelector = `\n  &:hover:not(:focus-within)\n    > .${inputClassName}:not([disabled])\n      + .${checkWrapperClassName}\n`;\n\nexport const labelHoverStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    ${labelHoverSelector} {\n      box-shadow: ${hoverRing.light.gray};\n    }\n  `,\n  [Theme.Dark]: css`\n    ${labelHoverSelector} {\n      box-shadow: ${hoverRing.dark.gray};\n    }\n  `,\n};\n\nexport const disabledLabelStyle = css`\n  cursor: not-allowed;\n`;\n\nexport const inputStyle = css`\n  margin: 0;\n  position: absolute;\n  height: 0;\n  width: 0;\n  left: 0;\n  top: 0;\n  pointer-events: none;\n  opacity: 0;\n`;\n\nexport const inputFocusStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible + .${checkWrapperClassName} {\n      box-shadow: ${focusRing.light.default};\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible + .${checkWrapperClassName} {\n      box-shadow: ${focusRing.dark.default};\n    }\n  `,\n};\n\nexport const labelTextStyle = css`\n  align-self: baseline;\n`;\n\nexport const descriptionStyle = css`\n  grid-area: description;\n`;\n\nexport const labelTextColorStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.black};\n  `,\n\n  [Theme.Dark]: css`\n    color: ${palette.gray.light2};\n  `,\n};\n","import React from 'react';\n\nimport { palette } from '@leafygreen-ui/palette';\n\nconst SvgCheck = (props: any) => {\n  return (\n    <svg\n      width=\"10\"\n      height=\"10\"\n      viewBox=\"0 0 10 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M2 5.5L4.12132 7.62132L8.36396 3.37868\"\n        stroke={props.stroke ?? palette.white}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default SvgCheck;\n","import React from 'react';\n\nimport { palette } from '@leafygreen-ui/palette';\n\nconst SvgIndeterminate = (props: any) => {\n  return (\n    <svg\n      width=\"10\"\n      height=\"10\"\n      viewBox=\"0 0 10 10\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <line\n        x1=\"2\"\n        x2=\"8\"\n        y1=\"5\"\n        y2=\"5\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        stroke={props.stroke ?? palette.white}\n      />\n    </svg>\n  );\n};\n\nexport default SvgIndeterminate;\n","import React, { useRef } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { usePrefersReducedMotion } from '@leafygreen-ui/a11y';\nimport { cx } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { CheckProps } from '../Checkbox/Checkbox.types';\nimport { checkAnimationDuration } from '../constants';\n\nimport {\n  checkIconStyles,\n  checkIconTransitionStyles,\n  disableAnimation,\n  rippleBaseStyles,\n  rippleCheckedStyles,\n  rippleClassName,\n  rippleThemeStyles,\n  wrapperBaseStyle,\n  wrapperCheckedBaseStyle,\n  wrapperCheckedDisabledStyle,\n  wrapperCheckedThemeStyle,\n  wrapperDisabledStyle,\n  wrapperThemeStyle,\n} from './Check.style';\nimport SvgCheck from './SvgCheck';\nimport SvgIndeterminate from './SvgIndeterminate';\n\nconst checkIconColor: Record<Theme, Record<'default' | 'disabled', string>> = {\n  [Theme.Light]: {\n    default: palette.white,\n    disabled: palette.gray.light3,\n  },\n  [Theme.Dark]: {\n    default: palette.white,\n    disabled: palette.gray.dark1,\n  },\n};\n\n/**\n * @internal\n * @returns JSX.Element\n */\nexport function Check({\n  theme,\n  isChecked,\n  indeterminate,\n  disabled,\n  animate,\n  selector,\n}: CheckProps) {\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const CheckSVG = indeterminate ? SvgIndeterminate : SvgCheck;\n  const showCheckIcon = indeterminate || isChecked;\n  const shouldAnimate = animate && !indeterminate && !prefersReducedMotion;\n\n  const transitionRef = useRef<HTMLElement | null>(null);\n\n  return (\n    <>\n      <div\n        className={cx(selector, wrapperBaseStyle, wrapperThemeStyle[theme], {\n          [wrapperCheckedBaseStyle]: showCheckIcon,\n          [wrapperCheckedThemeStyle[theme]]: showCheckIcon,\n          [wrapperDisabledStyle[theme]]: disabled,\n          [wrapperCheckedDisabledStyle[theme]]: disabled && showCheckIcon,\n          [disableAnimation]: !shouldAnimate,\n        })}\n      >\n        <Transition\n          in={showCheckIcon}\n          timeout={prefersReducedMotion ? 0 : checkAnimationDuration}\n          enter={shouldAnimate}\n          exit={shouldAnimate}\n          nodeRef={transitionRef}\n        >\n          {state => (\n            <CheckSVG\n              stroke={\n                disabled\n                  ? checkIconColor[theme].disabled\n                  : checkIconColor[theme].default\n              }\n              className={cx(checkIconStyles, checkIconTransitionStyles[state], {\n                [disableAnimation]: !shouldAnimate,\n              })}\n            />\n          )}\n        </Transition>\n      </div>\n      <div\n        className={cx(\n          rippleClassName,\n          rippleBaseStyles,\n          rippleThemeStyles[theme],\n          {\n            [rippleCheckedStyles]: isChecked && shouldAnimate,\n            [disableAnimation]: !shouldAnimate,\n          },\n        )}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport LeafyGreenProvider, {\n  useDarkMode,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { fontWeights } from '@leafygreen-ui/tokens';\nimport {\n  Description,\n  Label,\n  useUpdatedBaseFontSize,\n} from '@leafygreen-ui/typography';\n\nimport { Check } from '../Check';\nimport { LGIDS_CHECKBOX } from '../constants';\n\nimport {\n  checkWrapperClassName,\n  containerStyle,\n  descriptionStyle,\n  disabledContainerStyle,\n  disabledLabelStyle,\n  inputClassName,\n  inputFocusStyles,\n  inputStyle,\n  labelHoverStyle,\n  labelStyle,\n  labelTextStyle,\n} from './Checkbox.style';\nimport { CheckboxProps } from './Checkbox.types';\n\n/**\n * Checkboxes should be used whenever a user has an option they’d like to opt in or out of.\n *\n * Unlike toggles, checkboxes are used for actions, or features, that don’t immediately turn on or off. Checkboxes are usually found in forms as opposed to config pages.\n */\nfunction Checkbox({\n  animate = true,\n  'aria-label': ariaLabel = 'checkbox',\n  baseFontSize: baseFontSizeProp,\n  bold: boldProp,\n  checked: checkedProp,\n  className,\n  darkMode: darkModeProp,\n  'data-lgid': dataLgId = LGIDS_CHECKBOX.root,\n  description,\n  disabled = false,\n  id: idProp,\n  indeterminate: indeterminateProp,\n  label = '',\n  onClick: onClickProp,\n  onChange: onChangeProp,\n  name,\n  style,\n  ...rest\n}: CheckboxProps) {\n  const { darkMode, theme } = useDarkMode(darkModeProp);\n  const baseFontSize = useUpdatedBaseFontSize(baseFontSizeProp);\n\n  const [checked, setChecked] = React.useState(false);\n  const isChecked = React.useMemo(\n    () => (checkedProp != null ? checkedProp : checked),\n    [checkedProp, checked],\n  );\n\n  const checkboxId = useIdAllocator({ prefix: 'checkbox', id: idProp });\n  const labelId = `${checkboxId}-label`;\n\n  // If a prop is passed, use the prop\n  // otherwise default bold if there's a description\n  const bold = boldProp ?? !!description;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChangeProp) {\n      onChangeProp(e);\n    }\n\n    if (checkedProp == null) {\n      setChecked(e.target.checked);\n    }\n  };\n\n  const onClick = (\n    e: React.MouseEvent<HTMLInputElement> & { target: HTMLInputElement },\n  ) => {\n    if (onClickProp) {\n      onClickProp(e);\n    }\n\n    // For Microsoft Edge and IE, when checkbox is indeterminate, change event does not fire when clicked.\n    // Explicitly call onChange for this case\n    if (indeterminateProp) {\n      onChange(e);\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <LeafyGreenProvider\n      baseFontSize={baseFontSize === 16 ? baseFontSize : 14}\n      darkMode={darkMode}\n    >\n      <div\n        className={cx(\n          containerStyle,\n          {\n            [disabledContainerStyle]: disabled,\n          },\n          className,\n        )}\n        data-lgid={dataLgId}\n        style={style}\n      >\n        <Label\n          id={labelId}\n          htmlFor={checkboxId}\n          disabled={disabled}\n          className={cx(labelStyle, labelHoverStyle[theme], {\n            [disabledLabelStyle]: disabled,\n          })}\n        >\n          <input\n            {...rest}\n            id={checkboxId}\n            className={cx(inputClassName, inputStyle, inputFocusStyles[theme])}\n            type=\"checkbox\"\n            name={name}\n            checked={isChecked}\n            aria-label={ariaLabel}\n            aria-disabled={disabled}\n            aria-checked={indeterminateProp ? 'mixed' : isChecked}\n            aria-labelledby={labelId}\n            onClick={onClick}\n            onChange={onChange}\n          />\n\n          <Check\n            theme={theme}\n            isChecked={isChecked}\n            indeterminate={indeterminateProp}\n            disabled={disabled}\n            animate={animate}\n            selector={checkWrapperClassName}\n          />\n\n          {label && (\n            <span\n              className={cx(labelTextStyle, {\n                [css`\n                  font-weight: ${fontWeights.regular};\n                `]: !bold,\n              })}\n            >\n              {label}\n            </span>\n          )}\n        </Label>\n\n        {description && (\n          <Description className={descriptionStyle} disabled={disabled}>\n            {description}\n          </Description>\n        )}\n      </div>\n    </LeafyGreenProvider>\n  );\n}\n\nCheckbox.displayName = 'Checkbox';\n\nCheckbox.propTypes = {\n  darkMode: PropTypes.bool,\n  description: PropTypes.string,\n  checked: PropTypes.bool,\n  label: PropTypes.node,\n  disabled: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  animate: PropTypes.bool,\n};\n\nexport default Checkbox;\n","import { getByLgId, queryBySelector } from '@lg-tools/test-harnesses';\n\nimport { LGIDS_TYPOGRAPHY } from '@leafygreen-ui/typography';\n\nimport { LGIDS_CHECKBOX } from '../constants';\n\nimport { CheckboxTestUtilsReturnType } from './getTestUtils.types';\n\nexport const getTestUtils = (\n  lgId: string = LGIDS_CHECKBOX.root,\n): CheckboxTestUtilsReturnType => {\n  /**\n   * Queries the DOM for the element using the `data-lgid` data attribute.\n   * Will throw if no element is found.\n   */\n  const element = getByLgId!(lgId);\n\n  /**\n   * Queries the `element` for the label element. Will return `null` if the label is not found.\n   */\n  const getLabel = queryBySelector<HTMLLabelElement>(\n    element,\n    `[data-lgid=${LGIDS_TYPOGRAPHY.label}]`,\n  );\n\n  /**\n   * Queries the `element` for the description element. Will return `null` if the desription is not found.\n   */\n  const getDescription = queryBySelector<HTMLElement>(\n    element,\n    `[data-lgid=${LGIDS_TYPOGRAPHY.description}]`,\n  );\n\n  /**\n   * Queries the `element` for the input element. Will return `null` if the input is not found.\n   */\n  const getInput = queryBySelector<HTMLInputElement>(\n    element,\n    `input[type=\"checkbox\"]`,\n  ) as HTMLInputElement;\n\n  /**\n   * Returns the disabled attribute on the input.\n   */\n  const isInputDisabled = () => {\n    const ariaDisabled = queryBySelector<HTMLElement>(\n      element,\n      '[aria-disabled=\"true\"]',\n    );\n\n    return !!ariaDisabled;\n  };\n\n  /**\n   * Returns the input value.\n   */\n  const getInputValue = () => {\n    return getInput.checked;\n  };\n\n  /**\n   * Returns whether ot not the input is indeterminate.\n   */\n  const isInputIndeterminate = () => {\n    const ariaDisabled = queryBySelector<HTMLElement>(\n      element,\n      '[aria-checked=\"mixed\"]',\n    );\n\n    return !!ariaDisabled;\n  };\n\n  return {\n    getLabel: () => getLabel,\n    getDescription: () => getDescription,\n    getInput: () => getInput,\n    isDisabled: () => isInputDisabled(),\n    isIndeterminate: () => isInputIndeterminate(),\n    getInputValue: () => getInputValue(),\n  };\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","checkBoxSize","checkAnimationDuration","transitionDuration","faster","insetPct","Math","sqrt","LGIDS_CHECKBOX","root","rippleClassName","createUniqueClassName","disableAnimation","css","_taggedTemplateLiteral","wrapperBaseStyle","wrapperThemeStyle","_defineProperty","Theme","Light","palette","gray","dark2","blue","base","Dark","light1","wrapperCheckedBaseStyle","wrapperCheckedThemeStyle","wrapperDisabledStyle","light2","light3","dark3","wrapperCheckedDisabledStyle","rippleBaseStyles","rippleThemeStyles","dark1","rippleCheckedStyles","checkIconStyles","checkInStyles","checkOutStyles","checkIconTransitionStyles","entering","entered","exiting","exited","unmounted","SvgCheck","props","_props$stroke","React","createElement","_extends","width","height","viewBox","fill","xmlns","d","stroke","white","strokeWidth","strokeLinecap","strokeLinejoin","SvgIndeterminate","x1","x2","y1","y2","checkIconColor","default","disabled","Check","_ref","theme","isChecked","indeterminate","animate","selector","prefersReducedMotion","usePrefersReducedMotion","CheckSVG","showCheckIcon","shouldAnimate","transitionRef","useRef","Fragment","className","cx","Transition","in","timeout","enter","exit","nodeRef","state","checkWrapperClassName","inputClassName","containerStyle","disabledContainerStyle","labelStyle","labelHoverSelector","concat","labelHoverStyle","hoverRing","light","dark","disabledLabelStyle","inputStyle","inputFocusStyles","focusRing","labelTextStyle","descriptionStyle","black","_excluded","Checkbox","_ref$animate","_ref$ariaLabel","ariaLabel","baseFontSizeProp","baseFontSize","boldProp","bold","checkedProp","checked","darkModeProp","darkMode","_ref$dataLgid","dataLgId","description","_ref$disabled","idProp","id","indeterminateProp","_ref$label","label","onClickProp","onClick","onChangeProp","onChange","name","style","rest","_objectWithoutProperties","_useDarkMode","useDarkMode","useUpdatedBaseFontSize","_React$useState2","_slicedToArray","useState","setChecked","useMemo","checkboxId","useIdAllocator","prefix","labelId","e","target","LeafyGreenProvider","Label","htmlFor","type","stopPropagation","fontWeights","regular","Description","displayName","propTypes","PropTypes","bool","string","node","func","oneOfType","number","getTestUtils","element","getByLgId","arguments","length","undefined","_getLabel","queryBySelector","LGIDS_TYPOGRAPHY","_getDescription","_getInput","getLabel","getDescription","getInput","isDisabled","isIndeterminate","getInputValue"],"mappings":"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"}