{"version":3,"file":"index.js","sources":["../../src/types.ts","../../src/styles.ts","../../src/PipelineContext.tsx","../../src/svgs/edges.ts","../../src/Counter.tsx","../../src/svgs/SegmentXs.tsx","../../src/svgs/SegmentS.tsx","../../src/svgs/SegmentM.tsx","../../src/svgs/SegmentL.tsx","../../src/Stage.tsx","../../src/TooltipText.tsx","../../src/Pipeline.tsx"],"sourcesContent":["import { ReactNode } from 'react';\n\nimport { HTMLElementProps } from '@leafygreen-ui/lib';\n\nexport const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Normal: 'normal',\n  Large: 'large',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport interface StateForStyles {\n  hasHiddenStages: boolean;\n  size: Size;\n}\n\nexport interface PipelineProps extends HTMLElementProps<'div', never> {\n  /**\n   * Content that will appear inside of the Pipeline component.\n   */\n  children: ReactNode;\n\n  /**\n   * Optional className prop to apply to Pipeline content container.\n   */\n  className?: string;\n\n  /**\n   * Alter the rendered size of the component\n   * @default 'normal'\n   */\n  size?: Size;\n\n  /**\n   * Renders the component with dark mode styles.\n   *\n   * @default false\n   */\n  darkMode?: boolean;\n}\n\nexport interface StageProps extends HTMLElementProps<'li', never> {\n  /**\n   * Content that will appear inside of the Stage component.\n   **/\n  children: ReactNode;\n\n  /**\n   * ClassName applied to Stage content container.\n   **/\n  className?: string;\n\n  /**\n   * Either a single number or an array of numbers which indicate at what percentage of the target's visibility\n   * the observer's callback should be executed.\n   */\n  threshold?: number | Array<number>;\n}\n\nexport interface CounterProps {\n  /**\n   * Content that will appear inside of the Counter component.\n   */\n  children?: ReactNode;\n\n  /**\n   * Classname applied to Counter content container.\n   **/\n  className?: string;\n}\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { transitionDuration, typeScales } from '@leafygreen-ui/tokens';\n\nimport { edges } from './svgs/edges';\nimport { Size } from './types';\n\nexport const svgInnerOutlineClassName = createUniqueClassName('pipeline');\nexport const svgOuterOutlineClassName = createUniqueClassName('pipeline');\nexport const svgInnerClassName = createUniqueClassName('pipeline');\n\n// base styles\n\nexport const basePipelineStyles = css`\n  display: flex;\n  counter-reset: hiddenCount;\n  font-weight: 600;\n`;\n\nexport const basePipelineListStyles = css`\n  display: flex;\n  flex-grow: 1;\n  flex-wrap: wrap;\n  overflow: hidden;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  min-width: 74px;\n`;\n\nexport const baseSizeStyles: Record<Size, string> = {\n  [Size.XSmall]: css`\n    font-size: ${typeScales.body1.fontSize}px;\n    height: 22px;\n  `,\n  [Size.Small]: css`\n    font-size: ${typeScales.body1.fontSize}px;\n    height: 28px;\n  `,\n  [Size.Normal]: css`\n    font-size: ${typeScales.body1.fontSize}px;\n    height: 36px;\n  `,\n  [Size.Large]: css`\n    font-size: 18px;\n    height: 48px;\n  `,\n};\n\n// Counter Styles\n\nexport const counterVisibleStyles = css`\n  display: flex;\n`;\n\nexport const counterSvgBaseStyles = css`\n  position: absolute;\n  width: 100%;\n  height: calc(100% + 10px);\n  display: flex;\n`;\n\nexport const counterSvgColStyles = css`\n  width: 50%;\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const counterSizeStyles: Record<Size, string> = {\n  [Size.XSmall]: css`\n    min-width: 44px;\n    margin-left: -6px;\n\n    &::before {\n      padding: 0 18px;\n    }\n  `,\n  [Size.Small]: css`\n    min-width: 48px;\n    margin-left: -8px;\n\n    &::before {\n      padding: 0 21px;\n    }\n  `,\n  [Size.Normal]: css`\n    min-width: 54px;\n    margin-left: -9px;\n\n    &::before {\n      padding: 0 23px;\n    }\n  `,\n  [Size.Large]: css`\n    min-width: 66px;\n    margin-left: -11px;\n\n    &::before {\n      padding: 0px 28px;\n    }\n  `,\n};\n\nexport const counterBaseStyles = cx(\n  css`\n    display: none;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-left: -11px;\n    &::before {\n      white-space: nowrap;\n      content: '+' counter(hiddenCount);\n      z-index: 1;\n    }\n\n    .${svgInnerClassName} {\n      transition: all ${transitionDuration.slower}ms ease-in-out;\n    }\n\n    .${svgInnerOutlineClassName}, .${svgOuterOutlineClassName} {\n      fill: rgba(255, 255, 255, 0);\n      transition: all ${transitionDuration.slower}ms ease-in-out;\n    }\n\n    &:focus-visible,\n    &:focus {\n      outline: none;\n    }\n  `,\n);\n\nexport const svgStyles = css`\n  position: absolute;\n  top: 50%;\n  transform: translate(0%, -50%);\n`;\n\nexport const svgLayer1Styles = cx(\n  svgStyles,\n  css`\n    left: 0;\n  `,\n);\n\nexport const svgLayer2Styles = cx(\n  svgStyles,\n  css`\n    right: 0;\n  `,\n);\n\nexport const counterThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.blue.dark1};\n\n    .${svgInnerClassName} {\n      fill: ${palette.blue.light3};\n    }\n\n    &:focus-visible {\n      .${svgOuterOutlineClassName} {\n        fill: ${palette.blue.light1};\n      }\n    }\n\n    &:hover {\n      .${svgInnerOutlineClassName} {\n        fill: ${palette.blue.light3};\n      }\n      .${svgInnerClassName} {\n        fill: ${palette.blue.light2};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.blue.light2};\n\n    .${svgInnerClassName} {\n      fill: ${palette.blue.dark2};\n    }\n\n    &:focus-visible {\n      .${svgOuterOutlineClassName} {\n        fill: ${palette.blue.light1};\n      }\n    }\n\n    &:hover {\n      .${svgInnerOutlineClassName} {\n        fill: ${palette.blue.dark2};\n      }\n      .${svgInnerClassName} {\n        fill: ${palette.blue.dark1};\n      }\n    }\n  `,\n};\n\n// Stage Styles\n\nexport const stageTextStyles = css`\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const stageTextSizeStyles: Record<Size, string> = {\n  [Size.XSmall]: css`\n    padding: 0 6px;\n  `,\n  [Size.Small]: css`\n    padding: 0 6px;\n  `,\n  [Size.Normal]: css`\n    padding: 0 8px;\n  `,\n  [Size.Large]: css`\n    padding: 0 12px;\n  `,\n};\n\nexport const stageTextThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.blue.light2};\n    color: ${palette.blue.dark1};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.blue.dark1};\n    color: ${palette.blue.light2};\n  `,\n};\n\nexport const stageBaseStyles = cx(\n  css`\n    display: flex;\n    flex-grow: 1;\n    height: 100%;\n\n    &[data-stage-visible='false'] {\n      counter-increment: hiddenCount;\n    }\n\n    &::before,\n    &::after {\n      content: '';\n      display: inline-block;\n      flex-shrink: 0;\n      position: relative;\n      height: 100%;\n    }\n\n    &:first-of-type {\n      span {\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n      }\n    }\n  `,\n);\n\nexport const stageSvgThemeStyles: Record<Theme, string> = {\n  [Theme.Dark]: css`\n    &:not(&:first-of-type) {\n      &::before {\n        background: ${palette.blue.dark1};\n        right: -1px;\n      }\n    }\n    &::after {\n      background: ${palette.blue.dark1};\n      left: -1px;\n    }\n  `,\n  [Theme.Light]: css`\n    &:not(&:first-of-type) {\n      &::before {\n        background: ${palette.blue.light2};\n        right: -1px;\n      }\n    }\n    &::after {\n      background: ${palette.blue.light2};\n      left: -1px;\n    }\n  `,\n};\n\n// Adding edges of segments as an SVG with CSS\nexport const stageSvgSizeStyles: Record<Size, string> = {\n  [Size.XSmall]: css`\n    &:first-of-type {\n      span {\n        padding-left: 10px;\n      }\n    }\n    &:not(&:first-of-type) {\n      margin-left: -3px;\n      &::before {\n        mask: url('${edges[Size.XSmall].before}');\n        width: 7px;\n      }\n    }\n    &::after {\n      mask: url('${edges[Size.XSmall].after}');\n      width: 9px;\n    }\n  `,\n  [Size.Small]: css`\n    &:first-of-type {\n      span {\n        padding-left: 10px;\n      }\n    }\n    &:not(&:first-of-type) {\n      margin-left: -6px;\n      &::before {\n        mask: url('${edges[Size.Small].before}');\n        width: 9px;\n      }\n    }\n    &::after {\n      mask: url('${edges[Size.Small].after}');\n      width: 11px;\n    }\n  `,\n  [Size.Normal]: css`\n    &:first-of-type {\n      span {\n        padding-left: 12px;\n      }\n    }\n    &:not(&:first-of-type) {\n      margin-left: -7px;\n      &::before {\n        mask: url('${edges[Size.Normal].before}');\n        width: 13px;\n      }\n    }\n    &::after {\n      mask: url('${edges[Size.Normal].after}');\n      width: 13px;\n    }\n  `,\n  [Size.Large]: css`\n    &:first-of-type {\n      span {\n        padding-left: 15px;\n      }\n    }\n    &:not(&:first-of-type) {\n      margin-left: -8px;\n      &::before {\n        mask: url('${edges[Size.Large].before}');\n        width: 13px;\n      }\n    }\n    &::after {\n      mask: url('${edges[Size.Large].after}');\n      width: 15px;\n    }\n  `,\n};\n\nexport const tooltipStyles = css`\n  max-width: 400px;\n`;\n\nexport const tooltipTextStyles = css`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 2px;\n\n  span {\n    display: inline-flex;\n  }\n`;\n","import { createContext } from 'react';\n\nimport { Theme } from '@leafygreen-ui/lib';\n\nimport { Size } from './types';\n\ninterface PipelineData {\n  theme: Theme;\n  size: Size;\n  intersectionNode: HTMLElement | null;\n  isPipelineComponent: boolean;\n}\n\nexport const PipelineContext = createContext<PipelineData>({\n  theme: Theme.Light,\n  size: Size.Normal,\n  intersectionNode: null,\n  isPipelineComponent: false,\n});\n\nexport default PipelineContext;\n","import { Size } from '../types';\n\n// https://yoksel.github.io/url-encoder/\n// I was having trouble adding these as SVG files because they kept importing as react components so I went with this route.\n// If I were to use SVG files I would still need to map them to the correct size and position.\n// If I were to switch over to clip-path instead of using a mask I would still need an edge object to map each path so I stuck with SVGs and data URIs\n\nexport const edges: Record<Size, Record<'before' | 'after', string>> = {\n  [Size.XSmall]: {\n    before:\n      'data:image/svg+xml,%3Csvg width=\"7\" height=\"22\" viewBox=\"0 0 7 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0.20473 1.43966C-0.120489 0.775287 0.363189 0 1.10289 0H6.5V22H1.10289C0.363189 22 -0.12049 21.2247 0.204729 20.5603L3.80852 13.1983C4.48743 11.8114 4.48743 10.1886 3.80852 8.8017L0.20473 1.43966Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n    after:\n      'data:image/svg+xml,%3Csvg width=\"9\" height=\"22\" viewBox=\"0 0 9 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0 0H0.90983C2.80369 0 4.53501 1.07001 5.38197 2.76393L8.38197 8.76393C9.08578 10.1716 9.08578 11.8284 8.38197 13.2361L5.38197 19.2361C4.53501 20.93 2.80369 22 0.90983 22H0V0Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E',\n  },\n  [Size.Small]: {\n    before:\n      'data:image/svg+xml,%3Csvg width=\"9\" height=\"28\" viewBox=\"0 0 9 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0.723608 1.44722C0.391157 0.782314 0.874652 0 1.61803 0H9V28H1.61803C0.874652 28 0.391156 27.2177 0.723607 26.5528L5.88197 16.2361C6.58578 14.8284 6.58578 13.1716 5.88197 11.7639L0.723608 1.44722Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n    after:\n      'data:image/svg+xml,%3Csvg width=\"11\" height=\"28\" viewBox=\"0 0 11 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0 0H0.740465C2.61281 0 4.32824 1.04608 5.18554 2.71062L9.82088 11.7106C10.5608 13.1472 10.5608 14.8528 9.82088 16.2894L5.18554 25.2894C4.32824 26.9539 2.61281 28 0.740465 28H0V0Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n  },\n  [Size.Normal]: {\n    before:\n      'data:image/svg+xml,%3Csvg width=\"13\" height=\"36\" viewBox=\"0 0 13 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0.738496 1.45307C0.400389 0.78781 0.883717 0 1.62997 0H13V36H1.62997C0.883718 36 0.400389 35.2122 0.738496 34.5469L7.99682 20.2654C8.72033 18.8418 8.72033 17.1582 7.99682 15.7346L0.738496 1.45307Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n    after:\n      'data:image/svg+xml,%3Csvg width=\"13\" height=\"36\" viewBox=\"0 0 13 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0 0H0.90983C2.80369 0 4.53501 1.07001 5.38197 2.76393L11.882 15.7639C12.5858 17.1716 12.5858 18.8284 11.882 20.2361L5.38196 33.2361C4.535 34.93 2.80369 36 0.90983 36H0V0Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n  },\n  [Size.Large]: {\n    before:\n      'data:image/svg+xml,%3Csvg width=\"13\" height=\"48\" viewBox=\"0 0 13 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0.223607 1.44721C-0.108843 0.782313 0.374652 0 1.11803 0H13V48H1.11803C0.374652 48 -0.108844 47.2177 0.223607 46.5528L10.382 26.2361C11.0858 24.8284 11.0858 23.1716 10.382 21.7639L0.223607 1.44721Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n    after:\n      'data:image/svg+xml,%3Csvg width=\"15\" height=\"48\" viewBox=\"0 0 15 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cpath d=\"M0 0H0.851465C2.77563 0 4.52907 1.10416 5.36055 2.8394L14.4647 21.8394C15.1193 23.2054 15.1193 24.7946 14.4647 26.1606L5.36054 45.1606C4.52907 46.8958 2.77563 48 0.851465 48H0V0Z\" fill=\"%23C3E7FE\"/%3E%3C/svg%3E%0A',\n  },\n};\n","import React, { forwardRef, ReactElement, Ref, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\n\nimport PipelineContext from './PipelineContext';\nimport {\n  counterBaseStyles,\n  counterSizeStyles,\n  counterSvgBaseStyles,\n  counterSvgColStyles,\n  counterThemeStyles,\n  svgLayer1Styles,\n  svgLayer2Styles,\n} from './styles';\nimport { SegmentL, SegmentM, SegmentS, SegmentXs } from './svgs';\nimport { CounterProps, Size } from './types';\n\nconst segments: Record<Size, React.ComponentType<any>> = {\n  [Size.XSmall]: SegmentXs,\n  [Size.Small]: SegmentS,\n  [Size.Normal]: SegmentM,\n  [Size.Large]: SegmentL,\n} as const;\n\n/**\n * # Counter\n *\n * React Component to render the counter for the number of hidden stages in the Pipeline component.\n *\n * ```\n * <Counter />\n * ```\n * @internal\n * @param props.className Classname applied to Counter content container.\n */\nconst Counter = forwardRef(\n  (\n    { className = '', children, ...rest }: CounterProps,\n    ref: Ref<HTMLDivElement>,\n  ): ReactElement => {\n    const { theme, size } = useContext(PipelineContext);\n    const Icon = segments[size];\n\n    return (\n      <div\n        {...rest}\n        data-testid=\"pipeline-counter\"\n        className={cx(\n          counterBaseStyles,\n          counterSizeStyles[size],\n          counterThemeStyles[theme],\n          className,\n        )}\n        ref={ref}\n        // Adding this so on focus the tooltip will show up\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={0}\n      >\n        {/* The counter is a unique shape with focus and hover state that are not easily accomplished with css alone so we are using an SVG. The reason we have 2 SVGs is to mimic the behavior of a div expanding horizontally when the text increases since an SVG does not stretch horizontally while maintaining its height.*/}\n        <div className={counterSvgBaseStyles}>\n          <div className={counterSvgColStyles}>\n            <Icon className={svgLayer1Styles} />\n          </div>\n          <div className={counterSvgColStyles}>\n            <Icon className={svgLayer2Styles} />\n          </div>\n        </div>\n        {/* Children will be the tooltip provided by the Pipeline component */}\n        {children}\n      </div>\n    );\n  },\n);\n\nCounter.displayName = 'Counter';\n\nCounter.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default Counter;\n","import * as React from 'react';\n\nimport {\n  svgInnerClassName,\n  svgInnerOutlineClassName,\n  svgOuterOutlineClassName,\n} from '../styles';\n\n/**\n * @internal\n */\nexport const SegmentXs = ({ className }: { className: string }) => {\n  return (\n    <svg\n      width=\"44\"\n      height=\"30\"\n      viewBox=\"0 0 44 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      preserveAspectRatio=\"xMaxYMid slice\"\n    >\n      <path\n        d=\"M4.11193 5.45714C3.76988 4.79164 4.25308 4 5.00133 4H31.2485C33.1382 4 34.8664 5.06528 35.7154 6.75342L38.7331 12.7534C39.4439 14.1668 39.4439 15.8332 38.7331 17.2466L35.7154 23.2466C34.8664 24.9347 33.1382 26 31.2485 26H5.00133C4.25308 26 3.76988 25.2084 4.11193 24.5429L7.84202 17.2857C8.57938 15.8511 8.57938 14.1489 7.84202 12.7143L4.11193 5.45714Z\"\n        className={svgInnerClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.00399 2C2.75924 2 1.30964 4.37493 2.3358 6.37141L6.06589 13.6286C6.5083 14.4893 6.5083 15.5107 6.06589 16.3714L2.3358 23.6286C1.30964 25.6251 2.75923 28 5.00399 28H31.2512C33.8967 28 36.3162 26.5086 37.5048 24.1452L40.5225 18.1452C41.5177 16.1665 41.5177 13.8335 40.5225 11.8548L37.5048 5.85478C36.3162 3.49139 33.8967 2 31.2512 2H5.00399ZM5.00133 4C4.25308 4 3.76988 4.79165 4.11193 5.45714L7.84202 12.7143C8.57938 14.1489 8.57938 15.8511 7.84202 17.2857L4.11193 24.5429C3.76988 25.2084 4.25308 26 5.00133 26H31.2485C33.1382 26 34.8664 24.9347 35.7154 23.2466L38.7331 17.2466C39.4439 15.8332 39.4439 14.1668 38.7331 12.7534L35.7154 6.75342C34.8664 5.06528 33.1382 4 31.2485 4H5.00133Z\"\n        className={svgInnerOutlineClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.00665 0C1.2654 0 -1.1506 3.95822 0.559665 7.28569L4.28975 14.5429C4.43723 14.8298 4.43722 15.1702 4.28975 15.4571L0.559665 22.7143C-1.1506 26.0418 1.26539 30 5.00665 30H31.2539C34.6552 30 37.7659 28.0825 39.2942 25.0439L42.3119 19.0439C43.5914 16.4998 43.5914 13.5002 42.3119 10.9562L39.2942 4.95615C37.7659 1.9175 34.6552 0 31.2539 0H5.00665ZM5.00399 2C2.75924 2 1.30964 4.37493 2.3358 6.37141L6.06589 13.6286C6.5083 14.4893 6.5083 15.5107 6.06589 16.3714L2.3358 23.6286C1.30964 25.6251 2.75923 28 5.00399 28H31.2512C33.8967 28 36.3162 26.5086 37.5048 24.1452L40.5225 18.1452C41.5177 16.1665 41.5177 13.8335 40.5225 11.8548L37.5048 5.85478C36.3162 3.49139 33.8967 2 31.2512 2H5.00399Z\"\n        className={svgOuterOutlineClassName}\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  svgInnerClassName,\n  svgInnerOutlineClassName,\n  svgOuterOutlineClassName,\n} from '../styles';\n\n/**\n * @internal\n */\nexport const SegmentS = ({ className }: { className: string }) => {\n  return (\n    <svg\n      width=\"48\"\n      height=\"36\"\n      viewBox=\"0 0 48 36\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      preserveAspectRatio=\"xMaxYMid slice\"\n    >\n      <path\n        d=\"M4.10489 5.44327C3.77622 4.77863 4.25982 4 5.00127 4H34.275C36.1655 4 37.8944 5.06629 38.743 6.75567L43.2638 15.7557C43.9732 17.1678 43.9732 18.8322 43.2638 20.2443L38.743 29.2443C37.8944 30.9337 36.1655 32 34.275 32H5.00127C4.25982 32 3.77622 31.2214 4.10489 30.5567L9.21826 20.2163C9.90901 18.8195 9.90901 17.1805 9.21826 15.7837L4.10489 5.44327Z\"\n        className={svgInnerClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.31466 6.32981C1.32866 4.3359 2.77945 2 5.00382 2H34.2776C36.9243 2 39.3447 3.49281 40.5327 5.85793L45.0536 14.8579C46.0466 16.8349 46.0466 19.1651 45.0536 21.1421L40.5327 30.1421C39.3447 32.5072 36.9243 34 34.2776 34H5.00382C2.77945 34 1.32866 31.6641 2.31466 29.6702L7.42804 19.3298C7.84248 18.4917 7.84248 17.5083 7.42804 16.6702L2.31466 6.32981ZM5.00382 4C4.26237 4 3.77877 4.77863 4.10744 5.44327L9.22081 15.7837C9.91156 17.1805 9.91156 18.8195 9.22081 20.2163L4.10744 30.5567C3.77877 31.2214 4.26237 32 5.00382 32H34.2776C36.1681 32 37.897 30.9337 38.7455 29.2443L43.2664 20.2443C43.9757 18.8322 43.9757 17.1678 43.2664 15.7557L38.7456 6.75567C37.897 5.06629 36.1681 4 34.2776 4H5.00382Z\"\n        className={svgInnerOutlineClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M42.3225 31.0398L46.8433 22.0398C48.1201 19.498 48.1201 16.502 46.8433 13.9602L42.3225 4.96021C40.795 1.91943 37.6831 0 34.2801 0H5.00637C1.29907 0 -1.1189 3.89307 0.524438 7.21631L5.63781 17.5566C5.77596 17.8362 5.77596 18.1638 5.63781 18.4434L0.524438 28.7837C-1.1189 32.1069 1.29907 36 5.00637 36H34.2801C37.6831 36 40.795 34.0806 42.3225 31.0398ZM2.31466 6.32981C1.32866 4.3359 2.77945 2 5.00382 2H34.2776C36.9243 2 39.3447 3.49281 40.5327 5.85793L45.0536 14.8579C46.0466 16.8349 46.0466 19.1651 45.0536 21.1421L40.5327 30.1421C39.3447 32.5072 36.9243 34 34.2776 34H5.00382C2.77945 34 1.32866 31.6641 2.31466 29.6702L7.42804 19.3298C7.84248 18.4917 7.84248 17.5083 7.42804 16.6702L2.31466 6.32981Z\"\n        className={svgOuterOutlineClassName}\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  svgInnerClassName,\n  svgInnerOutlineClassName,\n  svgOuterOutlineClassName,\n} from '../styles';\n\n/**\n * @internal\n */\nexport const SegmentM = ({ className }: { className: string }) => {\n  return (\n    <svg\n      width=\"54\"\n      height=\"44\"\n      viewBox=\"0 0 54 44\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      preserveAspectRatio=\"xMaxYMid slice\"\n    >\n      <path\n        d=\"M4.11698 5.46676C3.76551 4.8008 4.24835 4 5.00137 4H37.4848C39.3536 4 41.0664 5.04214 41.9254 6.70183L48.6535 19.7018C49.3994 21.1431 49.3994 22.8569 48.6535 24.2982L41.9254 37.2982C41.0664 38.9579 39.3536 40 37.4848 40H5.00137C4.24835 40 3.76551 39.1992 4.11698 38.5332L11.6111 24.3338C12.3819 22.8734 12.3819 21.1266 11.6111 19.6662L4.11698 5.46676Z\"\n        className={svgInnerClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.35095 6.40028C1.29652 4.40241 2.74506 2 5.0041 2H37.4876C40.1039 2 42.5018 3.459 43.7043 5.78256L50.4324 18.7826C51.4767 20.8004 51.4767 23.1996 50.4324 25.2174L43.7043 38.2175C42.5018 40.541 40.1039 42 37.4876 42H5.0041C2.74506 42 1.29652 39.5976 2.35095 37.5997L9.8451 23.4003C10.3076 22.524 10.3076 21.476 9.8451 20.5997L2.35095 6.40028ZM5.0041 4C4.25109 4 3.76824 4.80081 4.11971 5.46676L11.6139 19.6662C12.3846 21.1266 12.3846 22.8734 11.6139 24.3338L4.11971 38.5332C3.76824 39.1992 4.25109 40 5.0041 40H37.4876C39.3564 40 41.0692 38.9579 41.9281 37.2982L48.6562 24.2982C49.4021 22.8569 49.4021 21.1431 48.6562 19.7018L41.9281 6.70183C41.0692 5.04214 39.3564 4 37.4876 4H5.0041Z\"\n        className={svgInnerOutlineClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.00683 0C1.24177 0 -1.17247 4.00402 0.584909 7.33379L8.07906 21.5332C8.23322 21.8253 8.23322 22.1747 8.07906 22.4668L0.584907 36.6662C-1.17247 39.996 1.24176 44 5.00683 44H37.4903C40.8541 44 43.9371 42.1241 45.4833 39.1367L52.2114 26.1367C53.5541 23.5423 53.5541 20.4577 52.2114 17.8633L45.4833 4.86329C43.9372 1.87586 40.8541 0 37.4903 0H5.00683ZM2.35094 6.40028C1.29652 4.40241 2.74506 2 5.0041 2H37.4876C40.1039 2 42.5018 3.459 43.7043 5.78256L50.4324 18.7826C51.4767 20.8004 51.4767 23.1996 50.4324 25.2174L43.7043 38.2175C42.5018 40.541 40.1039 42 37.4876 42H5.0041C2.74506 42 1.29652 39.5976 2.35094 37.5997L2.35154 37.5986L9.8451 23.4003C10.3076 22.524 10.3076 21.476 9.8451 20.5997L2.35094 6.40028Z\"\n        className={svgOuterOutlineClassName}\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\n\nimport {\n  svgInnerClassName,\n  svgInnerOutlineClassName,\n  svgOuterOutlineClassName,\n} from '../styles';\n\n/**\n * @internal\n */\nexport const SegmentL = ({ className }: { className: string }) => {\n  return (\n    <svg\n      width=\"66\"\n      height=\"56\"\n      viewBox=\"0 0 66 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n      preserveAspectRatio=\"xMaxYMid slice\"\n    >\n      <path\n        d=\"M4.10631 5.44611C3.77492 4.78128 4.25844 4 5.00129 4H46.9582C48.8632 4 50.6026 5.08246 51.444 6.79152L60.7982 25.7915C61.4838 27.184 61.4838 28.816 60.7982 30.2085L51.444 49.2085C50.6026 50.9175 48.8632 52 46.9582 52H5.00129C4.25844 52 3.77492 51.2187 4.10631 50.5539L14.2366 30.2305C14.9368 28.8259 14.9368 27.1741 14.2366 25.7695L4.10631 5.44611Z\"\n        className={svgInnerClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.31892 6.33832C1.32475 4.34383 2.77534 2 5.00386 2H46.9608C49.6277 2 52.063 3.51544 53.2409 5.90813L62.5951 24.9081C63.5549 26.8576 63.5549 29.1424 62.5951 31.0919L53.2409 50.0919C52.063 52.4846 49.6277 54 46.9608 54H5.00386C2.77533 54 1.32476 51.6562 2.31892 49.6617L12.4492 29.3383C12.8693 28.4956 12.8693 27.5044 12.4492 26.6617L2.31892 6.33832ZM5.00386 4C4.26102 4 3.77749 4.78128 4.10888 5.44611L14.2392 25.7695C14.9393 27.1741 14.9393 28.8259 14.2392 30.2305L4.10888 50.5539C3.77749 51.2187 4.26102 52 5.00386 52H46.9608C48.8657 52 50.6052 50.9175 51.4466 49.2085L60.8008 30.2085C61.4863 28.816 61.4863 27.184 60.8008 25.7915L51.4466 6.79152C50.6052 5.08246 48.8657 4 46.9608 4H5.00386Z\"\n        className={svgInnerOutlineClassName}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M55.0378 50.9753L64.392 31.9753C65.626 29.4688 65.626 26.5312 64.392 24.0247L55.0378 5.02466C53.5233 1.94849 50.3923 0 46.9633 0H5.00642C1.29223 0 -1.12541 3.90649 0.531538 7.23047L10.6618 27.554C10.8019 27.8347 10.8019 28.1653 10.6618 28.446L0.531538 48.7695C-1.1254 52.0935 1.29222 56 5.00642 56H46.9633C50.3923 56 53.5233 54.0515 55.0378 50.9753ZM2.31892 6.33832C1.32475 4.34383 2.77534 2 5.00386 2H46.9608C49.6277 2 52.063 3.51544 53.2409 5.90813L62.5951 24.9081C63.5549 26.8576 63.5549 29.1424 62.5951 31.0919L53.2409 50.0919C52.063 52.4846 49.6277 54 46.9608 54H5.00386C2.77533 54 1.32476 51.6562 2.31892 49.6617L12.4492 29.3383C12.8693 28.4956 12.8693 27.5044 12.4492 26.6617L2.31892 6.33832Z\"\n        className={svgOuterOutlineClassName}\n      />\n    </svg>\n  );\n};\n","import React, { forwardRef, ReactElement, Ref, useContext } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\n\nimport PipelineContext from './PipelineContext';\nimport {\n  stageBaseStyles,\n  stageSvgSizeStyles,\n  stageSvgThemeStyles,\n  stageTextSizeStyles,\n  stageTextStyles,\n  stageTextThemeStyles,\n} from './styles';\nimport { Size, StageProps } from './types';\n\n/**\n * # Stage\n *\n * React Component to render an individual MongoDB Aggregation stage.\n * To be used in conjunction with Pipeline component as a child.\n *\n * ```\n * <Pipeline>\n *   <Stage>$match</Stage>\n *   <Stage>$addFields</Stage>\n *   <Stage>$limit</Stage>\n * </Pipeline>\n * ```\n * @param props.children Content that will appear inside of the Stage component.\n * @param props.className Classname applied to Stage content container.\n * @param props.threshold Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed.\n */\nconst Stage = forwardRef(\n  (\n    { children, className = '', threshold = 0.8, ...rest }: StageProps,\n    ref: Ref<HTMLLIElement>,\n  ): ReactElement => {\n    const { theme, size, isPipelineComponent, intersectionNode } =\n      useContext(PipelineContext);\n    // Effects\n    const [setRef, isVisible] = useInView({\n      threshold,\n      root: intersectionNode,\n    });\n\n    // If Stage is used outside of Pipeline throw an error\n    if (!isPipelineComponent) {\n      throw Error('`Stage` must be a child of a `Pipeline` instance');\n    }\n\n    return (\n      <li\n        {...rest}\n        ref={ref}\n        data-stage-visible={isVisible}\n        className={cx(\n          stageBaseStyles,\n          stageSvgThemeStyles[theme],\n          stageSvgSizeStyles[size as Size],\n          className,\n        )}\n        data-testid=\"pipeline-stage\"\n      >\n        <span\n          // if this ref is added to the <li> this component will keep re-rendering\n          ref={setRef}\n          className={cx(\n            stageTextStyles,\n            stageTextSizeStyles[size as Size],\n            stageTextThemeStyles[theme],\n          )}\n          data-testid=\"pipeline-stage-item\"\n        >\n          {children}\n        </span>\n      </li>\n    );\n  },\n);\n\nStage.displayName = 'Stage';\n\nStage.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  threshold: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.number.isRequired),\n  ]),\n};\n\nexport default Stage;\n","import React from 'react';\n\nimport ChevronRight from '@leafygreen-ui/icon/dist/ChevronRight';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { tooltipTextStyles } from './styles';\n\nexport interface TooltipTextProps {\n  hiddenStages: Array<string | null>;\n}\n\n/**\n * # TooltipText\n *\n * React Component to render the TooltipText for the number of hidden hiddenStages in the Pipeline component.\n *\n * input: ['one', 'two']\n * output:\n *  <div>\n *    <span>one</span>\n *    <span><Icon/></span>\n *    <span>two</span>\n *  </div>\n *\n * ```\n * <TooltipText />\n * ```\n * @internal\n */\nconst TooltipText = ({ hiddenStages }: TooltipTextProps) => {\n  return (\n    <div className={tooltipTextStyles}>\n      {hiddenStages.map((hiddenStage: string | null, index: number) => {\n        if (index === 0)\n          return (\n            <span key={`${hiddenStages[index]}-${index}`}>{hiddenStage}</span>\n          );\n\n        return (\n          <React.Fragment key={`${hiddenStages[index]}-${index}`}>\n            <span>\n              <ChevronRight size={12} fill={palette.gray.base} />\n            </span>\n            <span>{hiddenStage}</span>{' '}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nTooltipText.displayName = 'TooltipText';\n\nexport default TooltipText;\n","import React, {\n  createRef,\n  forwardRef,\n  ReactElement,\n  Ref,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useMutationObserver } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { isComponentType } from '@leafygreen-ui/lib';\nimport Tooltip from '@leafygreen-ui/tooltip';\n\nimport Counter from './Counter';\nimport { PipelineContext } from './PipelineContext';\nimport Stage from './Stage';\nimport {\n  basePipelineListStyles,\n  basePipelineStyles,\n  baseSizeStyles,\n  counterVisibleStyles,\n  tooltipStyles,\n} from './styles';\nimport TooltipText from './TooltipText';\nimport { PipelineProps, Size } from './types';\n\n/**\n *\n * React Component to render top-level MongoDB Aggregations in a visual format.\n * Handles overflowed content gracefully by indicating how many other stages are hidden.\n *\n * ```\n * <Pipeline>\n *   <Stage>$match</Stage>\n *   <Stage>$addFields</Stage>\n *   <Stage>$limit</Stage>\n * </Pipeline>\n * ```\n *\n * @param props.children Content that will appear inside of the Pipeline component.\n * @param props.className Classname applied to Pipeline content container.\n * @param props.size Alters the rendered size of the component.\n * @param props.variant Alters the visual appearance of the component.\n */\nconst Pipeline = forwardRef(\n  (\n    {\n      children,\n      className = '',\n      size = Size.Normal,\n      darkMode: darkModeProp,\n      ...rest\n    }: PipelineProps,\n    ref: Ref<HTMLDivElement>,\n  ): ReactElement => {\n    const { theme, darkMode } = useDarkMode(darkModeProp);\n    // State\n    const [pipelineNode, setPipelineNode] = useState<HTMLElement | null>(null);\n    const [hiddenStages, setHiddenStages] = useState<Array<string | null>>([]);\n\n    const providerData = useMemo(() => {\n      return {\n        theme,\n        size,\n        isPipelineComponent: true,\n        intersectionNode: pipelineNode,\n      };\n    }, [pipelineNode, size, theme]);\n\n    // Handlers\n    /**\n     * Sets the hidden stages. The mutation of the DOM is required otherwise the\n     * Stage components will re-render, triggering an infinite loop on the\n     * mutation observer.\n     */\n    const setAllHiddenStagesText = () => {\n      const allStages =\n        Array.from(pipelineNode!.children as HTMLCollectionOf<HTMLElement>) ||\n        [];\n\n      const allHiddenStages = allStages\n        .filter(element => element.dataset.stageVisible === 'false')\n        .map(element => element.textContent);\n\n      setHiddenStages(allHiddenStages);\n    };\n\n    /**\n     * Callback for the Mutation Observer.\n     * @param records The records for the observed mutation\n     */\n    const observeChanges = (records: Array<MutationRecord>) => {\n      const types = records.map(r => r.type);\n      const attrs = records.map(r => r.attributeName);\n\n      if (attrs.includes('data-stage-visible') || types.includes('childList')) {\n        setAllHiddenStagesText();\n      }\n    };\n\n    // Effects\n    useMutationObserver(\n      pipelineNode,\n      {\n        childList: true,\n        subtree: true,\n        attributes: true,\n      },\n      observeChanges,\n    );\n\n    const childrenAsPipelineStages = React.Children.map(children, child => {\n      const props = {\n        ref: createRef<HTMLLIElement>(),\n      };\n\n      if (isComponentType(child, 'Stage')) {\n        const { children, ...rest } = child.props;\n        const combinedProps = {\n          ...props,\n          ...rest,\n        };\n        return <Stage {...combinedProps}>{children}</Stage>;\n      }\n\n      return <Stage {...props}>{child}</Stage>;\n    });\n\n    return (\n      <PipelineContext.Provider value={providerData}>\n        <div\n          {...rest}\n          data-testid=\"pipeline\"\n          ref={ref}\n          className={cx(baseSizeStyles[size], basePipelineStyles, className)}\n        >\n          <ol\n            ref={setPipelineNode}\n            data-testid=\"pipeline-stages\"\n            className={cx(basePipelineListStyles)}\n          >\n            {childrenAsPipelineStages}\n          </ol>\n\n          {/* Removing the component was causing an unmounted error so instead we're hiding it with css */}\n          <Tooltip\n            align=\"top\"\n            justify=\"middle\"\n            trigger={\n              <Counter\n                className={cx({\n                  [counterVisibleStyles]: !!hiddenStages.length,\n                })}\n              />\n            }\n            triggerEvent=\"hover\"\n            darkMode={darkMode}\n            className={tooltipStyles}\n          >\n            <TooltipText hiddenStages={hiddenStages} />\n          </Tooltip>\n        </div>\n      </PipelineContext.Provider>\n    );\n  },\n);\n\nPipeline.displayName = 'Pipeline';\n\nPipeline.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  size: PropTypes.oneOf(Object.values(Size)).isRequired,\n  darkMode: PropTypes.bool,\n};\n\nexport default Pipeline;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","Size","XSmall","Small","Normal","Large","PipelineContext","createContext","theme","Theme","Light","size","intersectionNode","isPipelineComponent","edges","_defineProperty","before","after","svgInnerOutlineClassName","createUniqueClassName","svgOuterOutlineClassName","svgInnerClassName","basePipelineStyles","css","_taggedTemplateLiteral","basePipelineListStyles","baseSizeStyles","typeScales","body1","fontSize","counterVisibleStyles","counterSvgBaseStyles","counterSvgColStyles","counterSizeStyles","counterBaseStyles","cx","transitionDuration","slower","svgStyles","svgLayer1Styles","svgLayer2Styles","counterThemeStyles","palette","blue","dark1","light3","light1","light2","Dark","dark2","stageTextStyles","stageTextSizeStyles","stageTextThemeStyles","stageBaseStyles","stageSvgThemeStyles","stageSvgSizeStyles","tooltipStyles","tooltipTextStyles","_excluded","segments","_ref","className","React","createElement","width","height","viewBox","fill","xmlns","preserveAspectRatio","d","fillRule","clipRule","Counter","forwardRef","ref","_ref$className","children","rest","_objectWithoutProperties","_useContext","useContext","Icon","_extends","tabIndex","displayName","propTypes","PropTypes","node","string","Stage","_ref$threshold","threshold","_useInView2","_slicedToArray","useInView","root","setRef","isVisible","Error","isRequired","oneOfType","number","arrayOf","TooltipText","hiddenStages","map","hiddenStage","index","key","concat","Fragment","ChevronRight","gray","base","_excluded2","Pipeline","_ref$size","darkModeProp","darkMode","_useDarkMode","useDarkMode","_useState2","useState","pipelineNode","setPipelineNode","_useState4","setHiddenStages","providerData","useMemo","useMutationObserver","childList","subtree","attributes","records","allHiddenStages","types","r","type","attributeName","includes","Array","from","filter","element","dataset","stageVisible","textContent","childrenAsPipelineStages","Children","child","props","createRef","isComponentType","_child$props","_children","_rest","combinedProps","_objectSpread","Provider","value","Tooltip","align","justify","trigger","length","triggerEvent","oneOf","Object","values","bool"],"mappings":"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"}