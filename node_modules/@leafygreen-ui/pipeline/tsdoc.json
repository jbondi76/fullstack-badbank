[
  {
    "tags": {
      "param": "props.children Content that will appear inside of the Pipeline component.\nprops.className Classname applied to Pipeline content container.\nprops.size Alters the rendered size of the component.\nprops.variant Alters the visual appearance of the component."
    },
    "description": "\nReact Component to render top-level MongoDB Aggregations in a visual format.\nHandles overflowed content gracefully by indicating how many other stages are hidden.\n\n```\n<Pipeline>\n  <Stage>$match</Stage>\n  <Stage>$addFields</Stage>\n  <Stage>$limit</Stage>\n</Pipeline>\n```",
    "methods": [],
    "displayName": "Pipeline",
    "props": {
      "PipelineProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the Pipeline component.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": {
            "value": ""
          },
          "description": "Optional className prop to apply to Pipeline content container.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "normal"
          },
          "description": "Alter the rendered size of the component",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Size",
            "value": [
              {
                "value": "\"xsmall\""
              },
              {
                "value": "\"small\""
              },
              {
                "value": "\"normal\""
              },
              {
                "value": "\"large\""
              }
            ]
          },
          "tags": {
            "default": "'normal'"
          }
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  },
  {
    "tags": {
      "param": "props.children Content that will appear inside of the Stage component.\nprops.className Classname applied to Stage content container.\nprops.threshold Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed."
    },
    "description": "# Stage\n\nReact Component to render an individual MongoDB Aggregation stage.\nTo be used in conjunction with Pipeline component as a child.\n\n```\n<Pipeline>\n  <Stage>$match</Stage>\n  <Stage>$addFields</Stage>\n  <Stage>$limit</Stage>\n</Pipeline>\n```",
    "methods": [],
    "displayName": "Stage",
    "props": {
      "StageProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the Stage component.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": {
            "value": ""
          },
          "description": "ClassName applied to Stage content container.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "threshold": {
          "name": "threshold",
          "defaultValue": {
            "value": 0.8
          },
          "description": "Either a single number or an array of numbers which indicate at what percentage of the target's visibility\nthe observer's callback should be executed.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "number | number[]",
            "value": [
              {
                "value": "number"
              },
              {
                "value": "number[]",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "LiHTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li"
    }
  }
]