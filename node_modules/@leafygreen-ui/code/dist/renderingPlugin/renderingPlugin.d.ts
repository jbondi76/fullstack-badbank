import React from 'react';
import { LeafyGreenHLJSPlugin, TokenObject } from '../highlight';
export declare function generateKindClassName(...kinds: Array<any>): string;
type TreeItem = null | undefined | string | Array<string | TokenObject> | TokenObject;
export declare function processToken(token: TreeItem, key?: number): React.ReactNode;
interface LineTableRowProps {
    lineNumber?: number;
    children: React.ReactNode;
    highlighted?: boolean;
    darkMode: boolean;
}
export declare function LineTableRow({ lineNumber, highlighted, darkMode, children, }: LineTableRowProps): React.JSX.Element;
interface FlatTokenObject {
    kind: string;
    children: Array<string>;
}
export declare function flattenNestedTree(children: TokenObject['children'] | TokenObject, kind?: string): Array<string | FlatTokenObject>;
type LineDefinition = Array<Array<string | FlatTokenObject>>;
export declare function treeToLines(children: Array<string | TokenObject>): LineDefinition;
interface TableContentProps {
    lines: LineDefinition;
}
export declare function TableContent({ lines }: TableContentProps): React.JSX.Element;
declare const plugin: LeafyGreenHLJSPlugin;
export default plugin;
//# sourceMappingURL=renderingPlugin.d.ts.map