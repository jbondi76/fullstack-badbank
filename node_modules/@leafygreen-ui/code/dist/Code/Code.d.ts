import React from 'react';
import PropTypes from 'prop-types';
import { CodeProps } from '../types';
export declare function hasMultipleLines(string: string): boolean;
/**
 *
 * React Component that outputs single-line and multi-line code blocks.
 *
 * @param props.children The string to be formatted.
 * @param props.className An additional CSS class added to the root element of Code.
 * @param props.language The language used for syntax highlighting.
 * @param props.darkMode Determines if the code block will be rendered in dark mode. Default: `false`
 * @param props.showLineNumbers When true, shows line numbers in preformatted code blocks. Default: `false`
 * @param props.lineNumberStart Specifies the numbering of the first line in the block. Default: 1
 * @param props.copyable When true, allows the code block to be copied to the user's clipboard. Default: `true`
 * @param props.onCopy Callback fired when Code is copied
 */
declare function Code({ children, className, language: languageProp, darkMode: darkModeProp, showLineNumbers, lineNumberStart, showWindowChrome, chromeTitle, copyable, onCopy, highlightLines, languageOptions, onChange, customActionButtons, showCustomActionButtons, usePortal, portalClassName, portalContainer, scrollContainer, popoverZIndex, ...rest }: CodeProps): React.JSX.Element;
declare namespace Code {
    var displayName: string;
    var propTypes: {
        children: PropTypes.Validator<string>;
        language: PropTypes.Requireable<string>;
        darkMode: PropTypes.Requireable<boolean>;
        className: PropTypes.Requireable<string>;
        showLineNumbers: PropTypes.Requireable<boolean>;
        lineNumberStart: PropTypes.Requireable<number>;
        showWindowChrome: PropTypes.Requireable<boolean>;
        chromeTitle: PropTypes.Requireable<string>;
        highlightLines: PropTypes.Requireable<(NonNullable<number | (number | null | undefined)[] | null | undefined> | null | undefined)[]>;
    };
}
export default Code;
//# sourceMappingURL=Code.d.ts.map