[
  {
    "tags": {
      "param": "props.children The string to be formatted.\nprops.className An additional CSS class added to the root element of Code.\nprops.language The language used for syntax highlighting.\nprops.darkMode Determines if the code block will be rendered in dark mode. Default: `false`\nprops.showLineNumbers When true, shows line numbers in preformatted code blocks. Default: `false`\nprops.lineNumberStart Specifies the numbering of the first line in the block. Default: 1\nprops.copyable When true, allows the code block to be copied to the user's clipboard. Default: `true`\nprops.onCopy Callback fired when Code is copied"
    },
    "description": "\nReact Component that outputs single-line and multi-line code blocks.",
    "methods": [],
    "displayName": "Code",
    "props": {
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "SyntaxProps": {
        "children": {
          "name": "children",
          "defaultValue": {
            "value": ""
          },
          "description": "The children to render inside Code. This is usually going to be a formatted code block or line.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {
            "required": ""
          }
        },
        "showLineNumbers": {
          "name": "showLineNumbers",
          "defaultValue": {
            "value": false
          },
          "description": "Shows line numbers. This is specifically used for the Code component implementation.\n\ndefault: `false`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "lineNumberStart": {
          "name": "lineNumberStart",
          "defaultValue": {
            "value": 1
          },
          "description": "Specifies the number by which to start line numbering.\n\ndefault: `1`",
          "required": false,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "highlightLines": {
          "name": "highlightLines",
          "defaultValue": {
            "value": "[]"
          },
          "description": "An array of lines to highlight. The array can only contain numbers corresponding to the line numbers to highlight, and / or tuples representing a range (e.g. `[6, 10]`);",
          "required": false,
          "type": {
            "name": "LineHighlightingDefinition"
          },
          "tags": {}
        }
      },
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "CodeProps": {
        "showWindowChrome": {
          "name": "showWindowChrome",
          "defaultValue": {
            "value": false
          },
          "description": "Shows window chrome for code block;\n\ndefault: `false`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "chromeTitle": {
          "name": "chromeTitle",
          "defaultValue": {
            "value": ""
          },
          "description": "Renders a file name or other descriptor for a block of code",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "copyable": {
          "name": "copyable",
          "defaultValue": {
            "value": true
          },
          "description": "When true, allows the code block to be copied to the user's clipboard by clicking the rendered copy button.\n\ndefault: `true`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "onCopy": {
          "name": "onCopy",
          "defaultValue": null,
          "description": "Callback fired when Code is copied via the copy button.",
          "required": false,
          "type": {
            "name": "Function"
          },
          "tags": {}
        },
        "customActionButtons": {
          "name": "customActionButtons",
          "defaultValue": {
            "value": "[]"
          },
          "description": "Custom action buttons. Should be an array of `IconButton`.",
          "required": false,
          "type": {
            "name": "<IconButton />[]"
          },
          "tags": {
            "type": "<IconButton />[]"
          }
        },
        "showCustomActionButtons": {
          "name": "showCustomActionButtons",
          "defaultValue": {
            "value": false
          },
          "description": "When true, custom action buttons will be shown.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "`false`"
          },
          "description": "Determines whether or not the syntax will be rendered in dark mode.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "`false`"
          }
        },
        "language": {
          "name": "language",
          "defaultValue": null,
          "description": "The language to format the code. See {@link https://github.com/mongodb/leafygreen-ui/blob/main/packages/code/src/languages.ts | SupportedLanguages}.\nThe `displayName` of the selected `languageOption`",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "languageOptions": {
          "name": "languageOptions",
          "defaultValue": null,
          "description": "An array of `LanguageOptions` to select from. Enables the Language switcher.",
          "required": false,
          "type": {
            "name": "LanguageOption[]"
          },
          "tags": {}
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "Callback fired when the language option changes.",
          "required": false,
          "type": {
            "name": "(arg0: LanguageOption) => void"
          },
          "tags": {}
        }
      },
      "PopoverProps": {
        "usePortal": {
          "name": "usePortal",
          "defaultValue": {
            "value": true
          },
          "description": "Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "portalClassName": {
          "name": "portalClassName",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies a class name to apply to the root element of the portal.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "portalContainer": {
          "name": "portalContainer",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",
          "required": false,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "scrollContainer": {
          "name": "scrollContainer",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies the scrollable element to position relative to.",
          "required": false,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "popoverZIndex": {
          "name": "popoverZIndex",
          "defaultValue": null,
          "description": "Number that controls the z-index of the popover element directly.",
          "required": false,
          "type": {
            "name": "number"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "Panel",
    "props": {
      "LanguageSwitcher": {
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "(arg0: LanguageOption) => void"
          },
          "tags": {}
        },
        "languageOptions": {
          "name": "languageOptions",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "LanguageOption[]"
          },
          "tags": {}
        }
      },
      "PopoverProps": {
        "usePortal": {
          "name": "usePortal",
          "defaultValue": null,
          "description": "Specifies that the popover content should be rendered at the end of the DOM,\nrather than in the DOM tree.\n\ndefault: `true`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "portalClassName": {
          "name": "portalClassName",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies a class name to apply to the root element of the portal.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "portalContainer": {
          "name": "portalContainer",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies an element to portal within. The default behavior is to generate a div at the end of the document to render within.",
          "required": false,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "scrollContainer": {
          "name": "scrollContainer",
          "defaultValue": null,
          "description": "When usePortal is `true`, specifies the scrollable element to position relative to.",
          "required": false,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "popoverZIndex": {
          "name": "popoverZIndex",
          "defaultValue": null,
          "description": "Number that controls the z-index of the popover element directly.",
          "required": false,
          "type": {
            "name": "number"
          },
          "tags": {}
        }
      },
      "PanelProps": {
        "onCopy": {
          "name": "onCopy",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "Function"
          },
          "tags": {}
        },
        "contents": {
          "name": "contents",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "showCopyButton": {
          "name": "showCopyButton",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "language": {
          "name": "language",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "LanguageOption"
          },
          "tags": {}
        },
        "isMultiline": {
          "name": "isMultiline",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "customActionButtons": {
          "name": "customActionButtons",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "ReactElement<any, string | JSXElementConstructor<any>>[]"
          },
          "tags": {}
        },
        "showCustomActionButtons": {
          "name": "showCustomActionButtons",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "WindowChrome",
    "props": {
      "WindowChromeProps": {
        "chromeTitle": {
          "name": "chromeTitle",
          "defaultValue": {
            "value": ""
          },
          "description": "",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      }
    }
  }
]