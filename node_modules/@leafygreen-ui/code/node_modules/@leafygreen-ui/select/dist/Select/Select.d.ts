import React from 'react';
/**
 * Select inputs are typically used alongside other form elements like toggles, radio boxes, or text inputs when a user needs to make a selection from a list of items.
 *
 * In a select input where there are less than 3-4 items, consider using radio boxes, or radio inputs instead.
 */
export declare const Select: React.ForwardRefExoticComponent<(Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-labelledby" | "label">> & {
    defaultValue?: string | undefined;
    value?: undefined;
} & {
    onChange?: ((value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void) | undefined;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-labelledby" | "label">> & {
    value: string;
    defaultValue?: undefined;
} & {
    onChange: (value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-labelledby" | "label">> & {
    value: string;
    defaultValue?: undefined;
} & {
    readOnly: true;
    onChange?: undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-labelledby">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "label">> & {
    defaultValue?: string | undefined;
    value?: undefined;
} & {
    onChange?: ((value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void) | undefined;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-labelledby">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "label">> & {
    value: string;
    defaultValue?: undefined;
} & {
    onChange: (value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "aria-labelledby">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "label">> & {
    value: string;
    defaultValue?: undefined;
} & {
    readOnly: true;
    onChange?: undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby">> & {
    defaultValue?: string | undefined;
    value?: undefined;
} & {
    onChange?: ((value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void) | undefined;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby">> & {
    value: string;
    defaultValue?: undefined;
} & {
    onChange: (value: string, event: React.MouseEvent<Element, MouseEvent> | KeyboardEvent | React.KeyboardEvent<Element>) => void;
    readOnly?: false | undefined;
}, "ref"> | Omit<import("./Select.types").BaseSelectProps & Omit<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby" | "label"> & Required<Pick<import("./Select.types").LabelProp, "label">> & Partial<Pick<import("./Select.types").LabelProp, "aria-label" | "aria-labelledby">> & {
    value: string;
    defaultValue?: undefined;
} & {
    readOnly: true;
    onChange?: undefined;
}, "ref">) & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Select.d.ts.map