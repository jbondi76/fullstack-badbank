{"version":3,"file":"index.js","sources":["../src/InputOptionContext.ts","../src/InputOptionContent/InputOptionContent.styles.ts","../src/InputOption/InputOption.style.ts","../src/InputOptionContent/InputOptionContent.tsx","../src/InputOption/InputOption.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nimport { InputOptionProps } from './InputOption';\n\ninterface InputOptionContextData\n  extends Pick<\n    InputOptionProps,\n    'checked' | 'darkMode' | 'disabled' | 'highlighted'\n  > {}\n\nexport const InputOptionContext = createContext<InputOptionContextData>(\n  {} as InputOptionContextData,\n);\n\nexport const useInputOptionContext = () => useContext(InputOptionContext);\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport {\n  color,\n  spacing,\n  State,\n  transitionDuration,\n  Variant,\n} from '@leafygreen-ui/tokens';\n\nexport const inputOptionContentClassName = createUniqueClassName(\n  'input_option-content',\n);\nexport const titleClassName = createUniqueClassName('input_option-title');\nexport const descriptionClassName = createUniqueClassName(\n  'input_option-description',\n);\nexport const leftGlyphClassName = createUniqueClassName(\n  'input_option-left-glyph',\n);\n\nexport const getContentWrapperStyles = ({\n  hasLeftGlyph,\n  hasRightGlyph,\n}: {\n  hasLeftGlyph: boolean;\n  hasRightGlyph: boolean;\n}) => {\n  const col1Name = hasLeftGlyph ? 'left-glyph' : 'text';\n  const col3Name = hasRightGlyph ? 'right-glyph' : 'text';\n\n  return css`\n    display: grid;\n    grid-template-columns: ${spacing[400]}px 1fr ${spacing[400]}px;\n    grid-template-areas: '${col1Name} text ${col3Name}';\n    gap: ${spacing[200]}px;\n    align-items: center;\n    width: 100%;\n  `;\n};\n\ninterface InputOptionStyleArgs {\n  theme: Theme;\n  disabled?: boolean;\n  highlighted?: boolean;\n}\n\nexport const getLeftGlyphStyles = ({\n  theme,\n  disabled,\n  highlighted,\n}: InputOptionStyleArgs) => {\n  const variant = disabled ? Variant.Disabled : Variant.Primary;\n  const interactionState = highlighted ? State.Focus : State.Default;\n\n  return css`\n    grid-area: left-glyph;\n    display: flex;\n    align-items: center;\n    // Hover styles set by parent InputOption\n    color: ${color[theme].icon[variant][interactionState]};\n    transition: color ${transitionDuration.default}ms ease-in-out;\n  `;\n};\n\nexport const getRightGlyphStyles = ({\n  theme,\n  disabled,\n}: InputOptionStyleArgs) => {\n  const variant = disabled ? Variant.Disabled : Variant.Primary;\n\n  return css`\n    grid-area: right-glyph;\n    display: flex;\n    align-items: center;\n    color: ${color[theme].icon[variant].default};\n    transition: color ${transitionDuration.default}ms ease-in-out;\n  `;\n};\n\nexport const textContainerStyles = css`\n  grid-area: text;\n  line-height: ${spacing[400]}px;\n`;\n\nexport const getTitleStyles = ({\n  theme,\n  highlighted,\n  disabled,\n}: InputOptionStyleArgs) => css`\n  overflow-wrap: anywhere;\n  font-size: inherit;\n  line-height: inherit;\n  font-weight: normal;\n  transition: color ${transitionDuration.default}ms ease-in-out;\n\n  ${highlighted &&\n  !disabled &&\n  css`\n    font-weight: bold;\n    color: ${color[theme].text.primary.focus};\n  `}\n`;\n\nexport const getDescriptionStyles = () => {\n  return css`\n    max-height: ${spacing[1200]}px;\n    overflow: hidden;\n    font-size: inherit;\n    line-height: inherit;\n    text-overflow: ellipsis;\n    transition: color ${transitionDuration.default}ms ease-in-out;\n  `;\n};\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  color,\n  fontFamilies,\n  InteractionState,\n  spacing,\n  transitionDuration,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nimport { leftGlyphClassName, titleClassName } from '../InputOptionContent';\n\nexport const inputOptionClassName = createUniqueClassName('input_option');\n\ninterface InputOptionStyleArgs {\n  theme: Theme;\n  disabled?: boolean;\n  highlighted?: boolean;\n  isInteractive?: boolean;\n}\n\nexport const getInputOptionStyles = ({\n  theme,\n  disabled,\n  highlighted,\n  isInteractive,\n}: InputOptionStyleArgs) => {\n  const ixnState = highlighted\n    ? InteractionState.Focus\n    : InteractionState.Default;\n  return css`\n    display: block;\n    position: relative;\n    list-style: none;\n    outline: none;\n    border: unset;\n    margin: 0;\n    text-align: left;\n    text-decoration: none;\n    cursor: pointer;\n\n    font-size: ${typeScales.body1.fontSize}px;\n    line-height: ${typeScales.body1.lineHeight}px;\n    font-family: ${fontFamilies.default};\n    padding: ${spacing[200]}px ${spacing[300]}px;\n\n    transition: ${transitionDuration.default}ms ease-in-out;\n    transition-property: background-color, color;\n\n    color: ${color[theme].text.primary[ixnState]};\n    background-color: ${color[theme].background.primary[ixnState]};\n\n    ${disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${color[theme].text.disabled[ixnState]};\n    `}\n\n    /* Interactive states */\n    ${isInteractive &&\n    !disabled &&\n    css`\n      /* Hover */\n      &:hover {\n        outline: none;\n        color: ${color[theme].text.primary.hover};\n        background-color: ${color[theme].background.primary.hover};\n\n        .${titleClassName} {\n          color: ${color[theme].text.primary.hover};\n        }\n\n        .${leftGlyphClassName} {\n          color: ${color[theme].icon.primary.hover};\n        }\n      }\n\n      /* Focus (majority of styling handled by the 'highlighted' prop) */\n      &:focus {\n        outline: none;\n        border: unset;\n      }\n    `}\n  `;\n};\n\n/** in px */\nconst wedgeWidth = spacing[100];\n/** in px */\nconst wedgePaddingY = spacing[200];\n\nexport const getInputOptionWedge = ({\n  disabled,\n  highlighted,\n}: InputOptionStyleArgs) => css`\n  // Left wedge\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    width: ${wedgeWidth}px;\n    height: calc(100% - ${2 * wedgePaddingY}px);\n    min-height: ${spacing[600]}px;\n    background-color: rgba(255, 255, 255, 0);\n    border-radius: 0 6px 6px 0;\n    transform: scale3d(0, 0.3, 0) translateY(-50%);\n    transform-origin: 0%; // 0% since we use translateY\n    transition: ${transitionDuration.default}ms ease-in-out;\n    transition-property: transform, background-color;\n\n    ${highlighted &&\n    css`\n      transform: scaleY(1) translateY(-50%);\n      background-color: ${palette.blue.base};\n    `}\n\n    ${disabled &&\n    css`\n      content: unset;\n    `}\n  }\n`;\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { Description } from '@leafygreen-ui/typography';\n\nimport {\n  descriptionClassName,\n  getContentWrapperStyles,\n  getDescriptionStyles,\n  getLeftGlyphStyles,\n  getRightGlyphStyles,\n  getTitleStyles,\n  inputOptionContentClassName,\n  leftGlyphClassName,\n  textContainerStyles,\n  titleClassName,\n} from '../InputOptionContent/InputOptionContent.styles';\nimport { useInputOptionContext } from '../InputOptionContext';\n\nimport { InputOptionContentProps } from './InputOptionContent.types';\n\n/**\n * @internal\n *\n * This is a temp workaround to add consistent option styles.\n * Once all components that use an input option are consistent\n * we can add this directly inside `InputOption`.\n */\nexport const InputOptionContent = ({\n  children,\n  description,\n  leftGlyph,\n  rightGlyph,\n  preserveIconSpace = true,\n  className,\n  ...rest\n}: InputOptionContentProps) => {\n  const { disabled, highlighted, darkMode } = useInputOptionContext();\n  const { theme } = useDarkMode(darkMode);\n  return (\n    <div\n      className={cx(\n        inputOptionContentClassName,\n        getContentWrapperStyles({\n          hasLeftGlyph: !!leftGlyph || preserveIconSpace,\n          hasRightGlyph: !!rightGlyph,\n        }),\n        className,\n      )}\n      {...rest}\n    >\n      {leftGlyph && (\n        <div\n          className={cx(\n            leftGlyphClassName,\n            getLeftGlyphStyles({ theme, disabled, highlighted }),\n          )}\n        >\n          {leftGlyph}\n        </div>\n      )}\n      <div className={textContainerStyles}>\n        <div\n          className={cx(\n            titleClassName,\n            getTitleStyles({ theme, highlighted, disabled }),\n          )}\n        >\n          {children}\n        </div>\n        {description && (\n          <Description\n            darkMode={darkMode}\n            disabled={disabled}\n            className={cx(descriptionClassName, getDescriptionStyles())}\n          >\n            {description}\n          </Description>\n        )}\n      </div>\n      {rightGlyph && (\n        <div\n          className={getRightGlyphStyles({\n            theme,\n            disabled,\n          })}\n        >\n          {rightGlyph}\n        </div>\n      )}\n    </div>\n  );\n};\n\nInputOptionContent.displayName = 'InputOptionContent';\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport {\n  Polymorphic,\n  PolymorphicAs,\n  usePolymorphic,\n} from '@leafygreen-ui/polymorphic';\n\nimport { InputOptionContext } from '../InputOptionContext';\n\nimport {\n  getInputOptionStyles,\n  getInputOptionWedge,\n  inputOptionClassName,\n} from './InputOption.style';\nimport { InputOptionProps } from './InputOption.types';\n\nexport const InputOption = Polymorphic<InputOptionProps>(\n  (\n    {\n      as = 'li' as PolymorphicAs,\n      children,\n      disabled,\n      highlighted,\n      checked,\n      darkMode: darkModeProp,\n      showWedge = true,\n      isInteractive = true,\n      className,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { Component } = usePolymorphic(as);\n    const { theme, darkMode } = useDarkMode(darkModeProp);\n    return (\n      <InputOptionContext.Provider\n        value={{\n          checked,\n          darkMode,\n          disabled,\n          highlighted,\n        }}\n      >\n        <Component\n          ref={ref}\n          role=\"option\"\n          aria-selected={highlighted}\n          aria-checked={checked}\n          aria-disabled={disabled}\n          tabIndex={-1}\n          className={cx(\n            inputOptionClassName,\n            getInputOptionStyles({\n              theme,\n              disabled,\n              highlighted,\n              isInteractive,\n            }),\n            {\n              [getInputOptionWedge({\n                theme,\n                disabled,\n                highlighted,\n                isInteractive,\n              })]: showWedge,\n            },\n            className,\n          )}\n          {...rest}\n        >\n          {children}\n        </Component>\n      </InputOptionContext.Provider>\n    );\n  },\n);\n\nInputOption.displayName = 'InputOption';\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","InputOptionContext","createContext","inputOptionContentClassName","createUniqueClassName","titleClassName","descriptionClassName","leftGlyphClassName","getContentWrapperStyles","_ref","col1Name","hasLeftGlyph","col3Name","hasRightGlyph","css","_taggedTemplateLiteral","spacing","getLeftGlyphStyles","_ref2","theme","disabled","highlighted","variant","Variant","Disabled","Primary","interactionState","State","Focus","Default","color","icon","transitionDuration","default","getRightGlyphStyles","_ref3","textContainerStyles","getTitleStyles","_ref4","text","primary","focus","_excluded","InputOptionContent","children","description","leftGlyph","rightGlyph","_ref$preserveIconSpac","preserveIconSpace","className","rest","_objectWithoutProperties","_useInputOptionContex","useContext","darkMode","useDarkMode","React","createElement","_extends","cx","Description","displayName","inputOptionClassName","getInputOptionStyles","isInteractive","ixnState","InteractionState","typeScales","body1","fontSize","lineHeight","fontFamilies","background","hover","wedgeWidth","wedgePaddingY","getInputOptionWedge","palette","blue","base","InputOption","Polymorphic","ref","_ref$as","as","checked","darkModeProp","_ref$showWedge","showWedge","_ref$isInteractive","Component","usePolymorphic","_useDarkMode","Provider","value","role","tabIndex"],"mappings":"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"}