[
  {
    "tags": {},
    "description": "Segmented controls act as a toggle between a current state and related states, often changing the view of information within a single page.",
    "methods": [],
    "displayName": "SegmentedControl",
    "props": {
      "SegmentedControlProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Options provided in the segmented control",
          "required": true,
          "type": {
            "name": "`<SegmentedControlOption />`"
          },
          "tags": {
            "type": "`<SegmentedControlOption />`"
          }
        },
        "defaultValue": {
          "name": "defaultValue",
          "defaultValue": null,
          "description": "Defines the default, or initial value of the component. Ignored if `value` is also provided.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "aria-controls": {
          "name": "aria-controls",
          "defaultValue": null,
          "description": "Identifies the element(s) whose contents/presence is controlled by the segmented control.\n\nRequired as a prop on the control, or on each individual option.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": null,
          "description": "Callback that gets called when a user makes a new selection.",
          "required": false,
          "type": {
            "name": "(value: string) => void"
          },
          "tags": {}
        },
        "name": {
          "name": "name",
          "defaultValue": null,
          "description": "Identifies the segmented control group to screen readers. Auto-generated if no `name` or `label` is provided.\n\nIt's recommended for accessability to set this to a meaningful value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": null,
          "description": "Defines the size of the segmented control. Can be either `xsmall`, `default`, or `large`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Size | \"small\"",
            "value": [
              {
                "value": "\"xsmall\""
              },
              {
                "value": "\"default\""
              },
              {
                "value": "\"large\""
              },
              {
                "value": "\"small\""
              }
            ]
          },
          "tags": {}
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": null,
          "description": "Toggles dark mode",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "Controls the value of the component.\nIf provided, you must update the value in the `onChange` method,\nor other user actions (such as routing)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "label": {
          "name": "label",
          "defaultValue": null,
          "description": "A text label to the left of the segmented control. Sets the `name` prop if none is provided.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "followFocus": {
          "name": "followFocus",
          "defaultValue": {
            "value": true
          },
          "description": "Defines whether the selection should automatically follow focus.\nIf set to true, the arrow keys can be used to switch selection,\notherwise a keyboard user will need to press enter to make a selection.\n\nDefault: `true`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  },
  {
    "tags": {},
    "description": "SegmentedControlOption",
    "methods": [],
    "displayName": "SegmentedControlOption",
    "props": {
      "SegmentedControlOptionProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Can be text and/or an icon element",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "aria-controls": {
          "name": "aria-controls",
          "defaultValue": null,
          "description": "Identifies the element(s) whose contents/presence is controlled by the segmented control.\n\nRequired as a prop on the control, or on each individual option.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "The value of the option",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Toggles whether the option is disabled. Defaults to `false`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "as": {
          "name": "as",
          "defaultValue": null,
          "description": "Render the option wrapped in another component. Typically used for router `Link` components.\n\nDefault: `div`",
          "required": false,
          "type": {
            "name": "any"
          },
          "tags": {}
        },
        "glyph": {
          "name": "glyph",
          "defaultValue": null,
          "description": "The icon to display to the left of the option.",
          "required": false,
          "type": {
            "name": "`<Icon />`"
          },
          "tags": {
            "type": "`<Icon />`"
          }
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  }
]