{"version":3,"file":"index.js","sources":["../../src/Badge/types.ts","../../src/Badge/styles.ts","../../src/Badge/Badge.tsx"],"sourcesContent":["import { DarkModeProps, HTMLElementProps } from '@leafygreen-ui/lib';\n\nexport interface BadgeProps extends HTMLElementProps<'div'>, DarkModeProps {\n  /**\n   * An additional className to add to the component's classList\n   */\n  className?: string;\n\n  /**\n   * The content to render within the badge\n   */\n  children?: React.ReactNode;\n\n  /**\n   * The Badge's style variant\n   *\n   * @default 'lightgray'\n   */\n  variant?: Variant;\n}\n\nexport const Variant = {\n  DarkGray: 'darkgray',\n  LightGray: 'lightgray',\n  Red: 'red',\n  Yellow: 'yellow',\n  Blue: 'blue',\n  Green: 'green',\n} as const;\n\nexport type Variant = (typeof Variant)[keyof typeof Variant];\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { fontFamilies, fontWeights } from '@leafygreen-ui/tokens';\n\nimport { Variant } from './types';\n\nexport const baseStyle = css`\n  font-family: ${fontFamilies.default};\n  display: inline-flex;\n  align-items: center;\n  font-weight: ${fontWeights.bold};\n  font-size: 12px;\n  line-height: 16px;\n  border-radius: 24px;\n  height: 18px;\n  padding-left: 6px;\n  padding-right: 6px;\n  text-transform: uppercase;\n  border: 1px solid;\n  letter-spacing: 0.4px;\n`;\n\nexport const badgeVariants: Record<Theme, Record<Variant, string>> = {\n  [Theme.Dark]: {\n    [Variant.LightGray]: css`\n      background-color: ${palette.gray.dark1};\n      border-color: ${palette.gray.base};\n      color: ${palette.gray.light3};\n    `,\n\n    [Variant.DarkGray]: css`\n      background-color: ${palette.gray.dark3};\n      border-color: ${palette.gray.dark2};\n      color: ${palette.gray.light2};\n    `,\n\n    [Variant.Red]: css`\n      background-color: ${palette.red.dark3};\n      border-color: ${palette.red.dark2};\n      color: ${palette.red.light2};\n    `,\n\n    [Variant.Yellow]: css`\n      background-color: ${palette.yellow.dark3};\n      border-color: ${palette.yellow.dark2};\n      color: ${palette.yellow.light2};\n    `,\n\n    [Variant.Blue]: css`\n      background-color: ${palette.blue.dark2};\n      border-color: ${palette.blue.dark1};\n      color: ${palette.blue.light2};\n    `,\n\n    [Variant.Green]: css`\n      background-color: ${palette.green.dark3};\n      border-color: ${palette.green.dark2};\n      color: ${palette.green.light1};\n    `,\n  },\n  [Theme.Light]: {\n    [Variant.LightGray]: css`\n      background-color: ${palette.gray.light3};\n      border-color: ${palette.gray.light2};\n      color: ${palette.gray.dark1};\n    `,\n\n    [Variant.DarkGray]: css`\n      background-color: ${palette.gray.dark2};\n      border-color: ${palette.gray.dark3};\n      color: ${palette.white};\n    `,\n\n    [Variant.Red]: css`\n      background-color: ${palette.red.light3};\n      border-color: ${palette.red.light2};\n      color: ${palette.red.dark2};\n    `,\n\n    [Variant.Yellow]: css`\n      background-color: ${palette.yellow.light3};\n      border-color: ${palette.yellow.light2};\n      color: ${palette.yellow.dark2};\n    `,\n\n    [Variant.Blue]: css`\n      background-color: ${palette.blue.light3};\n      border-color: ${palette.blue.light2};\n      color: ${palette.blue.dark1};\n    `,\n\n    [Variant.Green]: css`\n      background-color: ${palette.green.light3};\n      border-color: ${palette.green.light2};\n      color: ${palette.green.dark2};\n    `,\n  },\n} as const;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport { badgeVariants, baseStyle } from './styles';\nimport { BadgeProps, Variant } from './types';\n\n/**\n * Badges can be used to highlight information or the status of something.\n */\nfunction Badge({\n  children,\n  variant = Variant.LightGray,\n  className,\n  darkMode: darkModeProp,\n  ...rest\n}: BadgeProps) {\n  const { theme } = useDarkMode(darkModeProp);\n  return (\n    <div\n      {...rest}\n      className={cx(baseStyle, badgeVariants[theme][variant], className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nBadge.displayName = 'Badge';\n\nBadge.propTypes = {\n  darkMode: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  variant: PropTypes.oneOf(Object.values(Variant)),\n};\n\nexport default Badge;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","Variant","DarkGray","LightGray","Red","Yellow","Blue","Green","baseStyle","css","_taggedTemplateLiteral","fontFamilies","default","fontWeights","bold","badgeVariants","_defineProperty","Theme","Dark","palette","gray","dark1","base","light3","dark3","dark2","light2","red","yellow","blue","green","light1","Light","white","_excluded","Badge","_ref","children","_ref$variant","variant","className","darkModeProp","darkMode","rest","_objectWithoutProperties","theme","useDarkMode","React","createElement","_extends","cx","displayName","propTypes","PropTypes","bool","string","node","oneOf","Object","values"],"mappings":"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"}