import React from 'react';
import PropTypes from 'prop-types';
import { AccessibleTabsProps } from './Tabs.types';
/**
 * # Tabs
 *
 * Tabs component
 *
 * ```
<Tabs selected={0} setSelected={() => execute callback when new Tab is selected}>
  <Tab name='First Tab'>Tab 1</Tab>
  <Tab name='Second Tab'>Tab 2</Tab>
</Tabs>
```
 * @param props.children Content to appear inside of Tabs component.
 * @param props.setSelected Callback to be executed when Tab is selected. Receives index of activated Tab as the first argument.
 * @param props.selected Index of the Tab that should appear active. If value passed, component will be controlled by consumer.
 * @param props.className className applied to Tabs container.
 * @param props.as HTML Element that wraps name in Tab List.
 */
declare function Tabs(props: AccessibleTabsProps): React.JSX.Element;
declare namespace Tabs {
    var displayName: string;
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        setSelected: PropTypes.Requireable<(...args: any[]) => any>;
        selected: PropTypes.Requireable<number>;
        className: PropTypes.Requireable<string>;
        as: PropTypes.Requireable<NonNullable<PropTypes.ReactElementLike | ((...args: any[]) => any) | PropTypes.ReactComponentLike | null | undefined>>;
    };
}
export default Tabs;
//# sourceMappingURL=Tabs.d.ts.map