{"version":3,"file":"index.js","sources":["../../src/InputOption/InputOption.style.ts","../../src/InputOptionContent/InputOptionContent.styles.ts","../../src/InputOption/InputOption.tsx","../../src/InputOptionContent/InputOptionContent.tsx"],"sourcesContent":["import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  fontFamilies,\n  spacing,\n  transitionDuration,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nexport const titleClassName = createUniqueClassName('input-option-title');\nexport const descriptionClassName = createUniqueClassName(\n  'input-option-description',\n);\n\nexport const inputOptionStyles = css`\n  position: relative;\n  list-style: none;\n  outline: none;\n  border: unset;\n  margin: 0;\n  text-align: left;\n  text-decoration: none;\n  cursor: pointer;\n\n  font-size: ${typeScales.body1.fontSize}px;\n  line-height: ${typeScales.body1.lineHeight}px;\n  font-family: ${fontFamilies.default};\n  padding: ${spacing[2]}px ${spacing[2] + spacing[1]}px;\n\n  transition: background-color ${transitionDuration.default}ms ease-in-out;\n\n  &:focus,\n  &:focus-visible {\n    outline: none;\n    border: unset;\n  }\n`;\n\nexport const titleSelectionStyles = css`\n  .${titleClassName} {\n    font-weight: bold;\n  }\n`;\n\nexport const inputOptionThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.black};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light2};\n  `,\n};\n\nexport const inputOptionHoverStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:hover {\n      outline: none;\n      background-color: ${palette.gray.light2};\n    }\n  `,\n  [Theme.Dark]: css`\n    &:hover {\n      outline: none;\n      background-color: ${palette.gray.dark4};\n    }\n  `,\n};\n\n/** in px */\nconst wedgeWidth = spacing[1];\n/** in px */\nconst wedgePaddingY = spacing[2];\n\nexport const inputOptionWedge = css`\n  // Left wedge\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    width: ${wedgeWidth}px;\n    height: calc(100% - ${2 * wedgePaddingY}px);\n    min-height: ${spacing[3]}px;\n    background-color: rgba(255, 255, 255, 0);\n    border-radius: 0 6px 6px 0;\n    transform: scale3d(0, 0.3, 0) translateY(-50%);\n    transform-origin: 0%; // 0% since we use translateY\n    transition: ${transitionDuration.default}ms ease-in-out;\n    transition-property: transform, background-color;\n  }\n`;\n\nexport const inputOptionActiveStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    outline: none;\n    background-color: ${palette.blue.light3};\n    color: ${palette.blue.dark2};\n\n    &:before {\n      transform: scaleY(1) translateY(-50%);\n      background-color: ${palette.blue.base};\n    }\n  `,\n  [Theme.Dark]: css`\n    outline: none;\n    background-color: ${palette.blue.dark3};\n    color: ${palette.blue.light3};\n\n    &:before {\n      transform: scaleY(1) translateY(-50%);\n      background-color: ${palette.blue.light1};\n    }\n  `,\n};\n\nexport const inputOptionDisabledStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    cursor: not-allowed;\n\n    &,\n    & .${descriptionClassName} {\n      color: ${palette.gray.light1};\n    }\n\n    &:hover {\n      background-color: inherit;\n    }\n\n    &:before {\n      content: unset;\n    }\n  `,\n  [Theme.Dark]: css`\n    cursor: not-allowed;\n\n    &,\n    & .${descriptionClassName} {\n      color: ${palette.gray.dark1};\n    }\n\n    &:hover {\n      background-color: inherit;\n    }\n\n    &:before {\n      content: unset;\n    }\n  `,\n};\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName } from '@leafygreen-ui/lib';\nimport { spacing } from '@leafygreen-ui/tokens';\n\nexport const leftGlyphClassName = createUniqueClassName(\n  'input-option-left-glyph',\n);\n\nexport const titleBaseStyles = css`\n  overflow-wrap: anywhere;\n`;\n\nexport const descriptionBaseStyles = css`\n  max-height: ${spacing[3] * 3}px;\n  overflow: hidden;\n  font-size: inherit;\n  text-overflow: ellipsis;\n`;\n\nexport const contentWrapper = css`\n  display: grid;\n  grid-template-columns: ${spacing[3]}px 1fr;\n  gap: ${spacing[2]}px;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const textWrapper = css`\n  grid-column: 2;\n`;\n\nexport const glyphContainer = css`\n  display: flex;\n  height: 20px;\n  align-items: center;\n`;\n\nexport const glyphRightStyles = css`\n  width: ${spacing[3]}px;\n  grid-column: 3;\n  grid-row: 1;\n`;\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport {\n  Polymorphic,\n  PolymorphicAs,\n  usePolymorphic,\n} from '@leafygreen-ui/polymorphic';\n\nimport {\n  inputOptionActiveStyles,\n  inputOptionDisabledStyles,\n  inputOptionHoverStyles,\n  inputOptionStyles,\n  inputOptionThemeStyles,\n  inputOptionWedge,\n  titleSelectionStyles,\n} from './InputOption.style';\nimport { InputOptionProps } from './InputOption.types';\n\nexport const InputOption = Polymorphic<InputOptionProps>(\n  (\n    {\n      as = 'li' as PolymorphicAs,\n      children,\n      disabled,\n      highlighted,\n      selected,\n      darkMode: darkModeProp,\n      showWedge = true,\n      isInteractive = true,\n      className,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { Component } = usePolymorphic(as);\n    const { theme } = useDarkMode(darkModeProp);\n    return (\n      <Component\n        ref={ref}\n        role=\"option\"\n        aria-selected={highlighted}\n        aria-disabled={disabled}\n        tabIndex={-1}\n        className={cx(\n          inputOptionStyles,\n          inputOptionThemeStyles[theme],\n          {\n            [inputOptionWedge]: showWedge,\n            [inputOptionHoverStyles[theme]]: isInteractive,\n            [inputOptionActiveStyles[theme]]:\n              isInteractive && (selected || highlighted),\n            [inputOptionDisabledStyles[theme]]: disabled,\n            [titleSelectionStyles]: selected,\n          },\n          className,\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    );\n  },\n);\n\nInputOption.displayName = 'InputOption';\n","import React from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { Description } from '@leafygreen-ui/typography';\n\nimport {\n  descriptionClassName,\n  titleClassName,\n} from '../InputOption/InputOption.style';\nimport {\n  contentWrapper,\n  descriptionBaseStyles,\n  glyphContainer,\n  glyphRightStyles,\n  leftGlyphClassName,\n  textWrapper,\n  titleBaseStyles,\n} from '../InputOptionContent/InputOptionContent.styles';\n\nimport { InputOptionContentProps } from './InputOptionContent.types';\n\n/**\n * @internal\n *\n * This is a temp workaround to add consistent option styles. Once all components that use an input option are consistent we can add this directly inside `InputOption`.\n */\nexport const InputOptionContent = ({\n  children,\n  description,\n  leftGlyph,\n  rightGlyph,\n}: InputOptionContentProps) => {\n  return (\n    <div className={contentWrapper}>\n      {leftGlyph && (\n        <div className={cx(leftGlyphClassName, glyphContainer)}>\n          {leftGlyph}\n        </div>\n      )}\n      <div className={textWrapper}>\n        <div className={cx(titleClassName, titleBaseStyles)}>{children}</div>\n        {description && (\n          <Description\n            className={cx(descriptionClassName, descriptionBaseStyles)}\n          >\n            {description}\n          </Description>\n        )}\n      </div>\n      {rightGlyph && (\n        <div className={cx(glyphContainer, glyphRightStyles)}>{rightGlyph}</div>\n      )}\n    </div>\n  );\n};\n\nInputOptionContent.displayName = 'InputOptionContent';\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","titleClassName","createUniqueClassName","descriptionClassName","inputOptionStyles","css","_taggedTemplateLiteral","typeScales","body1","fontSize","lineHeight","fontFamilies","default","spacing","transitionDuration","titleSelectionStyles","inputOptionThemeStyles","_defineProperty","Theme","Light","palette","black","Dark","gray","light2","inputOptionHoverStyles","dark4","wedgeWidth","wedgePaddingY","inputOptionWedge","inputOptionActiveStyles","blue","light3","dark2","base","dark3","light1","inputOptionDisabledStyles","dark1","_excluded","InputOption","Polymorphic","_ref","ref","_ref$as","as","children","disabled","highlighted","selected","darkModeProp","darkMode","_ref$showWedge","showWedge","_ref$isInteractive","isInteractive","className","rest","_objectWithoutProperties","Component","usePolymorphic","theme","useDarkMode","React","createElement","_extends","role","tabIndex","cx","displayName","leftGlyphClassName","titleBaseStyles","descriptionBaseStyles","contentWrapper","textWrapper","glyphContainer","glyphRightStyles","InputOptionContent","description","leftGlyph","rightGlyph","Description"],"mappings":"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"}