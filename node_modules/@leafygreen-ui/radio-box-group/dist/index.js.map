{"version":3,"file":"index.js","sources":["../src/context.ts","../src/types.ts","../src/RadioBox/RadioBox.styles.ts","../src/RadioBoxGroup.styles.ts","../src/RadioBox/RadioBox.tsx","../src/RadioBoxGroup.tsx"],"sourcesContent":["import { ChangeEventHandler, createContext, useContext } from 'react';\n\nimport { Size } from './types';\n\nexport interface RadioBoxGroupContext {\n  value: string | number | undefined;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  size: Size | undefined;\n  name: string | undefined;\n  darkMode: boolean;\n}\n\nconst context = createContext<RadioBoxGroupContext | null>(null);\n\nexport const Provider = context.Provider;\n\nexport function useRadioBoxGroupContext() {\n  return useContext(context);\n}\n","import { HTMLElementProps } from '@leafygreen-ui/lib';\n\nexport const Size = {\n  Default: 'default',\n  Compact: 'compact',\n  Full: 'full',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport interface RadioBoxProps extends Omit<HTMLElementProps<'input'>, 'size'> {\n  /**\n   * Indicates whether or not the box will be checked\n   * @default false\n   */\n  checked?: boolean;\n\n  /**\n   * Callback to be executed when a RadioBox is selected.\n   * @default () => {}\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n\n  /**\n   * Name passed to each RadioBox belonging to the RadioGroup.\n   */\n  name?: string;\n\n  /**\n   * Determines size of RadioBox components ['default', 'compact', 'full'].\n   * @default 'default''\n   */\n  size?: Size;\n\n  /**\n   * Determines what RadioBox will be checked on default. Component will be controlled if this prop is used.\n   */\n  value: string | number;\n\n  /**\n   * Boolean that determines if the RadioBox is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Id for RadioBox and respective label.\n   */\n  id?: string;\n\n  /**\n   * Content that will appear inside of the RadioBox component's label.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * If RadioBoxGroup is uncontrolled, the default property makes this RadioBox checked on the initial render.\n   */\n  default?: boolean;\n\n  /**\n   * Toggles Dark Mode\n   */\n  darkMode?: boolean;\n}\n\nexport interface RadioBoxGroupProps extends HTMLElementProps<'div'> {\n  /**\n   * Content that will appear inside of RadioBoxGroup component.\n   * @type `<RadioBox />`\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Callback to be executed when a RadioBox is selected.\n   * @default () => {}\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n\n  /**\n   * Name passed to each RadioBox belonging to the RadioGroup.\n   */\n  name?: string;\n\n  /**\n   * Determines what RadioBox will be checked on default. Component will be controlled if this prop is used.\n   */\n  value?: string | number;\n\n  /**\n   * Determines size of RadioBox components ['default', 'compact', 'full'].\n   * @default 'default''\n   */\n  size?: Size;\n\n  /**\n   * Toggles Dark Mode\n   */\n  darkMode?: boolean;\n}\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  focusRing,\n  fontFamilies,\n  fontWeights,\n  hoverRing,\n  transitionDuration,\n} from '@leafygreen-ui/tokens';\n\nimport { Size } from '../types';\n\nexport const radioBoxSizes: { [K in Size]: string } = {\n  [Size.Default]: css`\n    width: 169px;\n  `,\n\n  [Size.Compact]: css`\n    padding-right: 12px;\n    padding-left: 12px;\n  `,\n\n  [Size.Full]: css`\n    flex: 1;\n  `,\n};\n\nexport const inputStyles = css`\n  opacity: 0;\n  position: absolute;\n  pointer-events: none;\n`;\n\ninterface StateForStyles {\n  checked: boolean;\n  disabled: boolean;\n  size: Size;\n  darkMode: boolean;\n}\n\nexport const getRadioDisplayStyles = ({\n  checked,\n  disabled,\n  size,\n  darkMode,\n}: StateForStyles) => {\n  return cx(\n    css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      padding: 16px 24px;\n\n      font-size: 13px;\n      font-weight: ${fontWeights.bold};\n      text-align: center;\n      overflow-wrap: break-word;\n      background-color: ${darkMode ? palette.gray.dark4 : palette.white};\n      border-radius: 6px;\n      color: ${darkMode ? palette.gray.light2 : palette.black};\n      border: 1px solid ${palette.gray.base};\n\n      cursor: pointer;\n      pointer-events: auto;\n      transition: ${transitionDuration.default}ms ease-in-out;\n      transition-property: border-color, box-shadow;\n\n      &:hover,\n      &:active {\n        box-shadow: ${darkMode ? hoverRing.dark.gray : hoverRing.light.gray};\n      }\n\n      input:focus-visible + & {\n        border-color: ${palette.gray.base};\n        box-shadow: ${darkMode\n          ? focusRing.dark.default\n          : focusRing.light.default};\n      }\n    `,\n    {\n      [css`\n        border-color: rgba(255, 255, 255, 0);\n        box-shadow: 0 0 0 3px ${palette.green.dark1};\n        &:hover,\n        &:active {\n          box-shadow: 0 0 0 3px ${palette.green.dark1};\n        }\n      `]: checked,\n      [css`\n        color: ${darkMode ? palette.gray.dark1 : palette.gray.light1};\n        background: ${darkMode ? palette.gray.dark3 : palette.gray.light3};\n        font-weight: ${fontWeights.regular};\n        border-color: ${darkMode ? palette.gray.dark2 : palette.gray.light2};\n        cursor: not-allowed;\n        &:hover,\n        &:active {\n          box-shadow: unset;\n        }\n      `]: disabled,\n    },\n    radioBoxSizes[size],\n  );\n};\n\nexport const radioWrapper = css`\n  font-family: ${fontFamilies.default};\n  display: flex;\n  position: relative;\n\n  &:not(:last-of-type) {\n    margin-right: 12px;\n  }\n`;\n","import { css } from '@leafygreen-ui/emotion';\n\nexport const baseGroupStyle = css`\n  display: flex;\n`;\n","import React, { HTMLProps, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport { RadioBoxGroupContext, useRadioBoxGroupContext } from '../context';\nimport { RadioBoxProps, Size } from '../types';\n\nimport {\n  getRadioDisplayStyles,\n  inputStyles,\n  radioBoxSizes,\n  radioWrapper,\n} from './RadioBox.styles';\n\nfunction isChecked({\n  checkedProp,\n  defaultProp,\n  radioBoxGroupContext,\n  value,\n}: {\n  checkedProp?: boolean;\n  defaultProp: boolean;\n  radioBoxGroupContext: RadioBoxGroupContext | null;\n  value: string | number;\n}): boolean {\n  const contextValue = radioBoxGroupContext?.value;\n\n  if (contextValue == null) {\n    return checkedProp ?? defaultProp;\n  }\n\n  return contextValue === value;\n}\n\n/**\n * # RadioBox\n *\n * RadioBox component\n *\n * ```\n  <RadioBox value='radio-box-1'>RadioBox 1</RadioBox>\n```\n * @param props.className className supplied to RadioBox container.\n * @param props.value Used to determine what RadioBox is active.\n * @param props.disabled Boolean that determines if the RadioBox is disabled.\n * @param props.id Id for RadioBox and respective label.\n * @param props.children Content that will appear inside of RadioBox.\n * @param props.default If RadioBoxGroup is uncontrolled, the default property makes this RadioBox checked on the initial render.\n */\nexport function RadioBox({\n  className = '',\n  onChange: onChangeProp,\n  value,\n  checked: checkedProp,\n  default: defaultProp = false,\n  disabled = false,\n  id: idProp,\n  size: sizeProp = Size.Default,\n  children,\n  name: nameProp,\n  darkMode: darkModeProp,\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onClick,\n  ...rest\n}: RadioBoxProps) {\n  const radioBoxGroupContext = useRadioBoxGroupContext();\n  const { darkMode: darkModeContext } = useDarkMode(darkModeProp);\n\n  const localId = useIdAllocator({\n    prefix: 'radio-box',\n  });\n\n  const id = useMemo(() => idProp ?? localId, [idProp, localId]);\n\n  const size = radioBoxGroupContext?.size ?? sizeProp;\n  const name = radioBoxGroupContext?.name ?? nameProp;\n  const darkMode = radioBoxGroupContext?.darkMode ?? darkModeContext;\n  const checked = isChecked({\n    value,\n    checkedProp,\n    defaultProp,\n    radioBoxGroupContext,\n  });\n  const contextOnChange = radioBoxGroupContext?.onChange;\n  const onChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    e => {\n      onChangeProp?.(e);\n      contextOnChange?.(e);\n    },\n    [onChangeProp, contextOnChange],\n  );\n\n  const radioDisplayStyle = getRadioDisplayStyles({\n    checked,\n    disabled,\n    size,\n    darkMode,\n  });\n\n  const tooltipTriggerHandlers = {\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur,\n    onClick,\n  } as HTMLProps<HTMLLabelElement>;\n\n  return (\n    <label\n      {...tooltipTriggerHandlers}\n      htmlFor={id}\n      className={cx(\n        radioWrapper,\n        {\n          [radioBoxSizes['full']]: size === Size.Full,\n        },\n        className,\n      )}\n    >\n      <input\n        {...rest}\n        type=\"radio\"\n        id={id}\n        name={name}\n        onChange={onChange}\n        value={value}\n        checked={checked}\n        aria-checked={checked}\n        disabled={disabled}\n        aria-disabled={disabled}\n        className={inputStyles}\n      />\n\n      <div className={radioDisplayStyle}>{children}</div>\n    </label>\n  );\n}\n\nRadioBox.displayName = 'RadioBox';\n\nRadioBox.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  children: PropTypes.node,\n  default: PropTypes.bool,\n  darkMode: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport { Provider } from './context';\nimport { baseGroupStyle } from './RadioBoxGroup.styles';\nimport { RadioBoxGroupProps, Size } from './types';\n\n/**\n *\n * ```\n<RadioBoxGroup onChange={() => execute callback onChange}>\n  <RadioBox value='RadioBox-1'>RadioBox 1</RadioBox>\n  <RadioBox value='RadioBox-2'>RadioBox 2</RadioBox>\n</RadioBoxGroup>\n```\n * @param props.children Content to appear inside of RadioBoxGroup component.\n * @param props.onChange Callback to be executed when a RadioBox is selected.\n * @param props.name Name passed to each RadioBox belonging to the RadioBoxGroup.\n * @param props.value RadioBox that should appear checked. If value passed, component will be controlled by consumer.\n * @param props.className className applied to RadioBoxGroup container.\n * @param props.size Determines size of RadioBox components ['default', 'compact', 'full'].\n */\nexport function RadioBoxGroup({\n  children,\n  className,\n  size = Size.Default,\n  onChange = () => {},\n  name, // = this.defaultName,\n  value: controlledValue,\n  darkMode: darkModeProp,\n  ...rest\n}: RadioBoxGroupProps) {\n  const [uncontrolledValue, setUncontrolledValue] = React.useState<\n    string | number | undefined\n  >();\n\n  const { darkMode } = useDarkMode(darkModeProp);\n\n  const defaultName = useIdAllocator({\n    prefix: 'radio-box-group',\n    id: name,\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      // Stopped propagation to prevent event from bubbling with new target, and thus value coming back as undefined\n      e.stopPropagation();\n      onChange(e);\n    }\n\n    if (!controlledValue) {\n      setUncontrolledValue(e.target.value);\n    }\n  };\n\n  return (\n    <Provider\n      value={{\n        value: controlledValue ?? uncontrolledValue,\n        name: defaultName,\n        size,\n        onChange: handleChange,\n        darkMode,\n      }}\n    >\n      <div\n        {...rest}\n        className={cx(baseGroupStyle, className)}\n        role=\"group\"\n        aria-label={name}\n      >\n        {children}\n      </div>\n    </Provider>\n  );\n}\n\nRadioBoxGroup.displayName = 'RadioBoxGroup';\n\nRadioBoxGroup.propTypes = {\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOf(Object.values(Size)),\n  className: PropTypes.string,\n  darkMode: PropTypes.bool,\n};\n"],"names":["context","createContext","Provider","_templateObject","_templateObject2","_templateObject3","_radioBoxSizes","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Size","Default","Compact","Full","radioBoxSizes","_defineProperty","css","_taggedTemplateLiteral","inputStyles","radioWrapper","fontFamilies","default","_excluded","RadioBox","_ref2","_radioBoxGroupContext","_radioBoxGroupContext2","_radioBoxGroupContext3","_ref2$className","className","onChangeProp","onChange","value","checkedProp","checked","_ref2$default","defaultProp","_ref2$disabled","disabled","idProp","id","_ref2$size","size","sizeProp","children","nameProp","name","darkModeProp","darkMode","onMouseEnter","onMouseLeave","onFocus","onBlur","onClick","rest","_objectWithoutProperties","radioBoxGroupContext","useContext","darkModeContext","useDarkMode","localId","useIdAllocator","prefix","useMemo","_ref","contextValue","isChecked","contextOnChange","useCallback","e","radioDisplayStyle","_cx","cx","fontWeights","bold","palette","gray","dark4","white","light2","black","base","transitionDuration","hoverRing","dark","light","focusRing","green","dark1","light1","dark3","light3","regular","dark2","getRadioDisplayStyles","tooltipTriggerHandlers","React","createElement","_extends","htmlFor","type","displayName","propTypes","PropTypes","oneOfType","string","number","isRequired","func","bool","node","baseGroupStyle","RadioBoxGroup","_ref$size","_ref$onChange","controlledValue","_React$useState2","_slicedToArray","useState","uncontrolledValue","setUncontrolledValue","defaultName","stopPropagation","target","role","oneOf","Object","values"],"mappings":"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"}