[
  {
    "tags": {
      "param": "props.className className supplied to RadioBox container.\nprops.value Used to determine what RadioBox is active.\nprops.disabled Boolean that determines if the RadioBox is disabled.\nprops.id Id for RadioBox and respective label.\nprops.children Content that will appear inside of RadioBox.\nprops.default If RadioBoxGroup is uncontrolled, the default property makes this RadioBox checked on the initial render."
    },
    "description": "# RadioBox\n\nRadioBox component\n\n```\n<RadioBox value='radio-box-1'>RadioBox 1</RadioBox>\n```",
    "methods": [],
    "displayName": "RadioBox",
    "props": {
      "RadioBoxProps": {
        "checked": {
          "name": "checked",
          "defaultValue": {
            "value": "false"
          },
          "description": "Indicates whether or not the box will be checked",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": {
            "value": "() => {}"
          },
          "description": "Callback to be executed when a RadioBox is selected.",
          "required": false,
          "type": {
            "name": "ChangeEventHandler<HTMLInputElement>"
          },
          "tags": {
            "default": "() => {}"
          }
        },
        "name": {
          "name": "name",
          "defaultValue": null,
          "description": "Name passed to each RadioBox belonging to the RadioGroup.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "'default''"
          },
          "description": "Determines size of RadioBox components ['default', 'compact', 'full'].",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Size",
            "value": [
              {
                "value": "\"default\""
              },
              {
                "value": "\"compact\""
              },
              {
                "value": "\"full\""
              }
            ]
          },
          "tags": {
            "default": "'default''"
          }
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "Determines what RadioBox will be checked on default. Component will be controlled if this prop is used.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "string | number",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              }
            ]
          },
          "tags": {}
        },
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Boolean that determines if the RadioBox is disabled.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "Id for RadioBox and respective label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the RadioBox component's label.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "default": {
          "name": "default",
          "defaultValue": null,
          "description": "If RadioBoxGroup is uncontrolled, the default property makes this RadioBox checked on the initial render.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": null,
          "description": "Toggles Dark Mode",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "InputHTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  },
  {
    "tags": {
      "param": "props.children Content to appear inside of RadioBoxGroup component.\nprops.onChange Callback to be executed when a RadioBox is selected.\nprops.name Name passed to each RadioBox belonging to the RadioBoxGroup.\nprops.value RadioBox that should appear checked. If value passed, component will be controlled by consumer.\nprops.className className applied to RadioBoxGroup container.\nprops.size Determines size of RadioBox components ['default', 'compact', 'full']."
    },
    "description": "\n```\n<RadioBoxGroup onChange={() => execute callback onChange}>\n<RadioBox value='RadioBox-1'>RadioBox 1</RadioBox>\n<RadioBox value='RadioBox-2'>RadioBox 2</RadioBox>\n</RadioBoxGroup>\n```",
    "methods": [],
    "displayName": "RadioBoxGroup",
    "props": {
      "RadioBoxGroupProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of RadioBoxGroup component.",
          "required": false,
          "type": {
            "name": "`<RadioBox />`"
          },
          "tags": {
            "type": "`<RadioBox />`"
          }
        },
        "onChange": {
          "name": "onChange",
          "defaultValue": {
            "value": "() => {}"
          },
          "description": "Callback to be executed when a RadioBox is selected.",
          "required": false,
          "type": {
            "name": "ChangeEventHandler<HTMLInputElement>"
          },
          "tags": {
            "default": "() => {}"
          }
        },
        "name": {
          "name": "name",
          "defaultValue": null,
          "description": "Name passed to each RadioBox belonging to the RadioGroup.",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "Determines what RadioBox will be checked on default. Component will be controlled if this prop is used.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "string | number",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              }
            ]
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "default"
          },
          "description": "Determines size of RadioBox components ['default', 'compact', 'full'].",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Size",
            "value": [
              {
                "value": "\"default\""
              },
              {
                "value": "\"compact\""
              },
              {
                "value": "\"full\""
              }
            ]
          },
          "tags": {
            "default": "'default''"
          }
        },
        "darkMode": {
          "name": "darkMode",
          "defaultValue": null,
          "description": "Toggles Dark Mode",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  }
]