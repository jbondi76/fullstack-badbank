{"version":3,"file":"index.js","sources":["../../src/prefersReducedMotion.tsx","../../src/useAccessibleForm.ts","../../src/usePrefersReducedMotion.ts","../../src/validateAriaLabelProps.tsx","../../src/VisuallyHidden.tsx"],"sourcesContent":["import { css } from '@leafygreen-ui/emotion';\n\n/**\n * Returns an emotion CSS instance for rendering styles that respect\n * OS-level preferences for reduced motion.\n *\n * Use this function to remove scale, size, and positional transitions\n * for users with that preference set.\n * @param styles String of styles to render within media query.\n */\nexport default function prefersReducedMotion(styles: string) {\n  if (styles != null && typeof styles === 'string') {\n    return css`\n      @media (prefers-reduced-motion: reduce) {\n        ${styles}\n      }\n    `;\n  }\n\n  return '';\n}\n","import { useIdAllocator } from '@leafygreen-ui/hooks';\n\n/**\n * Hook that returns two sets of props that accessibly associate a label and its respective input element\n * @param id Describes the input element\n */\nconst useAccessibleForm = (idProp: string) => {\n  const inputId = useIdAllocator({ prefix: 'lgui-input', id: idProp });\n  const labelId = useIdAllocator({ prefix: 'lgui-label' });\n\n  const labelProps = {\n    id: labelId,\n    htmlFor: inputId,\n  };\n\n  const inputProps = {\n    id: inputId,\n    ['aria-labelledby']: labelId,\n  };\n\n  return { labelProps, inputProps };\n};\n\nexport default useAccessibleForm;\n","import { useEffect, useState } from 'react';\n\n/**\n * Returns whether the user has `prefers-reduced-motion: reduce`\n * set in their browser.\n *\n * @returns boolean\n */\nexport function usePrefersReducedMotion(): boolean {\n  const [prefersReducedMotion, setPreference] = useState<boolean>(false);\n\n  const handler = (event: MediaQueryListEvent) => {\n    setPreference(event.matches);\n  };\n\n  useEffect(() => {\n    if (\n      window &&\n      window.matchMedia &&\n      typeof window.matchMedia === 'function'\n    ) {\n      const MQ = window.matchMedia('(prefers-reduced-motion: reduce)');\n      setPreference(MQ.matches);\n      MQ.addEventListener('change', handler);\n\n      return () => MQ.removeEventListener('change', handler);\n    }\n  }, []);\n\n  return prefersReducedMotion;\n}\n","// Validate that either aria-label or aria-labelledby are present within props.\nexport function validateAriaLabelProps(\n  props: Record<string, any>,\n  componentName: string,\n): void {\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.error(\n      `For screen-reader accessibility, aria-label or aria-labelledby must be provided${\n        componentName ? ` to ${componentName}` : ''\n      }.`,\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { HTMLElementProps } from '@leafygreen-ui/lib';\n\nconst visuallyHidden = css`\n  clip: rect(0, 0, 0, 0);\n  clip-path: inset(50%);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n`;\n\nfunction VisuallyHidden({\n  children,\n  className,\n  ...rest\n}: HTMLElementProps<'div'>) {\n  return (\n    <div {...rest} className={cx(visuallyHidden, className)}>\n      {children}\n    </div>\n  );\n}\n\nVisuallyHidden.displayName = 'VisuallyHidden';\n\nVisuallyHidden.propTypes = {\n  children: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default VisuallyHidden;\n"],"names":["_templateObject","prefersReducedMotion","styles","css","_taggedTemplateLiteral","useAccessibleForm","idProp","inputId","useIdAllocator","prefix","id","labelId","labelProps","htmlFor","inputProps","usePrefersReducedMotion","_useState2","_slicedToArray","useState","setPreference","handler","event","matches","useEffect","window","matchMedia","MQ","addEventListener","removeEventListener","validateAriaLabelProps","props","componentName","console","error","concat","_excluded","visuallyHidden","VisuallyHidden","_ref","children","className","rest","_objectWithoutProperties","React","createElement","_extends","cx","displayName","propTypes","PropTypes","string"],"mappings":"4pEACA,IAAIA,EAWW,SAASC,EAAqBC,GAC3C,OAAc,MAAVA,GAAoC,iBAAXA,EACpBC,EAAIH,IAAoBA,EAAkBI,EAAuB,CAAC,8DAA+D,qBAAsBF,GAEzJ,EACT,CCVG,IAACG,EAAoB,SAA2BC,GACjD,UAAIC,EAAUC,EAAe,CAC3BC,OAAQ,aACRC,GAAIJ,IAEFK,EAAUH,EAAe,CAC3BC,OAAQ,eASV,MAAO,CACLG,WARe,CACfF,GAAIC,EACJE,QAASN,GAOTO,cAL+B,CAC/BJ,GAAIH,KACgBI,SAAnB,iHAKL,ECjBO,SAASI,IACd,IACEC,EAAaC,EADCC,GAAS,GACgB,GACvCjB,EAAuBe,EAAW,GAClCG,EAAgBH,EAAW,GACzBI,EAAU,SAAiBC,GAC7BF,EAAcE,EAAMC,QACxB,EAWE,OAVAC,GAAU,WACR,GAAIC,QAAUA,OAAOC,YAA2C,mBAAtBD,OAAOC,WAA2B,CAC1E,IAAIC,EAAKF,OAAOC,WAAW,oCAG3B,OAFAN,EAAcO,EAAGJ,SACjBI,EAAGC,iBAAiB,SAAUP,GACvB,WACL,OAAOM,EAAGE,oBAAoB,SAAUR,EAChD,CACK,CACF,GAAE,IACInB,CACT,CC3BO,SAAS4B,EAAuBC,EAAOC,GACvCD,EAAM,eAAkBA,EAAM,oBACjCE,QAAQC,MAAM,kFAAkFC,OAAOH,EAAgB,OAAOG,OAAOH,GAAiB,GAAI,KAE9J,CCFA,IACI/B,EADAmC,EAAY,CAAC,WAAY,aAKzBC,EAAiBjC,EAAIH,IAAoBA,EAAkBI,EAAuB,CAAC,yKACvF,SAASiC,EAAeC,GACtB,IAAIC,EAAWD,EAAKC,SAClBC,EAAYF,EAAKE,UACjBC,EAAOC,EAAyBJ,EAAMH,GACxC,OAAoBQ,EAAMC,cAAc,MAAOC,EAAS,CAAA,EAAIJ,EAAM,CAChED,UAAWM,EAAGV,EAAgBI,KAC5BD,EACN,CACAF,EAAeU,YAAc,iBAC7BV,EAAeW,UAAY,CACzBT,SAAUU,EAAUC,OACpBV,UAAWS,EAAUC"}