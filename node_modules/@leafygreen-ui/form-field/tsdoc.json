[
  {
    "tags": {},
    "description": "Creates a form field element with the appropriate styles and attributes for each element.\n\nUse the {@link FormFieldInput } element to apply the appropriate\ninteraction styles to the inner container element.\n\nSee .stories file for examples",
    "methods": [],
    "displayName": "FormField",
    "props": {
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "FormFieldProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "`FormFieldInputContainer` component, or other custom input component",
          "required": true,
          "type": {
            "name": "FormFieldChildren"
          },
          "tags": {}
        },
        "label": {
          "name": "label",
          "defaultValue": null,
          "description": "The label rendered before the input",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "description": {
          "name": "description",
          "defaultValue": null,
          "description": "A description for the form field",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "baseFontSize": {
          "name": "baseFontSize",
          "defaultValue": null,
          "description": "Base font size of the component. Only effective when `size == 'default'`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "BaseFontSize",
            "value": [
              {
                "value": "13"
              },
              {
                "value": "16"
              }
            ]
          },
          "tags": {}
        },
        "state": {
          "name": "state",
          "defaultValue": {
            "value": "none"
          },
          "description": "The state of the component",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "FormFieldState",
            "value": [
              {
                "value": "\"none\""
              },
              {
                "value": "\"error\""
              },
              {
                "value": "\"valid\""
              }
            ]
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "Size.Default"
          },
          "description": "The size of the component",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Size",
            "value": [
              {
                "value": "\"xsmall\""
              },
              {
                "value": "\"small\""
              },
              {
                "value": "\"default\""
              },
              {
                "value": "\"large\""
              }
            ]
          },
          "tags": {}
        },
        "disabled": {
          "name": "disabled",
          "defaultValue": {
            "value": false
          },
          "description": "Defines whether the component is disabled. This will set the `aria-disabled` and `readonly` attributes on the input, not the `disabled` attribute.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "errorMessage": {
          "name": "errorMessage",
          "defaultValue": {
            "value": "This input needs your attention"
          },
          "description": "The message to display below the form field when in an error state",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "successMessage": {
          "name": "successMessage",
          "defaultValue": {
            "value": "Success"
          },
          "description": "The message to display below the form field when in a valid state",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "optional": {
          "name": "optional",
          "defaultValue": null,
          "description": "Whether or not the field is labeled as optional.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "readOnly": {
          "name": "readOnly",
          "defaultValue": null,
          "description": "Whether or not the field is readonly.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "FormFieldProvider",
    "props": {
      "FormFieldProviderProps": {
        "value": {
          "name": "value",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "FormFieldContextProps"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "FormFieldFeedback",
    "props": {
      "FormFieldFeedbackProps": {
        "baseFontSize": {
          "name": "baseFontSize",
          "defaultValue": null,
          "description": "Base font size of the component. Only effective when `size == 'default'`",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "BaseFontSize",
            "value": [
              {
                "value": "13"
              },
              {
                "value": "16"
              }
            ]
          },
          "tags": {}
        },
        "disabled": {
          "name": "disabled",
          "defaultValue": null,
          "description": "Defines whether the component is disabled",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "errorMessage": {
          "name": "errorMessage",
          "defaultValue": null,
          "description": "The message to display when in an error state",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "hideFeedback": {
          "name": "hideFeedback",
          "defaultValue": {
            "value": false
          },
          "description": "Defines if feedback should forcibly be hidden",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "The id of the container div",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "size": {
          "name": "size",
          "defaultValue": null,
          "description": "The size of the component",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "Size",
            "value": [
              {
                "value": "\"xsmall\""
              },
              {
                "value": "\"small\""
              },
              {
                "value": "\"default\""
              },
              {
                "value": "\"large\""
              }
            ]
          },
          "tags": {}
        },
        "state": {
          "name": "state",
          "defaultValue": null,
          "description": "The state of the form field",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "FormFieldState",
            "value": [
              {
                "value": "\"none\""
              },
              {
                "value": "\"error\""
              },
              {
                "value": "\"valid\""
              }
            ]
          },
          "tags": {}
        },
        "successMessage": {
          "name": "successMessage",
          "defaultValue": null,
          "description": "The message to display when in a valid state",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes"
    }
  }
]