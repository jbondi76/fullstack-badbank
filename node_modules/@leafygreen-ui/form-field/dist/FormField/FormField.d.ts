import React from 'react';
import { Size } from '@leafygreen-ui/tokens';
import { FormFieldState } from './FormField.types';
/**
 * Creates a form field element with the appropriate styles and attributes for each element.
 *
 * Use the {@link FormFieldInput} element to apply the appropriate
 * interaction styles to the inner container element.
 *
 * See .stories file for examples
 * */
export declare const FormField: React.ForwardRefExoticComponent<(Omit<Omit<import("@leafygreen-ui/lib").HTMLElementProps<"div", never>, "children"> & {
    label: React.ReactNode;
    'aria-label'?: string | undefined;
    'aria-labelledby'?: string | undefined;
} & import("@leafygreen-ui/lib").DarkModeProps & {
    children: import("./FormField.types").FormFieldChildren;
    description?: React.ReactNode;
    state?: FormFieldState | undefined;
    size?: Size | undefined;
    disabled?: boolean | undefined;
    errorMessage?: React.ReactNode;
    successMessage?: React.ReactNode;
    baseFontSize?: import("@leafygreen-ui/tokens").BaseFontSize | undefined;
    optional?: boolean | undefined;
    readOnly?: boolean | undefined;
}, "ref"> | Omit<Omit<import("@leafygreen-ui/lib").HTMLElementProps<"div", never>, "children"> & {
    label?: React.ReactNode;
    'aria-label': string;
    'aria-labelledby'?: string | undefined;
} & import("@leafygreen-ui/lib").DarkModeProps & {
    children: import("./FormField.types").FormFieldChildren;
    description?: React.ReactNode;
    state?: FormFieldState | undefined;
    size?: Size | undefined;
    disabled?: boolean | undefined;
    errorMessage?: React.ReactNode;
    successMessage?: React.ReactNode;
    baseFontSize?: import("@leafygreen-ui/tokens").BaseFontSize | undefined;
    optional?: boolean | undefined;
    readOnly?: boolean | undefined;
}, "ref"> | Omit<Omit<import("@leafygreen-ui/lib").HTMLElementProps<"div", never>, "children"> & {
    label?: React.ReactNode;
    'aria-label'?: string | undefined;
    'aria-labelledby': string;
} & import("@leafygreen-ui/lib").DarkModeProps & {
    children: import("./FormField.types").FormFieldChildren;
    description?: React.ReactNode;
    state?: FormFieldState | undefined;
    size?: Size | undefined;
    disabled?: boolean | undefined;
    errorMessage?: React.ReactNode;
    successMessage?: React.ReactNode;
    baseFontSize?: import("@leafygreen-ui/tokens").BaseFontSize | undefined;
    optional?: boolean | undefined;
    readOnly?: boolean | undefined;
}, "ref">) & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=FormField.d.ts.map