[
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "LeafygreenUiConfirmationModal",
    "props": {
      "ModalProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the Modal component.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "setOpen": {
          "name": "setOpen",
          "defaultValue": {
            "value": "() => {}"
          },
          "description": "Callback to change the open state of the Modal.",
          "required": false,
          "type": {
            "name": "(open: boolean) => void | Dispatch<SetStateAction<boolean>>"
          },
          "tags": {
            "default": "() => {}"
          }
        },
        "shouldClose": {
          "name": "shouldClose",
          "defaultValue": {
            "value": "() => true"
          },
          "description": "Callback to determine whether or not Modal should close when user tries to close it.",
          "required": false,
          "type": {
            "name": "() => boolean"
          },
          "tags": {
            "default": "() => true"
          }
        },
        "contentClassName": {
          "name": "contentClassName",
          "defaultValue": null,
          "description": "className applied to overlay div.\nDisclaimer: This prop may be deprecated in future versions of Modal",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "initialFocus": {
          "name": "initialFocus",
          "defaultValue": null,
          "description": "By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus.\nWith this option you can specify a different element to receive that initial focus.\nSelector string (which will be passed to document.querySelector() to find the DOM node)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "closeIconColor": {
          "name": "closeIconColor",
          "defaultValue": {
            "value": "'default'"
          },
          "description": "Determines the color of the close icon.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "CloseIconColor",
            "value": [
              {
                "value": "\"default\""
              },
              {
                "value": "\"dark\""
              },
              {
                "value": "\"light\""
              }
            ]
          },
          "tags": {
            "default": "'default'"
          }
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "ConfirmationModalProps": {
        "title": {
          "name": "title",
          "defaultValue": null,
          "description": "Text of header element",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "open": {
          "name": "open",
          "defaultValue": null,
          "description": "The component is shown when the value is set to `true`.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "requiredInputText": {
          "name": "requiredInputText",
          "defaultValue": null,
          "description": "If set, the user will be prompted to type the requiredInputText into an input field",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "buttonText": {
          "name": "buttonText",
          "defaultValue": null,
          "description": "Text rendered in the primary button. Defaults to `\"Confirm\"`",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {
            "deprecated": "Use `confirmButtonProps`."
          }
        },
        "submitDisabled": {
          "name": "submitDisabled",
          "defaultValue": null,
          "description": "If `true`, the primary action button will be disabled",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "deprecated": "Use `confirmButtonProps`."
          }
        },
        "variant": {
          "name": "variant",
          "defaultValue": {
            "value": "primary"
          },
          "description": "Variant of the modal that represents the type of action handled by the modal.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "Variant",
            "value": [
              {
                "value": "\"primary\""
              },
              {
                "value": "\"danger\""
              }
            ]
          },
          "tags": {}
        },
        "onConfirm": {
          "name": "onConfirm",
          "defaultValue": null,
          "description": "Callback fired when the primary action button is clicked.",
          "required": false,
          "type": {
            "name": "() => void"
          },
          "tags": {
            "deprecated": "Use `confirmButtonProps`."
          }
        },
        "onCancel": {
          "name": "onCancel",
          "defaultValue": null,
          "description": "Callback fired when the cancel button is clicked.",
          "required": false,
          "type": {
            "name": "() => void"
          },
          "tags": {
            "deprecated": "Use `cancelButtonProps`."
          }
        },
        "confirmButtonProps": {
          "name": "confirmButtonProps",
          "defaultValue": {
            "value": "{}"
          },
          "description": "An object that accepts all Button props except for the `variant` prop. The variant is controlled by the `variant` prop.",
          "required": false,
          "type": {
            "name": "CustomConfirmButtonProps"
          },
          "tags": {}
        },
        "cancelButtonProps": {
          "name": "cancelButtonProps",
          "defaultValue": {
            "value": "{}"
          },
          "description": "An object that accepts all Button props. The `onClick` property will also fire when the `X` button, or backdrop is clicked.",
          "required": false,
          "type": {
            "name": "CustomCancelButtonProps"
          },
          "tags": {}
        }
      },
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      }
    }
  }
]