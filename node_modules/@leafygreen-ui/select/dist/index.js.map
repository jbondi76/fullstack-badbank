{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/Option/Options.styles.ts","../src/Option/Option.tsx","../src/OptionGroup/OptionGroup.styles.ts","../src/Select/Select.types.ts","../src/SelectContext.tsx","../src/styleSets.ts","../src/OptionGroup/OptionGroup.tsx","../src/utils.tsx","../src/ListMenu/ListMenu.styles.ts","../src/ListMenu/ListMenu.tsx","../src/MenuButton/MenuButton.styles.ts","../src/MenuButton/MenuButton.tsx","../src/Select/Select.styles.ts","../src/Select/Select.tsx"],"sourcesContent":["const LGID_ROOT = 'lg-select';\n\nexport const LGIDS_SELECT = {\n  root: LGID_ROOT,\n  errorMessage: `${LGID_ROOT}-error_message`,\n  popover: `${LGID_ROOT}-popover`,\n  buttonText: `${LGID_ROOT}-button_text`,\n} as const;\n","import { css } from '@leafygreen-ui/emotion';\nimport { descriptionClassName } from '@leafygreen-ui/input-option';\nimport { createUniqueClassName } from '@leafygreen-ui/lib';\nimport {\n  fontFamilies,\n  spacing,\n  transitionDuration,\n} from '@leafygreen-ui/tokens';\n\nexport const OptionClassName = createUniqueClassName('option');\n\nexport const optionStyle = css`\n  display: flex;\n  width: 100%;\n  outline: none;\n  overflow-wrap: anywhere;\n  transition: background-color ${transitionDuration.default}ms ease-in-out;\n  position: relative;\n  padding: ${spacing[2]}px 12px;\n  line-height: inherit;\n\n  &:before {\n    content: '';\n    position: absolute;\n    transform: scaleY(0.3);\n    top: 7px;\n    bottom: 7px;\n    left: 0;\n    right: 0;\n    width: 4px;\n    border-radius: 0px 4px 4px 0px;\n    opacity: 0;\n    transition: all ${transitionDuration.default}ms ease-in-out;\n  }\n\n  .${descriptionClassName} {\n    line-height: 16px; // Hardcoding because it does not match a token\n  }\n`;\n\nexport const optionTextStyle = css`\n  display: flex;\n  align-items: center;\n  font-family: ${fontFamilies.default};\n`;\n\nexport const iconStyle = css`\n  min-width: 16px;\n`;\n\nexport const glyphFocusStyle = css`\n  .${OptionClassName} {\n    &:focus-visible & {\n      color: currentColor;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { usePrevious } from '@leafygreen-ui/hooks';\nimport { isComponentGlyph } from '@leafygreen-ui/icon';\nimport CheckmarkIcon from '@leafygreen-ui/icon/dist/Checkmark';\nimport {\n  descriptionClassName,\n  InputOption,\n  InputOptionContent,\n} from '@leafygreen-ui/input-option';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { fontWeights } from '@leafygreen-ui/tokens';\n\nimport { colorSets } from '../styleSets';\n\nimport { InternalProps, OptionProps } from './Option.types';\nimport {\n  glyphFocusStyle,\n  iconStyle,\n  OptionClassName,\n  optionStyle,\n  optionTextStyle,\n} from './Options.styles';\n\nexport function InternalOption({\n  children,\n  className,\n  glyph,\n  selected,\n  focused,\n  disabled,\n  onClick,\n  onFocus,\n  triggerScrollIntoView,\n  hasGlyphs,\n  description,\n  ...rest\n}: InternalProps) {\n  const { theme } = useDarkMode();\n\n  const { option: colorSet } = colorSets[theme];\n\n  const ref = useRef<HTMLLIElement>(null);\n\n  const scrollIntoView = useCallback(() => {\n    if (ref.current == null) {\n      return null;\n    }\n\n    const element = ref.current;\n    const parent = element?.offsetParent;\n\n    if (!parent) {\n      return null;\n    }\n\n    // Can't use Element.scrollIntoView because it might\n    // cause scrolling outside the immediate parent.\n    parent.scrollTop =\n      element.offsetTop + (element.clientHeight - parent.clientHeight) / 2;\n  }, [ref]);\n\n  const alreadyScrolledIntoView = usePrevious(triggerScrollIntoView);\n  const shouldScrollIntoView =\n    triggerScrollIntoView && !alreadyScrolledIntoView;\n\n  useEffect(() => {\n    if (shouldScrollIntoView) {\n      scrollIntoView();\n    }\n  }, [scrollIntoView, shouldScrollIntoView]);\n\n  const wasFocused = usePrevious(focused);\n  const shouldFocus = focused && !wasFocused;\n\n  useEffect(() => {\n    if (shouldFocus) {\n      ref.current!.focus();\n    }\n  }, [shouldFocus]);\n\n  if (glyph) {\n    if (!isComponentGlyph(glyph)) {\n      console.error(\n        '`Option` instance did not render icon because it is not a known glyph element.',\n      );\n    }\n  }\n\n  // FIXME: temps styles until styles are consistent with InputOption\n  const glyphProp =\n    glyph && isComponentGlyph(glyph)\n      ? React.cloneElement(glyph, {\n          key: 'glyph',\n          className: cx(\n            iconStyle,\n            css`\n              color: ${colorSet.icon.base};\n            `,\n            glyphFocusStyle,\n            {\n              [css`\n                color: ${colorSet.icon.disabled};\n              `]: disabled,\n            },\n            glyph.props.className,\n          ),\n        })\n      : undefined;\n\n  // FIXME: temps styles until styles are consistent with InputOption\n  const checkmark = selected ? (\n    <CheckmarkIcon\n      key=\"checkmark\"\n      className={cx(\n        iconStyle,\n        css`\n          color: ${colorSet.icon.selected};\n        `,\n        glyphFocusStyle,\n        {\n          [css`\n            color: ${colorSet.icon.disabled};\n          `]: disabled,\n        },\n      )}\n    />\n  ) : undefined;\n\n  const leftGlyph = hasGlyphs ? glyphProp : checkmark;\n  const rightGlyph = hasGlyphs ? checkmark : undefined;\n\n  return (\n    <InputOption\n      aria-label={typeof children === 'string' ? children : 'option'}\n      {...rest}\n      disabled={disabled}\n      role=\"option\"\n      tabIndex={-1}\n      ref={ref}\n      className={cx(\n        OptionClassName,\n        optionStyle,\n        // FIXME: temps styles until styles are consistent with InputOption\n        {\n          [css`\n            &:focus-visible {\n              color: ${colorSet.text.focused};\n              background-color: ${colorSet.background.focused};\n\n              &:before {\n                opacity: 1;\n                transform: scaleY(1);\n                background-color: ${colorSet.indicator.focused};\n              }\n            }\n          `]: !disabled,\n          // FIXME: override the disabled colors since they are not consistent with InputOption\n          [css`\n            &,\n            & .${descriptionClassName} {\n              color: ${colorSet.text.disabled};\n            }\n          `]: disabled,\n        },\n        className,\n      )}\n      onClick={onClick}\n      onFocus={onFocus}\n      onKeyDown={undefined}\n    >\n      <InputOptionContent\n        leftGlyph={leftGlyph}\n        rightGlyph={rightGlyph}\n        description={description}\n      >\n        <span\n          className={cx(optionTextStyle, {\n            // FIXME: temps styles since we're not passing the `selected` prop to InputOption\n            [css`\n              font-weight: ${fontWeights.bold};\n            `]: selected,\n          })}\n        >\n          {children}\n        </span>\n      </InputOptionContent>\n    </InputOption>\n  );\n}\n\nInternalOption.displayName = 'Option';\n\nexport function Option(_: OptionProps): JSX.Element {\n  throw Error('`Option` must be a child of a `Select` instance');\n}\n\nOption.displayName = 'Option';\n\nOption.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  glyph: PropTypes.element,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  description: PropTypes.string,\n};\n\n// React.ReactComponentElement messes up the original\n// typing of props, so it is fixed up by overriding it.\nexport type OptionElement = Omit<\n  React.ReactComponentElement<typeof Option>,\n  'props'\n> & { props: OptionProps };\n","import { css } from '@leafygreen-ui/emotion';\nimport { fontWeights, spacing } from '@leafygreen-ui/tokens';\n\nexport const optionGroupStyle = css`\n  padding: ${spacing[2]}px 0;\n`;\n\nexport const optionGroupLabelStyle = css`\n  cursor: default;\n  width: 100%;\n  padding: 0 12px 2px;\n  outline: none;\n  overflow-wrap: anywhere;\n  font-size: 12px;\n  line-height: 16px;\n  font-weight: ${fontWeights.bold};\n  text-transform: uppercase;\n  letter-spacing: 0.4px;\n`;\n","import React from 'react';\n\nimport { ButtonProps } from '@leafygreen-ui/button';\nimport {\n  DarkModeProps,\n  Either,\n  HTMLElementProps,\n  LgIdProps,\n} from '@leafygreen-ui/lib';\nimport { PopoverProps } from '@leafygreen-ui/popover';\nimport { BaseFontSize } from '@leafygreen-ui/tokens';\n\nexport const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n} as const;\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const State = {\n  None: 'none',\n  Error: 'error',\n} as const;\nexport type State = (typeof State)[keyof typeof State];\n\nexport const DropdownWidthBasis = {\n  Trigger: 'trigger',\n  Option: 'option',\n} as const;\n\nexport type DropdownWidthBasis =\n  (typeof DropdownWidthBasis)[keyof typeof DropdownWidthBasis];\n\nexport interface BaseSelectProps\n  extends Omit<\n      HTMLElementProps<'button', HTMLButtonElement>,\n      'onChange' | 'onClick'\n    >,\n    Omit<PopoverProps, 'active' | 'spacing'>,\n    DarkModeProps,\n    LgIdProps {\n  /**\n   * Children rendered inside the component. Expected to be either `<Option>` or `<OptionGroup>`.\n   *\n   * @type `<Option />` | `<OptionGroup/>`\n   */\n  children: React.ReactNode;\n\n  /**\n   * HTML `id` property used to allow Javascript, form, or label to reference the input.\n   */\n  id?: string;\n\n  /**\n   * Determines the size in which the component will be rendered.\n   */\n  size?: Size;\n\n  /**\n   * When present, it specifies that the drop-down list should be disabled.\n   *\n   * A `disabled` drop-down list is unusable and un-clickable.\n   */\n  disabled?: boolean;\n\n  /**\n   * Secondary text rendered under the label to provide additional details about the select and its options.\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Text rendered in the Select component before a value is set.\n   */\n  placeholder?: string;\n\n  /**\n   * The `name` attribute specifies the name for a drop-down list.\n   *\n   * The `name` attribute is used to reference elements in a JavaScript, or to reference form data after a form is submitted.\n   */\n  name?: string;\n\n  /**\n   * Allows the user to unselect an option.\n   */\n  allowDeselect?: boolean;\n\n  /**\n   * Error message rendered when the `state` prop is set to `error`.\n   */\n  errorMessage?: string;\n\n  /**\n   * Determines whether the component should be rendered in an error state.\n   */\n  state?: State;\n\n  /**\n   *  determines the base font size if sizeVariant is set to default.\n   */\n  baseFontSize?: BaseFontSize;\n\n  /**\n   *  Determines the width of the dropdown. `trigger` will make the dropdown width the width of the menu button. `option` will make the dropdown width as wide as the widest option.\n   *\n   * @default 'trigger'\n   */\n  dropdownWidthBasis?: DropdownWidthBasis;\n\n  /**\n   * @internal\n   */\n  __INTERNAL__menuButtonSlot__?: React.ForwardRefExoticComponent<\n    React.RefAttributes<unknown>\n  >;\n\n  /**\n   * @internal\n   */\n  __INTERNAL__menuButtonSlotProps__?: Partial<ButtonProps> &\n    Record<string, any>;\n}\n\nexport interface LabelProp {\n  label: string;\n  'aria-labelledby': string;\n  'aria-label': string;\n}\n\nexport type SelectProps = BaseSelectProps &\n  Either<LabelProp, 'label' | 'aria-labelledby' | 'aria-label'> &\n  (\n    | // Uncontrolled\n    ({\n        /**\n         * `value` makes the component a controlled component and using `defaultValue` makes it uncontrolled.\n         */\n        defaultValue?: string;\n        /**\n         * `value` makes the component a controlled component and using `defaultValue` makes it uncontrolled.\n         */\n        value?: undefined;\n      } & {\n        /**\n         * A function that takes in the value of the selected option, and the event that was used to select the value (i.e. React.MouseEvent | KeyboardEvent | React.KeyboardEvent).\n         *\n         * Note: This API is different from the native HTML `<select>` element's `onChange` prop given the current technical design of this component.\n         */\n        onChange?: (\n          value: string,\n          event: React.MouseEvent | KeyboardEvent | React.KeyboardEvent,\n        ) => void;\n        /**\n         * Indicates that the component's value cannot be changed.\n         */\n        readOnly?: false;\n      })\n    // Controlled\n    | ({ value: string; defaultValue?: undefined } & (\n        | {\n            /**\n             * A function that takes in the value of the selected option, and the event that was used to select the value (i.e. React.MouseEvent | KeyboardEvent | React.KeyboardEvent).\n             *\n             * Note: This API is different from the native HTML `<select>` element's `onChange` prop given the current technical design of this component.\n             */\n            onChange: (\n              value: string,\n              event: React.MouseEvent | KeyboardEvent | React.KeyboardEvent,\n            ) => void;\n            readOnly?: false;\n          }\n        | { readOnly: true; onChange?: undefined }\n      ))\n  );\n","import { createContext } from 'react';\n\nimport { Size } from './Select/Select.types';\n\ninterface SelectData {\n  size: Size;\n  open: boolean;\n  disabled: boolean;\n}\n\nexport const SelectContext = createContext<SelectData>({\n  size: Size.Default,\n  open: false,\n  disabled: false,\n});\n\nexport default SelectContext;\n","import { transparentize } from 'polished';\n\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { Size } from './Select/Select.types';\n\ninterface ColorSet {\n  menu: {\n    shadow: string;\n    border?: string;\n  };\n  option: {\n    group: {\n      label: string;\n    };\n    background: {\n      base: string;\n      hovered: string;\n      focused: string;\n    };\n    text: {\n      base: string;\n      selected: string;\n      disabled: string;\n      focused: string;\n    };\n    icon: {\n      base: string;\n      selected: string;\n      disabled: string;\n    };\n    indicator: {\n      focused: string;\n    };\n  };\n}\n\nexport const colorSets: Record<Theme, ColorSet> = {\n  [Theme.Light]: {\n    menu: {\n      border: palette.gray.light2,\n      shadow: transparentize(0.75, palette.black),\n    },\n    option: {\n      group: {\n        label: palette.gray.dark1,\n      },\n      background: {\n        base: palette.white,\n        hovered: palette.gray.light2,\n        focused: palette.blue.light3,\n      },\n      text: {\n        base: palette.gray.dark3,\n        selected: palette.blue.base,\n        disabled: palette.gray.base,\n        focused: palette.blue.dark2,\n      },\n      icon: {\n        base: palette.gray.dark1,\n        selected: palette.blue.base,\n        disabled: palette.gray.base,\n      },\n      indicator: {\n        focused: palette.blue.base,\n      },\n    },\n  },\n\n  [Theme.Dark]: {\n    menu: {\n      border: palette.gray.dark2,\n      shadow: transparentize(0.85, '#000000'),\n    },\n    option: {\n      group: {\n        label: palette.gray.base,\n      },\n      background: {\n        base: palette.gray.dark3,\n        hovered: palette.gray.dark4,\n        focused: palette.blue.dark3,\n      },\n      text: {\n        base: palette.gray.light2,\n        selected: palette.gray.light2,\n        disabled: palette.gray.base,\n        focused: palette.blue.light3,\n      },\n      icon: {\n        base: palette.gray.base,\n        selected: palette.blue.light1,\n        disabled: palette.gray.base,\n      },\n      indicator: {\n        focused: palette.blue.light1,\n      },\n    },\n  },\n};\n\nexport interface SizeSet {\n  height: number;\n  text: number;\n  lineHeight?: number;\n  option: {\n    text: number;\n  };\n  warningIcon: number;\n  label?: {\n    text: number;\n    lineHeight: number;\n  };\n  description?: {\n    text: number;\n    lineHeight: number;\n  };\n}\n\nexport const sizeSets: Record<Size, SizeSet> = {\n  [Size.XSmall]: {\n    height: 22,\n    text: 13,\n    option: {\n      text: 13,\n    },\n    warningIcon: 16,\n  },\n  [Size.Small]: {\n    height: 28,\n    text: 13,\n    option: {\n      text: 13,\n    },\n    warningIcon: 16,\n  },\n  [Size.Default]: {\n    height: 36,\n    text: 13,\n    option: {\n      text: 13,\n    },\n    warningIcon: 16,\n  },\n  [Size.Large]: {\n    height: 48,\n    text: 18,\n    option: {\n      text: 16,\n    },\n    warningIcon: 16,\n  },\n};\n\ninterface MobileSizeSet {\n  height: number;\n  text: number;\n  label: {\n    text: number;\n    lineHeight: number;\n  };\n  description: {\n    text: number;\n    lineHeight: number;\n  };\n  option: {\n    text: number;\n  };\n  warningIcon: number;\n}\n\nexport const mobileSizeSet: MobileSizeSet = {\n  height: 36,\n  text: 16,\n  label: {\n    text: 16,\n    lineHeight: 19,\n  },\n  description: {\n    text: 16,\n    lineHeight: 22,\n  },\n  option: {\n    text: 16,\n  },\n  warningIcon: 14,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport { colorSets } from '../styleSets';\n\nimport { optionGroupLabelStyle, optionGroupStyle } from './OptionGroup.styles';\nimport { InternalOptionProps, OptionGroupProps } from './OptionGroup.types';\n\nexport function InternalOptionGroup({\n  className,\n  label,\n  children,\n  ...rest\n}: InternalOptionProps) {\n  const { theme } = useDarkMode();\n  const colorSet = colorSets[theme].option;\n\n  const groupId = useIdAllocator({ prefix: 'select-option-group' });\n\n  return (\n    <div className={cx(optionGroupStyle, className)} {...rest}>\n      <div\n        id={groupId}\n        className={cx(\n          optionGroupLabelStyle,\n          css`\n            color: ${colorSet.group.label};\n          `,\n        )}\n      >\n        {label}\n      </div>\n      <div role=\"group\" aria-labelledby={groupId}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nInternalOptionGroup.displayName = 'OptionGroup';\n\nexport function OptionGroup(_: OptionGroupProps): JSX.Element {\n  throw Error('`OptionGroup` must be a child of a `Select` instance');\n}\n\nOptionGroup.displayName = 'OptionGroup';\n\nOptionGroup.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.oneOf([false, null, undefined, '']),\n        PropTypes.element,\n      ]),\n    ),\n  ]).isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport type OptionGroupElement = React.ReactComponentElement<\n  typeof OptionGroup\n>;\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { isFragment } from 'react-is';\n\nimport { consoleOnce, isComponentType } from '@leafygreen-ui/lib';\nimport { breakpoints } from '@leafygreen-ui/tokens';\n\nimport {\n  InternalOption,\n  InternalProps as InternalOptionProps,\n  OptionElement,\n  ReactEmpty,\n} from './Option';\nimport { InternalOptionGroup, OptionGroupElement } from './OptionGroup';\n\n// Any screen smaller than a tablet with no pointer, or a coarse pointer and no hover capability (i.e. touch screen)\n// For more details, see: https://css-tricks.com/touch-devices-not-judged-size/\nconst _baseQuery = `@media only screen and (max-width: ${breakpoints.Tablet}px) and (hover: none)`;\nexport const MobileMediaQuery = `${_baseQuery} and (pointer: coarse), ${_baseQuery} and (pointer: none)`;\n\nfunction isReactEmpty(value: React.ReactNode): value is ReactEmpty {\n  return (\n    value === undefined || value === null || value === false || value === ''\n  );\n}\n\nexport function traverseSelectChildren(\n  children: React.ReactNode,\n  optionFn: (child: OptionElement, group?: OptionGroupElement) => void,\n): void {\n  React.Children.forEach(children, child => {\n    if (isComponentType<OptionElement>(child, 'Option')) {\n      optionFn(child);\n    } else if (isComponentType<OptionGroupElement>(child, 'OptionGroup')) {\n      traverseSelectChildren(child.props.children, option =>\n        optionFn(option, child),\n      );\n    } else if (isFragment(child)) {\n      traverseSelectChildren(child.props.children, optionFn);\n    }\n  });\n}\n\nexport function convertToInternalElements(\n  children: React.ReactNode,\n  optionFn: (\n    child: OptionElement,\n    group?: OptionGroupElement,\n  ) => InternalOptionProps,\n  fallbackFn?: (child: React.ReactNode) => void,\n): React.ReactNode {\n  if (\n    !(\n      React.Children.toArray(children).every(child =>\n        isComponentType<OptionElement>(child, 'Option'),\n      ) ||\n      React.Children.toArray(children).every(child =>\n        isComponentType<OptionGroupElement>(child, 'OptionGroup'),\n      )\n    )\n  ) {\n    consoleOnce.warn(\n      `LeafyGreen Select: Combining grouped and ungrouped Select Options can cause styling issues`,\n    );\n  }\n\n  return React.Children.map(children, child => {\n    if (isComponentType<OptionElement>(child, 'Option')) {\n      return <InternalOption {...optionFn(child)} />;\n    } else if (isComponentType<OptionGroupElement>(child, 'OptionGroup')) {\n      const { children: options, ...rest } = child.props;\n      return (\n        <InternalOptionGroup className={undefined} {...rest}>\n          {convertToInternalElements(\n            options,\n            option => optionFn(option, child),\n            fallbackFn,\n          )}\n        </InternalOptionGroup>\n      );\n    } else if (isFragment(child)) {\n      return convertToInternalElements(\n        child.props.children,\n        optionFn,\n        fallbackFn,\n      );\n    } else if (!isReactEmpty(child)) {\n      fallbackFn?.(child);\n    }\n\n    return null;\n  });\n}\n\nexport function getOptionValue(option: OptionElement | null): string {\n  if (option === null) {\n    return '';\n  }\n\n  if (option.props.value !== undefined) {\n    return option.props.value;\n  }\n\n  if (Array.isArray(option.props.children)) {\n    return option.props.children.filter(child => !isReactEmpty(child)).join('');\n  }\n\n  if (option.props.children) {\n    return option.props.children.toString();\n  }\n\n  return '';\n}\n\nexport function isOptionDisabled(\n  option: OptionElement,\n  group: OptionGroupElement | undefined,\n): boolean {\n  return (option.props.disabled ?? false) || (group?.props?.disabled ?? false);\n}\n\nexport function isOptionSelectable(\n  option: OptionElement,\n  group: OptionGroupElement | undefined,\n  value: string,\n): boolean {\n  return getOptionValue(option) === value && !isOptionDisabled(option, group);\n}\n\n/**\n * Given the selected option from a previous render, attempts to find a\n * match among the options of the next render to become the next selected\n * option, so that the state of the component doesn't need to be lost.\n */\nexport function reconcileOption(\n  children: React.ReactNode,\n  previousOption: OptionElement,\n): OptionElement | null {\n  // we disregard `key`s because they should only be compared in\n  // the context of the same parent element, which we don't know\n  // and would be complex to track. we disregard which option\n  // group the previous option was in as well for simplicity.\n  let sameInstance: OptionElement | undefined;\n  let sameChildrenAndValue: OptionElement | undefined;\n  let sameExplicitValue: OptionElement | undefined;\n  let sameValue: OptionElement | undefined;\n\n  traverseSelectChildren(children, option => {\n    if (option === previousOption) {\n      sameInstance = previousOption;\n    } else if (\n      option.props.children === previousOption.props.children &&\n      option.props.value === previousOption.props.value\n    ) {\n      sameChildrenAndValue ??= option;\n    } else if (\n      option.props.value !== undefined &&\n      option.props.value === previousOption.props.value\n    ) {\n      sameExplicitValue ??= option;\n    } else if (getOptionValue(option) === getOptionValue(previousOption)) {\n      sameValue ??= option;\n    }\n  });\n\n  return (\n    sameInstance ??\n    sameChildrenAndValue ??\n    sameExplicitValue ??\n    sameValue ??\n    null\n  );\n}\n\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  initialValue: T,\n  options: { initialValue: T; deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T) => void,\n  options?: { initialValue: T | null; deps?: React.DependencyList },\n): React.RefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | undefined) => void,\n  options?: { deps?: React.DependencyList },\n): React.MutableRefObject<T>;\nexport function useObservedRef<T>(\n  callback: (value: T | null | undefined) => void,\n  {\n    initialValue,\n    deps = [],\n  }: { initialValue?: T | null; deps?: React.DependencyList } = {},\n) {\n  const ref = useRef(initialValue);\n\n  return useMemo(\n    () => ({\n      get current() {\n        return ref.current;\n      },\n      set current(nextValue) {\n        ref.current = nextValue;\n        callback(nextValue);\n      },\n    }),\n    [\n      callback,\n      ref,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...deps,\n    ],\n  );\n}\n\ntype SettableRef<T> = React.RefCallback<T> | React.MutableRefObject<T>;\n\ntype ValueOrArray<T> = T | ReadonlyArray<T>;\n\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n  initialValue: T,\n): React.MutableRefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null> | null>,\n  initialValue: T | null,\n): React.RefObject<T>;\nexport function useForwardedRef<T>(\n  forwardedRefOrRefs: ValueOrArray<SettableRef<T | null | undefined> | null>,\n  initialValue?: T | null,\n): React.MutableRefObject<T | null | undefined> {\n  const forwardValueToRefs = useCallback(\n    <T,>(\n      forwardedRefOrRefs: ValueOrArray<SettableRef<T> | null>,\n      nextValue: T,\n    ) => {\n      if (Array.isArray(forwardedRefOrRefs)) {\n        forwardedRefOrRefs.forEach(forwardValueToRefs);\n      } else if (typeof forwardedRefOrRefs === 'function') {\n        forwardedRefOrRefs(nextValue);\n      } else if (forwardedRefOrRefs) {\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/40527\n        forwardedRefOrRefs.current = nextValue;\n      }\n    },\n    [],\n  );\n\n  return useObservedRef(\n    useCallback(\n      value => forwardValueToRefs(forwardedRefOrRefs, value),\n      [forwardedRefOrRefs, forwardValueToRefs],\n    ),\n    { initialValue },\n  );\n}\n\n/**\n * TODO: Explore obsoleting `useElementNode` in favor of this\n */\nexport const useStateRef: typeof useRef = <T,>(initialValue?: T) => {\n  const [value, setValue] = useState(initialValue);\n  return useObservedRef(setValue, { initialValue, deps: [value] });\n};\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { fontFamilies, Size, spacing } from '@leafygreen-ui/tokens';\n\nimport { colorSets, sizeSets } from '../styleSets';\n\nexport const popoverClassName = createUniqueClassName('select-popover');\n\nexport const maxMenuHeight = 274;\nexport const menuMargin = spacing[2];\n\nexport const baseMenuStyle = css`\n  position: relative;\n  text-align: left;\n  width: 100%;\n  border-radius: 3px;\n  line-height: 16px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n`;\n\nexport const autoWidthStyles = css`\n  width: max-content;\n`;\n\nexport const getMenuStyles = (theme: Theme, size: Size) => {\n  const sizeSet = sizeSets[size];\n  const colorSet = colorSets[theme];\n\n  return cx(\n    css`\n      font-family: ${fontFamilies.default};\n      font-size: ${sizeSet.option.text}px;\n      min-height: ${sizeSet.height}px;\n      background-color: ${colorSet.option.background.base};\n      border-radius: 12px;\n      box-shadow: 0 4px 7px 0 ${colorSet.menu.shadow};\n      padding: ${spacing[2]}px 0;\n      border: 1px solid ${colorSet.menu.border};\n    `,\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { useAvailableSpace } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport Popover, { Align, Justify } from '@leafygreen-ui/popover';\n\nimport { LGIDS_SELECT } from '../constants';\nimport { DropdownWidthBasis } from '../Select/Select.types';\nimport SelectContext from '../SelectContext';\nimport { mobileSizeSet } from '../styleSets';\nimport { MobileMediaQuery, useForwardedRef } from '../utils';\n\nimport {\n  autoWidthStyles,\n  baseMenuStyle,\n  getMenuStyles,\n  maxMenuHeight,\n  menuMargin,\n  popoverClassName,\n} from './ListMenu.styles';\nimport { ListMenuProps } from './ListMenu.types';\n\n/**\n * @internal\n */\nconst ListMenu = React.forwardRef<HTMLUListElement, ListMenuProps>(\n  function ListMenu(\n    {\n      children,\n      id,\n      referenceElement,\n      className,\n      labelId,\n      dropdownWidthBasis,\n      usePortal = true,\n      portalContainer,\n      scrollContainer,\n      portalClassName,\n      popoverZIndex,\n      onEntering,\n      onEnter,\n      onEntered,\n      onExiting,\n      onExit,\n      onExited,\n    }: ListMenuProps,\n    forwardedRef,\n  ) {\n    const { theme } = useDarkMode();\n    const { size, disabled, open } = useContext(SelectContext);\n\n    const ref = useForwardedRef(forwardedRef, null);\n\n    const availableSpace = useAvailableSpace(referenceElement, menuMargin);\n    const maxHeightValue = !isUndefined(availableSpace)\n      ? `${Math.min(availableSpace, maxMenuHeight)}px`\n      : 'unset';\n\n    const onClick = useCallback(\n      (event: React.MouseEvent) => {\n        if (ref.current) {\n          ref.current.focus();\n        }\n        event.stopPropagation();\n      },\n      [ref],\n    );\n\n    const popoverProps = {\n      popoverZIndex,\n      onEntering,\n      onEnter,\n      onEntered,\n      onExiting,\n      onExit,\n      onExited,\n      ...(usePortal\n        ? { usePortal, portalClassName, portalContainer, scrollContainer }\n        : { usePortal }),\n    };\n\n    return (\n      <Popover\n        active={open && !disabled}\n        spacing={6}\n        align={Align.Bottom}\n        justify={Justify.Start}\n        adjustOnMutation\n        className={cx(popoverClassName, className, {\n          [autoWidthStyles]: dropdownWidthBasis === DropdownWidthBasis.Option,\n        })}\n        refEl={referenceElement}\n        {...popoverProps}\n      >\n        {/* Keyboard events handled in Select component through event listener hook */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n        <ul\n          data-lgid={LGIDS_SELECT.popover}\n          aria-labelledby={labelId}\n          role=\"listbox\"\n          ref={ref}\n          tabIndex={-1}\n          onClick={onClick}\n          className={cx(\n            baseMenuStyle,\n            getMenuStyles(theme, size),\n            css`\n              max-height: ${maxHeightValue};\n              ${MobileMediaQuery} {\n                font-size: ${mobileSizeSet.option.text}px;\n              }\n            `,\n          )}\n          id={id}\n        >\n          {children}\n        </ul>\n      </Popover>\n    );\n  },\n);\n\nListMenu.displayName = 'ListMenu';\n\nexport default ListMenu;\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  focusRing,\n  fontWeights,\n  hoverRing,\n  Size,\n  spacing,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nexport const menuButtonTextClassName = createUniqueClassName('select-menu');\n\nexport const menuButtonStyleOverrides = css`\n  // Override button defaults\n  font-weight: ${fontWeights.regular};\n  > *:last-child {\n    grid-template-columns: 1fr 16px;\n    justify-content: flex-start;\n\n    > svg {\n      justify-self: right;\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n\nexport const menuButtonSizeStyle: Record<Size, string> = {\n  [Size.Default]: css`\n    > *:last-child {\n      padding: 0 12px;\n    }\n  `,\n  [Size.Large]: css`\n    > *:last-child {\n      padding: 0 12px 0 ${spacing[3]}px;\n    }\n  `,\n  [Size.Small]: css`\n    > *:last-child {\n      padding: 0 ${spacing[2]}px 0 10px;\n    }\n  `,\n  [Size.XSmall]: css`\n    text-transform: none;\n    font-size: ${typeScales.body1.fontSize}px;\n    line-height: ${typeScales.body1.lineHeight}px;\n    > *:last-child {\n      padding: 0 ${spacing[1]}px 0 10px;\n    }\n  `,\n};\n\nexport const menuButtonModeOverrides: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.white};\n    // Override button default color\n    > *:last-child {\n      > svg {\n        color: ${palette.gray.dark2};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    border-color: ${palette.gray.base};\n    background-color: ${palette.gray.dark4};\n    color: ${palette.gray.light3};\n\n    // Override button default color\n    > *:last-child {\n      > svg {\n        color: ${palette.gray.light1};\n      }\n    }\n\n    &:hover,\n    &:active,\n    &:focus {\n      background-color: ${palette.gray.dark4};\n      color: ${palette.gray.light3};\n    }\n  `,\n};\n\n// Override default button focus styles\nexport const menuButtonFocusStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible {\n      box-shadow: ${focusRing['light'].input};\n      border-color: rgba(255, 255, 255, 0);\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible {\n      background-color: ${palette.gray.dark4};\n      box-shadow: ${focusRing['dark'].input};\n      border-color: rgba(255, 255, 255, 0);\n    }\n  `,\n};\n\nexport const menuButtonDeselectedStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light1};\n\n    &:hover,\n    &:active,\n    &:focus {\n      color: ${palette.gray.light1};\n    }\n  `,\n};\n\nexport const menuButtonDisabledStyles = css`\n  cursor: not-allowed;\n  pointer-events: unset;\n  box-shadow: unset;\n\n  &:active {\n    pointer-events: none;\n  }\n`;\n\nexport const menuButtonDisabledThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: cx(\n    menuButtonDisabledStyles,\n    css`\n      &[aria-disabled='true'] {\n        background-color: ${palette.gray.light2};\n        color: ${palette.gray.base};\n\n        > *:last-child {\n          > svg {\n            color: ${palette.gray.base};\n          }\n        }\n      }\n    `,\n  ),\n  [Theme.Dark]: cx(\n    menuButtonDisabledStyles,\n    css`\n      &[aria-disabled='true'] {\n        background-color: ${palette.gray.dark3};\n        color: ${palette.gray.dark1};\n        border-color: ${palette.gray.dark2};\n\n        > *:last-child {\n          > svg {\n            color: ${palette.gray.dark1};\n          }\n        }\n      }\n    `,\n  ),\n};\n\nexport const menuButtonTextWrapperStyle = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  gap: ${spacing[1]}px;\n  overflow: hidden;\n`;\n\nexport const menuButtonTextStyle = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 100%;\n`;\n\nexport const errorColor: Record<Theme, string> = {\n  [Theme.Light]: palette.red.base,\n  [Theme.Dark]: palette.red.light1,\n};\n\nexport const menuButtonErrorStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    border-color: ${errorColor[Theme.Light]};\n    background-color: ${palette.white};\n\n    &:hover,\n    &:active {\n      box-shadow: ${hoverRing.light.red};\n    }\n  `,\n  [Theme.Dark]: css`\n    border-color: ${errorColor[Theme.Dark]};\n\n    &:hover,\n    &:active {\n      border-color: ${errorColor[Theme.Dark]};\n      box-shadow: ${hoverRing.dark.red};\n    }\n  `,\n};\n","import React, { useCallback, useContext } from 'react';\n\nimport Button, { Size as ButtonSize, Variant } from '@leafygreen-ui/button';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport CaretDownIcon from '@leafygreen-ui/icon/dist/CaretDown';\nimport WarningIcon from '@leafygreen-ui/icon/dist/Warning';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { Theme } from '@leafygreen-ui/lib';\n\nimport { LGIDS_SELECT } from '../constants';\nimport { State } from '../Select/Select.types';\nimport SelectContext from '../SelectContext';\nimport { mobileSizeSet, sizeSets } from '../styleSets';\nimport { MobileMediaQuery, useForwardedRef } from '../utils';\n\nimport {\n  errorColor,\n  menuButtonDeselectedStyles,\n  menuButtonDisabledThemeStyles,\n  menuButtonErrorStyle,\n  menuButtonFocusStyle,\n  menuButtonModeOverrides,\n  menuButtonSizeStyle,\n  menuButtonStyleOverrides,\n  menuButtonTextClassName,\n  menuButtonTextStyle,\n  menuButtonTextWrapperStyle,\n} from './MenuButton.styles';\nimport { MenuButtonProps } from './MenuButton.types';\n\n/**\n * @internal\n */\nconst MenuButton = React.forwardRef<HTMLButtonElement, MenuButtonProps>(\n  function MenuButton(\n    {\n      children,\n      value,\n      text,\n      name,\n      deselected,\n      readOnly,\n      onClose,\n      onOpen,\n      errorMessage,\n      state,\n      baseFontSize,\n      __INTERNAL__menuButtonSlot__,\n      __INTERNAL__menuButtonSlotProps__,\n      ...rest\n    }: MenuButtonProps,\n    forwardedRef,\n  ) {\n    const { theme } = useDarkMode();\n    const { open, size, disabled } = useContext(SelectContext);\n\n    const ref = useForwardedRef(forwardedRef, null);\n\n    const sizeSet = sizeSets[size];\n\n    const onClick = useCallback(() => {\n      if (open) {\n        onClose();\n      } else {\n        onOpen();\n      }\n      ref.current!.focus();\n    }, [onClose, onOpen, open, ref]);\n\n    const Component = __INTERNAL__menuButtonSlot__\n      ? __INTERNAL__menuButtonSlot__\n      : Button;\n\n    const buttonClassName = __INTERNAL__menuButtonSlot__\n      ? ''\n      : cx(\n          menuButtonStyleOverrides,\n          menuButtonModeOverrides[theme],\n          menuButtonSizeStyle[size],\n          menuButtonFocusStyle[theme],\n          {\n            [menuButtonDeselectedStyles[theme]]: deselected,\n            [menuButtonDisabledThemeStyles[theme]]: disabled,\n            [menuButtonErrorStyle[theme]]:\n              state === State.Error && !!errorMessage,\n            [css`\n              letter-spacing: initial;\n            `]: size === ButtonSize.XSmall,\n          },\n          css`\n            width: 100%;\n            ${MobileMediaQuery} {\n              height: ${mobileSizeSet.height}px;\n              font-size: ${mobileSizeSet.text}px;\n            }\n          `,\n        );\n\n    const testId =\n      (rest as any)['data-testid'] ?? 'leafygreen-ui-select-menubutton';\n\n    return (\n      <Component\n        {...rest}\n        {...__INTERNAL__menuButtonSlotProps__}\n        ref={ref}\n        name={name}\n        value={value}\n        disabled={disabled}\n        onClick={onClick}\n        variant={Variant.Default}\n        darkMode={theme === Theme.Dark}\n        rightGlyph={<CaretDownIcon />}\n        size={size}\n        data-testid={testId}\n        className={cx(\n          buttonClassName,\n          {\n            [css`\n              font-size: ${baseFontSize}px;\n            `]: size === ButtonSize.Default,\n          },\n          __INTERNAL__menuButtonSlotProps__?.className,\n        )}\n      >\n        <div className={menuButtonTextWrapperStyle}>\n          <div\n            data-lgid={LGIDS_SELECT.buttonText}\n            className={cx(menuButtonTextClassName, menuButtonTextStyle)}\n          >\n            {text}\n          </div>\n          {state === State.Error && errorMessage && (\n            <WarningIcon\n              aria-hidden\n              className={css`\n                color: ${errorColor[theme]};\n              `}\n              size={sizeSet.warningIcon}\n              title=\"Error\"\n            />\n          )}\n        </div>\n        {children}\n      </Component>\n    );\n  },\n);\n\nMenuButton.displayName = 'MenuButton';\n\nexport default MenuButton;\n","import { css } from '@leafygreen-ui/emotion';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  fontFamilies,\n  spacing,\n  transitionDuration,\n  typeScales,\n} from '@leafygreen-ui/tokens';\n\nimport { SizeSet } from '../styleSets';\n\nexport const labelDescriptionContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${spacing[1]}px;\n`;\n\nexport const wrapperStyle = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const largeLabelStyles = css`\n  font-size: ${typeScales.large.fontSize}px;\n  line-height: ${typeScales.large.lineHeight}px;\n`;\n\nexport const errorTextStyle = ({\n  darkMode,\n  sizeSet,\n}: {\n  darkMode: boolean;\n  sizeSet: SizeSet;\n}) => css`\n  font-family: ${fontFamilies.default};\n  color: ${darkMode ? palette.red.light1 : palette.red.base};\n  font-size: ${sizeSet.text}px;\n  margin-top: ${spacing[1]}px;\n  padding-left: 2px;\n  transition: color ${transitionDuration.faster}ms ease-in-out;\n  transition-delay: ${transitionDuration.faster}ms;\n`;\n","import React, {\n  ComponentProps,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  WeakValidationMap,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport {\n  useEventListener,\n  useForwardedRef,\n  useIdAllocator,\n  useViewportSize,\n} from '@leafygreen-ui/hooks';\nimport LeafyGreenProvider, {\n  useDarkMode,\n} from '@leafygreen-ui/leafygreen-provider';\nimport { keyMap } from '@leafygreen-ui/lib';\nimport { BaseFontSize } from '@leafygreen-ui/tokens';\nimport { Description, Label } from '@leafygreen-ui/typography';\n\nimport { LGIDS_SELECT } from '../constants';\nimport ListMenu from '../ListMenu';\nimport MenuButton from '../MenuButton';\nimport { InternalOption, OptionElement } from '../Option';\nimport SelectContext from '../SelectContext';\nimport { mobileSizeSet, sizeSets } from '../styleSets';\nimport {\n  convertToInternalElements,\n  getOptionValue,\n  isOptionDisabled,\n  isOptionSelectable,\n  MobileMediaQuery,\n  reconcileOption,\n  traverseSelectChildren,\n  useStateRef,\n} from '../utils';\n\nimport {\n  errorTextStyle,\n  labelDescriptionContainerStyle,\n  largeLabelStyles,\n  wrapperStyle,\n} from './Select.styles';\nimport { DropdownWidthBasis, SelectProps, Size, State } from './Select.types';\n\n/**\n * Select inputs are typically used alongside other form elements like toggles, radio boxes, or text inputs when a user needs to make a selection from a list of items.\n *\n * In a select input where there are less than 3-4 items, consider using radio boxes, or radio inputs instead.\n */\nexport const Select = forwardRef<HTMLDivElement, SelectProps>(\n  (\n    {\n      children,\n      darkMode: darkModeProp,\n      size = Size.Default,\n      disabled = false,\n      allowDeselect = true,\n      usePortal = true,\n      placeholder = 'Select',\n      errorMessage = '',\n      state = State.None,\n      dropdownWidthBasis = DropdownWidthBasis.Trigger,\n      baseFontSize = BaseFontSize.Body1,\n      'data-lgid': dataLgId = LGIDS_SELECT.root,\n      id: idProp,\n      'aria-labelledby': ariaLabelledby,\n      'aria-label': ariaLabel,\n      className,\n      label,\n      description,\n      name,\n      defaultValue,\n      value,\n      onChange,\n      readOnly,\n      portalContainer,\n      scrollContainer,\n      portalClassName,\n      popoverZIndex,\n      onEntering,\n      onEnter,\n      onEntered,\n      onExiting,\n      onExit,\n      onExited,\n      __INTERNAL__menuButtonSlot__,\n      ...rest\n    },\n    fwdRef,\n  ) => {\n    const id = useIdAllocator({ prefix: 'select', id: idProp });\n    const labelId = useMemo(\n      () => (ariaLabel && !label ? undefined : ariaLabelledby ?? `${id}-label`),\n      [ariaLabelledby, ariaLabel, label, id],\n    );\n\n    if (!label && !ariaLabelledby && !ariaLabel) {\n      console.error(\n        'For screen-reader accessibility, label, aria-label, or aria-labelledby must be provided to Select.',\n      );\n    }\n\n    const { darkMode } = useDarkMode(darkModeProp);\n\n    const descriptionId = `${id}-description`;\n    const menuId = `${id}-menu`;\n\n    const [open, setOpen] = useState(false);\n\n    const containerRef = useForwardedRef(fwdRef, null);\n    const menuButtonRef = useStateRef<HTMLButtonElement>(null);\n    const menuButtonId = useIdAllocator({ prefix: 'select' });\n    const listMenuRef = useStateRef<HTMLUListElement | null>(null);\n\n    const sizeSet = sizeSets[size];\n\n    const providerData = useMemo(() => {\n      return { size, open, disabled };\n    }, [size, open, disabled]);\n\n    useEffect(() => {\n      if (value !== undefined && onChange === undefined && readOnly !== true) {\n        console.warn(\n          'You provided a `value` prop to a form field without an `onChange` handler. ' +\n            'This will render a read-only field. ' +\n            'If the field should be mutable use `defaultValue`. ' +\n            'Otherwise, set either `onChange` or `readOnly`.',\n        );\n      }\n    }, [onChange, readOnly, value]);\n\n    /**\n     * Open / close state\n     */\n    const onOpen = useCallback(() => {\n      setOpen(true);\n    }, []);\n\n    const onClose = useCallback(() => {\n      setOpen(false);\n      menuButtonRef.current!.focus();\n    }, [menuButtonRef]);\n\n    useEffect(() => {\n      if (!open) {\n        return;\n      }\n\n      const onClickOutside = (event: MouseEvent) => {\n        const stillFocused =\n          menuButtonRef.current!.contains(event.target as Node) ||\n          listMenuRef.current!.contains(event.target as Node);\n        setOpen(stillFocused);\n      };\n\n      document.addEventListener('mousedown', onClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', onClickOutside);\n      };\n    }, [listMenuRef, menuButtonRef, open]);\n\n    const initialUncontrolledSelectedOption = useMemo(() => {\n      let initialUncontrolledSelectedOption: OptionElement | null = null;\n\n      if (value === undefined && defaultValue !== undefined) {\n        traverseSelectChildren(children, (option, group) => {\n          if (isOptionSelectable(option, group, defaultValue)) {\n            initialUncontrolledSelectedOption = option;\n          }\n        });\n      }\n\n      return initialUncontrolledSelectedOption;\n    }, [children, defaultValue, value]);\n\n    /**\n     * Selection\n     */\n\n    // We store the option element instance rather than just the value in order\n    // to differentiate between multiple options that have the same value.\n    const [uncontrolledSelectedOption, setUncontrolledSelectedOption] =\n      useState<OptionElement | null>(initialUncontrolledSelectedOption);\n\n    // If the option instances have changed we'll do our best to preserve\n    // the state by checking if any of the new option instances sufficiently\n    // match the current state and use it instead.\n    useEffect(() => {\n      if (uncontrolledSelectedOption !== null) {\n        setUncontrolledSelectedOption(\n          reconcileOption(children, uncontrolledSelectedOption) ??\n            initialUncontrolledSelectedOption,\n        );\n      }\n    }, [\n      children,\n      initialUncontrolledSelectedOption,\n      uncontrolledSelectedOption,\n    ]);\n\n    const selectedOption = useMemo(() => {\n      if (value !== undefined) {\n        let selectedOption: OptionElement | null = null;\n\n        traverseSelectChildren(children, (option, group) => {\n          if (isOptionSelectable(option, group, value)) {\n            selectedOption = option;\n          }\n        });\n        return selectedOption;\n      } else {\n        return uncontrolledSelectedOption;\n      }\n    }, [children, uncontrolledSelectedOption, value]);\n\n    const onSelect = useCallback(\n      (\n        option: OptionElement | null,\n        event: React.MouseEvent | KeyboardEvent,\n      ) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (value === undefined) {\n          setUncontrolledSelectedOption(option);\n        }\n        onChange?.(getOptionValue(option), event);\n        setFocusedOption(undefined);\n        onClose();\n      },\n      [onChange, onClose, value],\n    );\n\n    const getOptionClickHandler = useCallback(\n      (option: OptionElement | null, optionDisabled: boolean) => {\n        return (event: React.MouseEvent) => {\n          event.preventDefault();\n          event.stopPropagation();\n\n          if (!disabled && !optionDisabled) {\n            onSelect(option, event);\n            onClose();\n          }\n        };\n      },\n      [disabled, onClose, onSelect],\n    );\n\n    /**\n     * Focus\n     */\n\n    const [focusedOption, setFocusedOption] = useState<\n      OptionElement | null | undefined\n    >();\n\n    const enabledOptions = useMemo(() => {\n      const enabledOptions: Array<OptionElement | null> = [];\n\n      if (allowDeselect) {\n        enabledOptions.push(null);\n      }\n\n      traverseSelectChildren(children, (option, group) => {\n        if (!isOptionDisabled(option, group)) {\n          enabledOptions.push(option);\n        }\n      });\n\n      return enabledOptions;\n    }, [children, allowDeselect]);\n\n    const onSelectFocusedOption = useCallback(\n      (event: KeyboardEvent) => {\n        if (focusedOption !== undefined) {\n          onSelect(focusedOption, event);\n        }\n      },\n      [focusedOption, onSelect],\n    );\n\n    const onFocusFirstOption = useCallback(() => {\n      setFocusedOption(enabledOptions[0]);\n    }, [enabledOptions]);\n\n    const onFocusLastOption = useCallback(() => {\n      setFocusedOption(enabledOptions[enabledOptions.length - 1]);\n    }, [enabledOptions]);\n\n    const onFocusPreviousOption = useCallback(() => {\n      if (\n        focusedOption === undefined ||\n        enabledOptions.indexOf(focusedOption) === 0\n      ) {\n        onFocusLastOption();\n      } else {\n        const index = enabledOptions.indexOf(focusedOption) - 1;\n        setFocusedOption(enabledOptions[index]);\n      }\n    }, [enabledOptions, focusedOption, onFocusLastOption]);\n\n    const onFocusNextOption = useCallback(() => {\n      if (\n        focusedOption === undefined ||\n        enabledOptions.indexOf(focusedOption) === enabledOptions.length - 1\n      ) {\n        onFocusFirstOption();\n      } else {\n        const index = enabledOptions.indexOf(focusedOption) + 1;\n\n        setFocusedOption(enabledOptions[index]);\n      }\n    }, [enabledOptions, focusedOption, onFocusFirstOption]);\n\n    const getOptionFocusHandler = useCallback(\n      (option: OptionElement | null, optionDisabled: boolean) => {\n        return (event: React.FocusEvent) => {\n          event.preventDefault();\n          event.stopPropagation();\n\n          if (!disabled && !optionDisabled) {\n            setFocusedOption(option);\n          }\n        };\n      },\n      [disabled],\n    );\n\n    const onKeyDown = useCallback(\n      (event: KeyboardEvent) => {\n        // No support for modifiers yet\n        if (event.ctrlKey || event.shiftKey || event.altKey) {\n          return;\n        }\n\n        const isFocusInMenu = listMenuRef.current?.contains(\n          document.activeElement,\n        );\n        const isFocusOnButton = menuButtonRef.current?.contains(\n          document.activeElement,\n        );\n        const isFocusInComponent = isFocusOnButton || isFocusInMenu;\n\n        // We only respond to keypresses if the focus is in the component\n        if (isFocusInComponent) {\n          switch (event.key) {\n            case keyMap.Tab:\n            case keyMap.Escape:\n              onClose();\n              setFocusedOption(undefined);\n              break;\n            case keyMap.Enter:\n            case keyMap.Space:\n              if (open && !isFocusOnButton) {\n                // Default behavior is to use these keys to open the dropdown but we handle that manually\n                event.preventDefault();\n              }\n\n              onSelectFocusedOption(event);\n              break;\n            case keyMap.ArrowUp:\n              if (!open && isFocusOnButton) {\n                onOpen();\n              }\n              event.preventDefault(); // Prevents page scrolling\n              onFocusPreviousOption();\n              break;\n            case keyMap.ArrowDown:\n              if (!open && isFocusOnButton) {\n                onOpen();\n              }\n              event.preventDefault(); // Prevents page scrolling\n              onFocusNextOption();\n              break;\n          }\n        }\n      },\n      [\n        listMenuRef,\n        menuButtonRef,\n        onClose,\n        open,\n        onSelectFocusedOption,\n        onFocusPreviousOption,\n        onFocusNextOption,\n        onOpen,\n      ],\n    );\n\n    useEventListener('keydown', onKeyDown);\n\n    /**\n     * Rendering\n     */\n\n    const viewportSize = useViewportSize();\n\n    const hasGlyphs = useMemo(() => {\n      let hasGlyphs = false;\n\n      traverseSelectChildren(children, option => {\n        hasGlyphs ||= option.props.glyph !== undefined;\n      });\n\n      return hasGlyphs;\n    }, [children]);\n\n    const canTriggerScrollIntoView = useMemo(\n      () =>\n        viewportSize !== null &&\n        listMenuRef.current !== null &&\n        focusedOption === undefined &&\n        open,\n      [focusedOption, listMenuRef, open, viewportSize],\n    );\n\n    const deselectionOption = useMemo(() => {\n      const selected = selectedOption === null;\n\n      return (\n        <InternalOption\n          className={undefined}\n          glyph={undefined}\n          selected={selected}\n          focused={focusedOption === null}\n          disabled={false}\n          onClick={getOptionClickHandler(null, false)}\n          onFocus={getOptionFocusHandler(null, false)}\n          hasGlyphs={false}\n          triggerScrollIntoView={selected && canTriggerScrollIntoView}\n        >\n          {placeholder}\n        </InternalOption>\n      );\n    }, [\n      canTriggerScrollIntoView,\n      focusedOption,\n      getOptionClickHandler,\n      getOptionFocusHandler,\n      placeholder,\n      selectedOption,\n    ]);\n\n    const renderedChildren = useMemo(\n      () =>\n        convertToInternalElements(\n          children,\n          (option, group) => {\n            const selected = option === selectedOption;\n            const disabled = isOptionDisabled(option, group);\n\n            return {\n              ...option.props,\n              className: option.props.className,\n              glyph: option.props.glyph,\n              selected,\n              focused: option === focusedOption,\n              disabled,\n              children: option.props.children,\n              hasGlyphs,\n              onClick: getOptionClickHandler(option, disabled),\n              onFocus: getOptionFocusHandler(option, disabled),\n              triggerScrollIntoView: selected && canTriggerScrollIntoView,\n            };\n          },\n          () => {\n            console.error(\n              '`Select` instance received child that is not `Option` or `OptionGroup`.',\n            );\n          },\n        ),\n      [\n        canTriggerScrollIntoView,\n        children,\n        focusedOption,\n        getOptionClickHandler,\n        getOptionFocusHandler,\n        hasGlyphs,\n        selectedOption,\n      ],\n    );\n\n    const popoverProps = {\n      popoverZIndex,\n      onEntering,\n      onEnter,\n      onEntered,\n      onExiting,\n      onExit,\n      onExited,\n      ...(usePortal\n        ? {\n            usePortal,\n            portalClassName,\n            portalContainer,\n            scrollContainer,\n          }\n        : { usePortal }),\n    };\n\n    return (\n      <LeafyGreenProvider darkMode={darkMode}>\n        <div\n          ref={containerRef}\n          className={cx(wrapperStyle, className)}\n          data-lgid={dataLgId}\n        >\n          {(label || description) && (\n            <div className={labelDescriptionContainerStyle}>\n              {label && (\n                <Label\n                  htmlFor={menuButtonId}\n                  id={labelId}\n                  darkMode={darkMode}\n                  disabled={disabled}\n                  className={cx(\n                    {\n                      [largeLabelStyles]: size === Size.Large,\n                      [css`\n                        font-size: ${baseFontSize}px;\n                        line-height: 20px;\n                      `]: size === Size.Default,\n                    },\n                    css`\n                      // Prevent hover state from showing when hovering label\n                      pointer-events: none;\n                    `,\n                    css`\n                      ${MobileMediaQuery} {\n                        font-size: ${mobileSizeSet.label.text}px;\n                        line-height: ${mobileSizeSet.label.lineHeight}px;\n                      }\n                    `,\n                  )}\n                >\n                  {label}\n                </Label>\n              )}\n\n              {description && (\n                <Description\n                  id={descriptionId}\n                  darkMode={darkMode}\n                  disabled={disabled}\n                  className={cx(\n                    {\n                      [largeLabelStyles]: size === Size.Large,\n                      [css`\n                        font-size: ${baseFontSize}px;\n                        line-height: 20px;\n                      `]: size === Size.Default,\n                    },\n                    css`\n                      ${MobileMediaQuery} {\n                        font-size: ${mobileSizeSet.description.text}px;\n                        line-height: ${mobileSizeSet.description.lineHeight}px;\n                      }\n                    `,\n                  )}\n                >\n                  {description}\n                </Description>\n              )}\n            </div>\n          )}\n\n          <SelectContext.Provider value={providerData}>\n            <MenuButton\n              {...rest}\n              id={menuButtonId}\n              ref={menuButtonRef}\n              name={name}\n              readOnly={readOnly}\n              value={getOptionValue(selectedOption)}\n              text={\n                selectedOption !== null\n                  ? selectedOption.props.children\n                  : placeholder\n              }\n              deselected={selectedOption === null}\n              onOpen={onOpen}\n              onClose={onClose}\n              aria-labelledby={labelId}\n              aria-label={!label && !ariaLabelledby ? ariaLabel : undefined}\n              aria-controls={menuId}\n              aria-expanded={open}\n              aria-describedby={descriptionId}\n              aria-invalid={state === State.Error}\n              aria-disabled={disabled}\n              errorMessage={errorMessage}\n              state={state}\n              baseFontSize={baseFontSize}\n              __INTERNAL__menuButtonSlot__={__INTERNAL__menuButtonSlot__}\n            >\n              <ListMenu\n                labelId={labelId}\n                id={menuId}\n                referenceElement={menuButtonRef}\n                ref={listMenuRef}\n                className={cx({\n                  [css`\n                    width: ${menuButtonRef.current?.clientWidth}px;\n                  `]: dropdownWidthBasis === DropdownWidthBasis.Trigger,\n                })}\n                dropdownWidthBasis={dropdownWidthBasis}\n                {...popoverProps}\n              >\n                {allowDeselect && deselectionOption}\n                {renderedChildren}\n              </ListMenu>\n            </MenuButton>\n          </SelectContext.Provider>\n          {state === State.Error && errorMessage && (\n            <span\n              data-lgid={LGIDS_SELECT.errorMessage}\n              className={cx(\n                errorTextStyle({ darkMode, sizeSet }),\n                css`\n                  ${MobileMediaQuery} {\n                    font-size: ${mobileSizeSet.description.text}px;\n                    line-height: ${mobileSizeSet.description.lineHeight}px;\n                  }\n                `,\n                {\n                  [css`\n                    // Hide error text when menu is open,\n                    // so it doesn't peek around the menu corner\n                    color: transparent;\n                  `]: open,\n                },\n              )}\n            >\n              {errorMessage}\n            </span>\n          )}\n        </div>\n      </LeafyGreenProvider>\n    );\n  },\n);\n\nSelect.displayName = 'Select';\n\nSelect.propTypes = {\n  label: PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  'aria-label': PropTypes.string,\n  description: PropTypes.node,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  darkMode: PropTypes.bool,\n  size: PropTypes.oneOf(Object.values(Size)),\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  state: PropTypes.oneOf(Object.values(State)),\n  allowDeselect: PropTypes.bool,\n  baseFontSize: PropTypes.oneOf(Object.values(BaseFontSize)),\n  dropdownWidthBasis: PropTypes.oneOf(Object.values(DropdownWidthBasis)),\n} as WeakValidationMap<ComponentProps<typeof Select>>;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","LGID_ROOT","LGIDS_SELECT","root","errorMessage","concat","popover","buttonText","Size","XSmall","Small","Default","Large","State","None","Error","DropdownWidthBasis","Trigger","Option","SelectContext","createContext","size","open","disabled","colorSets","_defineProperty","Theme","Light","menu","border","palette","gray","light2","shadow","transparentize","black","option","group","label","dark1","background","base","white","hovered","focused","blue","light3","text","dark3","selected","dark2","icon","indicator","Dark","dark4","light1","sizeSets","height","warningIcon","mobileSizeSet","lineHeight","OptionClassName","createUniqueClassName","optionStyle","css","_taggedTemplateLiteral","transitionDuration","default","spacing","descriptionClassName","optionTextStyle","fontFamilies","iconStyle","glyphFocusStyle","_excluded","InternalOption","_ref","children","className","glyph","onClick","onFocus","triggerScrollIntoView","hasGlyphs","description","rest","_objectWithoutProperties","theme","useDarkMode","colorSet","ref","useRef","scrollIntoView","useCallback","current","element","parent","offsetParent","scrollTop","offsetTop","clientHeight","alreadyScrolledIntoView","usePrevious","shouldScrollIntoView","useEffect","wasFocused","shouldFocus","focus","isComponentGlyph","console","error","glyphProp","React","cloneElement","key","cx","props","undefined","checkmark","createElement","CheckmarkIcon","leftGlyph","rightGlyph","InputOption","_extends","role","tabIndex","onKeyDown","InputOptionContent","fontWeights","bold","_","displayName","propTypes","PropTypes","node","isRequired","string","value","bool","optionGroupStyle","optionGroupLabelStyle","InternalOptionGroup","groupId","useIdAllocator","prefix","id","OptionGroup","oneOfType","arrayOf","oneOf","_baseQuery","breakpoints","Tablet","MobileMediaQuery","isReactEmpty","traverseSelectChildren","optionFn","Children","forEach","child","isComponentType","isFragment","convertToInternalElements","fallbackFn","toArray","every","consoleOnce","warn","map","_child$props","_options","getOptionValue","Array","isArray","filter","join","toString","isOptionDisabled","_option$props$disable","_group$props$disabled","_group$props","isOptionSelectable","useObservedRef","callback","_ref4","arguments","length","initialValue","_ref4$deps","deps","useMemo","nextValue","_toConsumableArray","useForwardedRef","forwardedRefOrRefs","forwardValueToRefs","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","useStateRef","_useState2","_slicedToArray","useState","popoverClassName","menuMargin","baseMenuStyle","autoWidthStyles","getMenuStyles","sizeSet","ListMenu","forwardRef","forwardedRef","referenceElement","labelId","dropdownWidthBasis","_ref$usePortal","usePortal","portalContainer","scrollContainer","portalClassName","popoverZIndex","onEntering","onEnter","onEntered","onExiting","onExit","onExited","_useContext","useContext","availableSpace","useAvailableSpace","maxHeightValue","isUndefined","Math","min","event","stopPropagation","popoverProps","_objectSpread","Popover","active","align","Align","Bottom","justify","Justify","Start","adjustOnMutation","refEl","menuButtonTextClassName","menuButtonStyleOverrides","regular","menuButtonSizeStyle","typeScales","body1","fontSize","menuButtonModeOverrides","menuButtonFocusStyle","focusRing","input","menuButtonDeselectedStyles","menuButtonDisabledStyles","menuButtonDisabledThemeStyles","menuButtonTextWrapperStyle","menuButtonTextStyle","errorColor","red","menuButtonErrorStyle","hoverRing","light","dark","MenuButton","_dataTestid","name","deselected","readOnly","onClose","onOpen","state","baseFontSize","__INTERNAL__menuButtonSlot__","__INTERNAL__menuButtonSlotProps__","Component","Button","buttonClassName","ButtonSize","testId","variant","Variant","darkMode","CaretDownIcon","WarningIcon","title","labelDescriptionContainerStyle","wrapperStyle","largeLabelStyles","large","errorTextStyle","faster","Select","fwdRef","_menuButtonRef$curren2","darkModeProp","_ref$size","_ref$disabled","_ref$allowDeselect","allowDeselect","_ref$placeholder","placeholder","_ref$errorMessage","_ref$state","_ref$dropdownWidthBas","_ref$baseFontSize","BaseFontSize","Body1","_ref$dataLgid","dataLgId","idProp","ariaLabelledby","ariaLabel","defaultValue","onChange","descriptionId","menuId","setOpen","containerRef","menuButtonRef","menuButtonId","listMenuRef","providerData","onClickOutside","stillFocused","contains","target","document","addEventListener","removeEventListener","initialUncontrolledSelectedOption","_useState4","uncontrolledSelectedOption","setUncontrolledSelectedOption","_reconcileOption","previousOption","_ref2","_ref3","_sameInstance","sameInstance","sameChildrenAndValue","sameExplicitValue","sameValue","_sameChildrenAndValue","_sameExplicitValue","_sameValue","reconcileOption","selectedOption","_selectedOption","onSelect","preventDefault","setFocusedOption","getOptionClickHandler","optionDisabled","_useState6","focusedOption","enabledOptions","push","onSelectFocusedOption","onFocusFirstOption","onFocusLastOption","onFocusPreviousOption","indexOf","index","onFocusNextOption","getOptionFocusHandler","_listMenuRef$current","_menuButtonRef$curren","ctrlKey","shiftKey","altKey","isFocusInMenu","activeElement","isFocusOnButton","keyMap","Tab","Escape","Enter","Space","ArrowUp","ArrowDown","useEventListener","viewportSize","useViewportSize","canTriggerScrollIntoView","deselectionOption","renderedChildren","LeafyGreenProvider","Label","htmlFor","Description","Provider","clientWidth","Object","values","func"],"mappings":"q9JAAA,ICCIA,EAAiBC,EAAkBC,EAAkBC,ECGrDH,EAAiBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,ECH3GN,EAAiBC,EHDjBM,GAAY,YACLC,GAAe,CACxBC,KAAMF,GACNG,aAAc,GAAGC,OAAOJ,GAAW,kBACnCK,QAAS,GAAGD,OAAOJ,GAAW,YAC9BM,WAAY,GAAGF,OAAOJ,GAAW,iBILxBO,GAAO,CAChBC,OAAQ,SACRC,MAAO,QACPC,QAAS,UACTC,MAAO,SAEEC,GAAQ,CACjBC,KAAM,OACNC,MAAO,SAEEC,GAAqB,CAC9BC,QAAS,UACTC,OAAQ,UCVCC,GAA6BC,EAAAA,cAAc,CACpDC,KAAMb,GAAKG,QACXW,MAAM,EACNC,UAAU,ICADC,GAAYC,EAAgBA,EAAgB,CAAA,EAAIC,EAAAA,MAAMC,MAAO,CACtEC,KAAM,CACJC,OAAQC,EAAAA,QAAQC,KAAKC,OACrBC,OAAQC,EAAcA,eAAC,IAAMJ,EAAAA,QAAQK,QAEvCC,OAAQ,CACNC,MAAO,CACLC,MAAOR,EAAAA,QAAQC,KAAKQ,OAEtBC,WAAY,CACVC,KAAMX,EAAOA,QAACY,MACdC,QAASb,EAAAA,QAAQC,KAAKC,OACtBY,QAASd,EAAAA,QAAQe,KAAKC,QAExBC,KAAM,CACJN,KAAMX,EAAAA,QAAQC,KAAKiB,MACnBC,SAAUnB,EAAAA,QAAQe,KAAKJ,KACvBlB,SAAUO,EAAAA,QAAQC,KAAKU,KACvBG,QAASd,EAAAA,QAAQe,KAAKK,OAExBC,KAAM,CACJV,KAAMX,EAAAA,QAAQC,KAAKQ,MACnBU,SAAUnB,EAAAA,QAAQe,KAAKJ,KACvBlB,SAAUO,EAAAA,QAAQC,KAAKU,MAEzBW,UAAW,CACTR,QAASd,EAAAA,QAAQe,KAAKJ,SAGxBf,EAAKA,MAAC2B,KAAM,CACdzB,KAAM,CACJC,OAAQC,EAAAA,QAAQC,KAAKmB,MACrBjB,OAAQC,EAAAA,eAAe,IAAM,YAE/BE,OAAQ,CACNC,MAAO,CACLC,MAAOR,EAAAA,QAAQC,KAAKU,MAEtBD,WAAY,CACVC,KAAMX,EAAAA,QAAQC,KAAKiB,MACnBL,QAASb,EAAAA,QAAQC,KAAKuB,MACtBV,QAASd,EAAAA,QAAQe,KAAKG,OAExBD,KAAM,CACJN,KAAMX,EAAAA,QAAQC,KAAKC,OACnBiB,SAAUnB,EAAAA,QAAQC,KAAKC,OACvBT,SAAUO,EAAAA,QAAQC,KAAKU,KACvBG,QAASd,EAAAA,QAAQe,KAAKC,QAExBK,KAAM,CACJV,KAAMX,EAAAA,QAAQC,KAAKU,KACnBQ,SAAUnB,EAAAA,QAAQe,KAAKU,OACvBhC,SAAUO,EAAAA,QAAQC,KAAKU,MAEzBW,UAAW,CACTR,QAASd,EAAAA,QAAQe,KAAKU,WAIjBC,GAAW/B,EAAgBA,EAAgBA,EAAgBA,EAAgB,CAAE,EAAEjB,GAAKC,OAAQ,CACrGgD,OAAQ,GACRV,KAAM,GACNX,OAAQ,CACNW,KAAM,IAERW,YAAa,KACXlD,GAAKE,MAAO,CACd+C,OAAQ,GACRV,KAAM,GACNX,OAAQ,CACNW,KAAM,IAERW,YAAa,KACXlD,GAAKG,QAAS,CAChB8C,OAAQ,GACRV,KAAM,GACNX,OAAQ,CACNW,KAAM,IAERW,YAAa,KACXlD,GAAKI,MAAO,CACd6C,OAAQ,GACRV,KAAM,GACNX,OAAQ,CACNW,KAAM,IAERW,YAAa,KAEJC,GACD,GADCA,GAEH,GAFGA,GAGF,CACLZ,KAAM,GACNa,WAAY,IALLD,GAOI,CACXZ,KAAM,GACNa,WAAY,IATLD,GAWD,CACNZ,KAAM,ILnGCc,GAAkBC,EAAAA,sBAAsB,UACxCC,GAAcC,EAAAA,IAAItE,IAAoBA,EAAkBuE,EAAuB,CAAC,oHAAqH,sDAAuD,uRAAwR,8BAA+B,uFAAwFC,qBAAmBC,QAASC,EAAOA,QAAC,GAAIF,EAAkBA,mBAACC,QAASE,EAAAA,sBAC/sBC,GAAkBN,EAAGA,IAACrE,IAAqBA,EAAmBsE,EAAuB,CAAC,8DAA+D,SAAUM,EAAYA,aAACJ,SAC5KK,GAAYR,EAAAA,IAAIpE,IAAqBA,EAAmBqE,EAAuB,CAAC,6BAChFQ,GAAkBT,EAAAA,IAAInE,IAAqBA,EAAmBoE,EAAuB,CAAC,QAAS,2EAA4EJ,ICLlLa,GAAY,CAAC,WAAY,YAAa,QAAS,WAAY,UAAW,WAAY,UAAW,UAAW,wBAAyB,YAAa,eAY3I,SAASC,GAAeC,GAC7B,IAAIC,EAAWD,EAAKC,SAClBC,EAAYF,EAAKE,UACjBC,EAAQH,EAAKG,MACb9B,EAAW2B,EAAK3B,SAChBL,EAAUgC,EAAKhC,QACfrB,EAAWqD,EAAKrD,SAChByD,EAAUJ,EAAKI,QACfC,EAAUL,EAAKK,QACfC,EAAwBN,EAAKM,sBAC7BC,EAAYP,EAAKO,UACjBC,EAAcR,EAAKQ,YACnBC,EAAOC,EAAyBV,EAAMF,IAEtCa,EADiBC,EAAAA,cACID,MACnBE,EAAWjE,GAAU+D,GAAOnD,OAC5BsD,EAAMC,SAAO,MACbC,EAAiBC,EAAAA,aAAY,WAC/B,GAAmB,MAAfH,EAAII,QACN,OAAO,KAET,IAAIC,EAAUL,EAAII,QACdE,EAASD,aAAyC,EAASA,EAAQE,aACvE,IAAKD,EACH,OAAO,KAKTA,EAAOE,UAAYH,EAAQI,WAAaJ,EAAQK,aAAeJ,EAAOI,cAAgB,CAC1F,GAAK,CAACV,IACAW,EAA0BC,cAAYpB,GACtCqB,EAAuBrB,IAA0BmB,EACrDG,EAAAA,WAAU,WACJD,GACFX,GAEN,GAAK,CAACA,EAAgBW,IACpB,IAAIE,EAAaH,cAAY1D,GACzB8D,EAAc9D,IAAY6D,EAC9BD,EAAAA,WAAU,WACJE,GACFhB,EAAII,QAAQa,OAElB,GAAK,CAACD,IACA3B,IACG6B,EAAAA,iBAAiB7B,IACpB8B,QAAQC,MAAM,mFAKlB,IAAIC,EAAYhC,GAAS6B,EAAgBA,iBAAC7B,GAAsBiC,EAAK7C,QAAC8C,aAAalC,EAAO,CACxFmC,IAAK,QACLpC,UAAWqC,EAAEA,GAAC3C,GAAWR,EAAGA,IAACtE,IAAoBA,EAAkBuE,EAAuB,CAAC,0BAA2B,qBAAsBwB,EAAStC,KAAKV,MAAOgC,GAAiBhD,EAAgB,CAAE,EAAEuC,EAAGA,IAACrE,IAAqBA,EAAmBsE,EAAuB,CAAC,4BAA6B,uBAAwBwB,EAAStC,KAAK5B,UAAWA,GAAWwD,EAAMqC,MAAMtC,kBAC5WuC,EAGDC,EAAYrE,EAAwB+D,UAAMO,cAAcC,EAAAA,QAAe,CACzEN,IAAK,YACLpC,UAAWqC,EAAEA,GAAC3C,GAAWR,EAAGA,IAACpE,IAAqBA,EAAmBqE,EAAuB,CAAC,sBAAuB,iBAAkBwB,EAAStC,KAAKF,UAAWwB,GAAiBhD,EAAgB,CAAA,EAAIuC,EAAAA,IAAInE,IAAqBA,EAAmBoE,EAAuB,CAAC,wBAAyB,mBAAoBwB,EAAStC,KAAK5B,UAAWA,WAC3U8F,EACDI,EAAYtC,EAAY4B,EAAYO,EACpCI,EAAavC,EAAYmC,OAAYD,EACzC,OAAoBL,UAAMO,cAAcI,EAAWA,YAAEC,EAAS,CAC5D,aAAkC,iBAAb/C,EAAwBA,EAAW,UACvDQ,EAAM,CACP9D,SAAUA,EACVsG,KAAM,SACNC,UAAW,EACXpC,IAAKA,EACLZ,UAAWqC,EAAAA,GAAGtD,GAAiBE,GAC/BtC,EAAgBA,EAAgB,CAAA,EAAIuC,EAAGA,IAAClE,IAAqBA,EAAmBmE,EAAuB,CAAC,yDAA0D,sCAAuC,wIAAyI,mDAAoDwB,EAAS1C,KAAKH,QAAS6C,EAASjD,WAAWI,QAAS6C,EAASrC,UAAUR,UAAWrB,GAAWyC,EAAAA,IAAIjE,IAAqBA,EAAmBkE,EAAuB,CAAC,oCAAqC,4BAA6B,kCAAmCI,EAAAA,qBAAsBoB,EAAS1C,KAAKxB,UAAWA,GAAWuD,GACtsBE,QAASA,EACTC,QAASA,EACT8C,eAAWV,IACIL,EAAAA,QAAMO,cAAcS,qBAAoB,CACvDP,UAAWA,EACXC,WAAYA,EACZtC,YAAaA,GACC4B,EAAK7C,QAACoD,cAAc,OAAQ,CAC1CzC,UAAWqC,EAAEA,GAAC7C,GAAiB7C,EAAgB,CAAA,EAAIuC,EAAAA,IAAIhE,IAAqBA,EAAmBiE,EAAuB,CAAC,gCAAiC,qBAAsBgE,EAAAA,YAAYC,MAAOjF,KAChM4B,IACL,CAEO,SAAS3D,GAAOiH,GACrB,MAAMpH,MAAM,kDACd,CAHA4D,GAAeyD,YAAc,SAI7BlH,GAAOkH,YAAc,SACrBlH,GAAOmH,UAAY,CACjBxD,SAAUyD,EAAAA,QAAUC,KAAKC,WACzB1D,UAAWwD,EAASnE,QAACsE,OACrB1D,MAAOuD,EAASnE,QAAC4B,QACjB2C,MAAOJ,EAASnE,QAACsE,OACjBlH,SAAU+G,EAASnE,QAACwE,KACpBvD,YAAakD,EAASnE,QAACsE,QC5GlB,IIDH/I,GJCOkJ,GAAmB5E,EAAGA,IAACtE,IAAoBA,EAAkBuE,EAAuB,CAAC,gBAAiB,aAAcG,UAAQ,IAC5HyE,GAAwB7E,EAAGA,IAACrE,IAAqBA,EAAmBsE,EAAuB,CAAC,wKAAyK,iEAAkEgE,EAAAA,YAAYC,MID1VxD,GAAY,CAAC,YAAa,QAAS,YAQhC,SAASoE,GAAoBlE,GAClC,IAAIE,EAAYF,EAAKE,UACnBxC,EAAQsC,EAAKtC,MACbuC,EAAWD,EAAKC,SAChBQ,EAAOC,EAAyBV,EAAMF,IAEtCa,EADiBC,EAAAA,cACID,MACnBE,EAAWjE,GAAU+D,GAAOnD,OAC5B2G,EAAUC,EAAAA,eAAe,CAC3BC,OAAQ,wBAEV,OAAoBjC,UAAMO,cAAc,MAAOK,EAAS,CACtD9C,UAAWqC,EAAAA,GAAGyB,GAAkB9D,IAC/BO,GAAoB2B,UAAMO,cAAc,MAAO,CAChD2B,GAAIH,EACJjE,UAAWqC,EAAEA,GAAC0B,GAAuB7E,EAAGA,IAACtE,KAAoBA,GAAkBuE,EAAuB,CAAC,wBAAyB,mBAAoBwB,EAASpD,MAAMC,SAClKA,GAAqB0E,UAAMO,cAAc,MAAO,CACjDM,KAAM,QACN,kBAAmBkB,GAClBlE,GACL,CAEO,SAASsE,GAAYhB,GAC1B,MAAMpH,MAAM,uDACd,CAHA+H,GAAoBV,YAAc,cAIlCe,GAAYf,YAAc,cAC1Be,GAAYd,UAAY,CACtBxD,SAAUyD,EAASnE,QAACiF,UAAU,CAACd,UAAUvC,QAASuC,EAASnE,QAACkF,QAAQf,EAAAA,QAAUc,UAAU,CAACd,EAASnE,QAACmF,MAAM,EAAC,EAAO,UAAMjC,EAAW,KAAMiB,EAASnE,QAAC4B,aAAayC,WAC/J1D,UAAWwD,EAASnE,QAACsE,OACrBnG,MAAOgG,EAAAA,QAAUG,OAAOD,WACxBjH,SAAU+G,EAASnE,QAACwE,MCtCtB,IAAIjE,GAAY,CAAC,YAUb6E,GAAa,sCAAsClJ,OAAOmJ,EAAWA,YAACC,OAAQ,yBACvEC,GAAmB,GAAGrJ,OAAOkJ,GAAY,4BAA4BlJ,OAAOkJ,GAAY,wBACnG,SAASI,GAAajB,GACpB,OAAOA,UAAmD,IAAVA,GAA6B,KAAVA,CACrE,CACO,SAASkB,GAAuB/E,EAAUgF,GAC/C7C,EAAAA,QAAM8C,SAASC,QAAQlF,GAAU,SAAUmF,GACrCC,EAAeA,gBAACD,EAAO,UACzBH,EAASG,GACAC,EAAeA,gBAACD,EAAO,eAChCJ,GAAuBI,EAAM5C,MAAMvC,UAAU,SAAUzC,GACrD,OAAOyH,EAASzH,EAAQ4H,EAChC,IACeE,EAAAA,WAAWF,IACpBJ,GAAuBI,EAAM5C,MAAMvC,SAAUgF,EAEnD,GACA,CACO,SAASM,GAA0BtF,EAAUgF,EAAUO,GAQ5D,OAPMpD,EAAK7C,QAAC2F,SAASO,QAAQxF,GAAUyF,OAAM,SAAUN,GACrD,OAAOC,EAAeA,gBAACD,EAAO,SAClC,KAAQhD,EAAK7C,QAAC2F,SAASO,QAAQxF,GAAUyF,OAAM,SAAUN,GACrD,OAAOC,EAAeA,gBAACD,EAAO,cAC/B,KACCO,cAAYC,KAAK,8FAEZxD,EAAK7C,QAAC2F,SAASW,IAAI5F,GAAU,SAAUmF,GAC5C,GAAIC,EAAeA,gBAACD,EAAO,UACzB,OAAoBhD,EAAAA,QAAMO,cAAc5C,GAAgBkF,EAASG,IAC5D,GAAIC,EAAeA,gBAACD,EAAO,eAAgB,CAChD,IAAIU,EAAeV,EAAM5C,MACvBuD,EAAWD,EAAa7F,SACxBQ,EAAOC,EAAyBoF,EAAchG,IAChD,OAAoBsC,UAAMO,cAAcuB,GAAqBlB,EAAS,CACpE9C,eAAWuC,GACVhC,GAAO8E,GAA0BQ,GAAU,SAAUvI,GACtD,OAAOyH,EAASzH,EAAQ4H,EAChC,GAASI,GACT,CAAW,OAAIF,EAAAA,WAAWF,GACbG,GAA0BH,EAAM5C,MAAMvC,SAAUgF,EAAUO,IACvDT,GAAaK,IACvBI,SAAgDA,EAAWJ,GAEtD,KACX,GACA,CACO,SAASY,GAAexI,GAC7B,OAAe,OAAXA,EACK,QAEkBiF,IAAvBjF,EAAOgF,MAAMsB,MACRtG,EAAOgF,MAAMsB,MAElBmC,MAAMC,QAAQ1I,EAAOgF,MAAMvC,UACtBzC,EAAOgF,MAAMvC,SAASkG,QAAO,SAAUf,GAC5C,OAAQL,GAAaK,EAC3B,IAAOgB,KAAK,IAEN5I,EAAOgF,MAAMvC,SACRzC,EAAOgF,MAAMvC,SAASoG,WAExB,EACT,CACO,SAASC,GAAiB9I,EAAQC,GACvC,IAAI8I,EAAuBC,EAAuBC,EAClD,OAA4D,QAAnDF,EAAwB/I,EAAOgF,MAAM7F,gBAAgD,IAA1B4J,GAAmCA,GAAyM,QAArKC,EAAwB/I,SAAuE,QAAhCgJ,EAAehJ,EAAM+E,aAAoC,IAAjBiE,OAA0B,EAASA,EAAa9J,gBAAgD,IAA1B6J,GAAmCA,CAC7V,CACO,SAASE,GAAmBlJ,EAAQC,EAAOqG,GAChD,OAAOkC,GAAexI,KAAYsG,IAAUwC,GAAiB9I,EAAQC,EACvE,CAiCO,SAASkJ,GAAeC,GAC7B,IAAIC,EAAQC,UAAUC,OAAS,QAAsBtE,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,CAAE,EAChFE,EAAeH,EAAMG,aACrBC,EAAaJ,EAAMK,KACnBA,OAAsB,IAAfD,EAAwB,GAAKA,EAClCnG,EAAMC,SAAOiG,GACjB,OAAOG,EAAOA,SAAC,WACb,MAAO,CACL,WAAIjG,GACF,OAAOJ,EAAII,OACZ,EACD,WAAIA,CAAQkG,GACVtG,EAAII,QAAUkG,EACdR,EAASQ,EACV,EAEP,GAAK,CAACR,EAAU9F,GAAKrF,OAAO4L,EAAmBH,IAC/C,CACO,SAASI,GAAgBC,EAAoBP,GAClD,IAAIQ,EAAqBvG,EAAAA,aAAY,SAAUsG,EAAoBH,GAC7DnB,MAAMC,QAAQqB,GAChBA,EAAmBpC,QAAQqC,GACY,mBAAvBD,EAChBA,EAAmBH,GACVG,IAETA,EAAmBrG,QAAUkG,EAEhC,GAAE,IACH,OAAOT,GAAe1F,eAAY,SAAU6C,GAC1C,OAAO0D,EAAmBD,EAAoBzD,EAClD,GAAK,CAACyD,EAAoBC,IAAsB,CAC5CR,aAAcA,GAElB,CAKO,IC1JHlM,GAAiBC,GAAkBC,GCGnCF,GCFAA,GAAiBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBqM,GAAkBC,GAAkBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GAAmBC,GHyJlTC,GAAc,SAAqBpB,GAC5C,IACEqB,EAAaC,EADCC,EAAQA,SAACvB,GACgB,GACvClD,EAAQuE,EAAW,GAErB,OAAO1B,GADM0B,EAAW,GACQ,CAC9BrB,aAAcA,EACdE,KAAM,CAACpD,IAEX,EC9JW0E,GAAmBtJ,EAAqBA,sBAAC,kBAEzCuJ,GAAajJ,EAAAA,QAAQ,GACrBkJ,GAAgBtJ,EAAAA,IAAItE,KAAoBA,GAAkBuE,EAAuB,CAAC,uLAClFsJ,GAAkBvJ,EAAAA,IAAIrE,KAAqBA,GAAmBsE,EAAuB,CAAC,gCACtFuJ,GAAgB,SAAuBjI,EAAOlE,GACvD,IAAIoM,EAAUjK,GAASnC,GACnBoE,EAAWjE,GAAU+D,GACzB,OAAO4B,EAAAA,GAAGnD,EAAAA,IAAIpE,KAAqBA,GAAmBqE,EAAuB,CAAC,wBAAyB,uBAAwB,0BAA2B,gCAAiC,gEAAiE,qBAAsB,kCAAmC,aAAcM,EAAAA,aAAaJ,QAASsJ,EAAQrL,OAAOW,KAAM0K,EAAQhK,OAAQgC,EAASrD,OAAOI,WAAWC,KAAMgD,EAAS7D,KAAKK,OAAQmC,EAAAA,QAAQ,GAAIqB,EAAS7D,KAAKC,QACjd,ECKI6L,GAAwB1G,EAAK7C,QAACwJ,YAAW,SAAkB/I,EAAMgJ,GACnE,IAAI/I,EAAWD,EAAKC,SAClBqE,EAAKtE,EAAKsE,GACV2E,EAAmBjJ,EAAKiJ,iBACxB/I,EAAYF,EAAKE,UACjBgJ,EAAUlJ,EAAKkJ,QACfC,EAAqBnJ,EAAKmJ,mBAC1BC,EAAiBpJ,EAAKqJ,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAkBtJ,EAAKsJ,gBACvBC,EAAkBvJ,EAAKuJ,gBACvBC,EAAkBxJ,EAAKwJ,gBACvBC,EAAgBzJ,EAAKyJ,cACrBC,EAAa1J,EAAK0J,WAClBC,EAAU3J,EAAK2J,QACfC,EAAY5J,EAAK4J,UACjBC,EAAY7J,EAAK6J,UACjBC,EAAS9J,EAAK8J,OACdC,EAAW/J,EAAK+J,SAEhBpJ,EADiBC,EAAAA,cACID,MACnBqJ,EAAcC,EAAUA,WAAC1N,IAC3BE,EAAOuN,EAAYvN,KACnBE,EAAWqN,EAAYrN,SACvBD,EAAOsN,EAAYtN,KACjBoE,EAAMwG,GAAgB0B,EAAc,MACpCkB,EAAiBC,EAAAA,kBAAkBlB,EAAkBR,IACrD2B,EAAkBC,EAAAA,QAAYH,GAA6E,QAA3D,GAAGzO,OAAO6O,KAAKC,IAAIL,EDxC9C,KCwC8E,MACnG9J,EAAUa,eAAY,SAAUuJ,GAC9B1J,EAAII,SACNJ,EAAII,QAAQa,QAEdyI,EAAMC,iBACV,GAAK,CAAC3J,IACA4J,EAAeC,EAAc,CAC/BlB,cAAeA,EACfC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXC,UAAWA,EACXC,OAAQA,EACRC,SAAUA,GACTV,EAAY,CACbA,UAAWA,EACXG,gBAAiBA,EACjBF,gBAAiBA,EACjBC,gBAAiBA,GACf,CACFF,UAAWA,IAEb,OAAoBjH,UAAMO,cAAciI,EAAOrL,QAAEyD,EAAS,CACxD6H,OAAQnO,IAASC,EACjB6C,QAAS,EACTsL,MAAOC,EAAKA,MAACC,OACbC,QAASC,EAAOA,QAACC,MACjBC,kBAAkB,EAClBlL,UAAWqC,EAAEA,GAACiG,GAAkBtI,EAAWrD,EAAgB,GAAI8L,GAAiBQ,IAAuB/M,GAAmBE,SAC1H+O,MAAOpC,GACNyB,GAA4BtI,UAAMO,cAAc,KAAM,CACvD,YAAarH,GAAaI,QAC1B,kBAAmBwN,EACnBjG,KAAM,UACNnC,IAAKA,EACLoC,UAAW,EACX9C,QAASA,EACTF,UAAWqC,EAAAA,GAAGmG,GAAeE,GAAcjI,EAAOlE,GAAO2C,EAAGA,IAACtE,KAAoBA,GAAkBuE,EAAuB,CAAC,+BAAgC,oBAAqB,kCAAmC,wCAAyC+K,EAAgBtF,GAAkB/F,GAAqBZ,OACnTmG,GAAIA,GACHrE,GACL,IACA6I,GAAStF,YAAc,WClFb,ICHN1I,GAAiBC,GAAkBC,GAAkBC,GCHrDH,GAAiBC,GAAkBC,GAAkBC,GFM9CqQ,GAA0BpM,EAAqBA,sBAAC,eAChDqM,GAA2BnM,EAAGA,IAACtE,KAAoBA,GAAkBuE,EAAuB,CAAC,mDAAoD,qMAAsMgE,EAAWA,YAACmI,SACnWC,GAAsB5O,EAAgBA,EAAgBA,EAAgBA,EAAgB,CAAE,EAAEjB,EAAIA,KAACG,QAASqD,EAAGA,IAACrE,KAAqBA,GAAmBsE,EAAuB,CAAC,iEAAkEzD,EAAAA,KAAKI,MAAOoD,EAAAA,IAAIpE,KAAqBA,GAAmBqE,EAAuB,CAAC,mDAAoD,oBAAqBG,EAAAA,QAAQ,KAAM5D,EAAIA,KAACE,MAAOsD,EAAAA,IAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,4CAA6C,2BAA4BG,EAAAA,QAAQ,KAAM5D,EAAIA,KAACC,OAAQuD,EAAGA,IAAClE,KAAqBA,GAAmBmE,EAAuB,CAAC,+CAAgD,yBAA0B,+CAAgD,2BAA4BqM,EAAAA,WAAWC,MAAMC,SAAUF,EAAAA,WAAWC,MAAM3M,WAAYQ,EAAAA,QAAQ,KACn2BqM,GAA0BhP,EAAgBA,EAAgB,CAAE,EAAEC,EAAKA,MAACC,MAAOqC,MAAIjE,KAAqBA,GAAmBkE,EAAuB,CAAC,2BAA4B,gGAAiG,2BAA4BnC,EAAAA,QAAQY,MAAOZ,EAAOA,QAACC,KAAKmB,QAASxB,EAAAA,MAAM2B,KAAMW,EAAAA,IAAIhE,KAAqBA,GAAmBiE,EAAuB,CAAC,uBAAwB,4BAA6B,iBAAkB,kGAAmG,4FAA6F,mBAAoB,kBAAmBnC,EAAAA,QAAQC,KAAKU,KAAMX,EAAOA,QAACC,KAAKuB,MAAOxB,EAAAA,QAAQC,KAAKe,OAAQhB,EAAOA,QAACC,KAAKwB,OAAQzB,UAAQC,KAAKuB,MAAOxB,EAAAA,QAAQC,KAAKe,SAG7zB4N,GAAuBjP,EAAgBA,EAAgB,CAAA,EAAIC,EAAAA,MAAMC,MAAOqC,EAAGA,IAACqI,KAAqBA,GAAmBpI,EAAuB,CAAC,8CAA+C,+DAAgE0M,YAAiB,MAAEC,QAASlP,EAAAA,MAAM2B,KAAMW,EAAAA,IAAIsI,KAAqBA,GAAmBrI,EAAuB,CAAC,oDAAqD,wBAAyB,+DAAgEnC,EAAAA,QAAQC,KAAKuB,MAAOqN,EAASA,UAAO,KAAEC,QAC3hBC,GAA6BpP,EAAgBA,EAAgB,CAAA,EAAIC,EAAAA,MAAMC,MAAOqC,EAAAA,IAAIuI,KAAsBA,GAAoBtI,EAAuB,CAAC,gBAAiB,WAAYnC,EAAOA,QAACC,KAAKQ,QAASb,EAAAA,MAAM2B,KAAMW,EAAAA,IAAIwI,KAAsBA,GAAoBvI,EAAuB,CAAC,gBAAiB,iEAAkE,kBAAmBnC,EAAOA,QAACC,KAAKwB,OAAQzB,EAAAA,QAAQC,KAAKwB,SACjauN,GAA2B9M,EAAAA,IAAIyI,KAAsBA,GAAoBxI,EAAuB,CAAC,iIACjG8M,GAAgCtP,EAAgBA,EAAgB,CAAE,EAAEC,EAAKA,MAACC,MAAOwF,KAAG2J,GAA0B9M,EAAAA,IAAI0I,KAAsBA,GAAoBzI,EAAuB,CAAC,gEAAiE,qBAAsB,wEAAyE,8CAA+CnC,EAAAA,QAAQC,KAAKC,OAAQF,EAAOA,QAACC,KAAKU,KAAMX,EAAOA,QAACC,KAAKU,QAASf,EAAKA,MAAC2B,KAAM8D,EAAEA,GAAC2J,GAA0B9M,EAAAA,IAAI2I,KAAsBA,GAAoB1I,EAAuB,CAAC,gEAAiE,qBAAsB,4BAA6B,wEAAyE,8CAA+CnC,EAAAA,QAAQC,KAAKiB,MAAOlB,EAAAA,QAAQC,KAAKQ,MAAOT,EAAAA,QAAQC,KAAKmB,MAAOpB,EAAOA,QAACC,KAAKQ,SACr2ByO,GAA6BhN,EAAGA,IAAC4I,KAAsBA,GAAoB3I,EAAuB,CAAC,0GAA2G,gCAAiCG,UAAQ,IACvP6M,GAAsBjN,EAAAA,IAAI6I,KAAsBA,GAAoB5I,EAAuB,CAAC,sGAC5FiN,GAAazP,EAAgBA,EAAgB,CAAE,EAAEC,EAAKA,MAACC,MAAOG,EAAOA,QAACqP,IAAI1O,MAAOf,EAAAA,MAAM2B,KAAMvB,EAAAA,QAAQqP,IAAI5N,QACzG6N,GAAuB3P,EAAgBA,EAAgB,CAAA,EAAIC,EAAKA,MAACC,MAAOqC,EAAAA,IAAI8I,KAAsBA,GAAoB7I,EAAuB,CAAC,uBAAwB,4BAA6B,wDAAyD,kBAAmBiN,GAAWxP,QAAMC,OAAQG,EAAAA,QAAQY,MAAO2O,EAASA,UAACC,MAAMH,MAAOzP,EAAKA,MAAC2B,KAAMW,EAAAA,IAAI+I,KAAsBA,GAAoB9I,EAAuB,CAAC,uBAAwB,0DAA2D,wBAAyB,kBAAmBiN,GAAWxP,EAAAA,MAAM2B,MAAO6N,GAAWxP,QAAM2B,MAAOgO,EAAAA,UAAUE,KAAKJ,MCfrmBzM,GAAY,CAAC,WAAY,QAAS,OAAQ,OAAQ,aAAc,WAAY,UAAW,SAAU,eAAgB,QAAS,eAAgB,+BAAgC,qCAiB1K8M,GAA0BxK,EAAK7C,QAACwJ,YAAW,SAAoB/I,EAAMgJ,GACvE,IAAI6D,EACA5M,EAAWD,EAAKC,SAClB6D,EAAQ9D,EAAK8D,MACb3F,EAAO6B,EAAK7B,KACZ2O,EAAO9M,EAAK8M,KACZC,EAAa/M,EAAK+M,WACP/M,EAAKgN,SACpB,IAAIC,EAAUjN,EAAKiN,QACfC,EAASlN,EAAKkN,OACd1R,EAAewE,EAAKxE,aACpB2R,EAAQnN,EAAKmN,MACbC,EAAepN,EAAKoN,aACpBC,EAA+BrN,EAAKqN,6BACpCC,EAAoCtN,EAAKsN,kCACzC7M,EAAOC,EAAyBV,EAAMF,IAEtCa,EADiBC,EAAAA,cACID,MACnBqJ,EAAcC,EAAUA,WAAC1N,IAC3BG,EAAOsN,EAAYtN,KACnBD,EAAOuN,EAAYvN,KACnBE,EAAWqN,EAAYrN,SACrBmE,EAAMwG,GAAgB0B,EAAc,MACpCH,EAAUjK,GAASnC,GACnB2D,EAAUa,EAAAA,aAAY,WACpBvE,EACFuQ,IAEAC,IAEFpM,EAAII,QAAQa,OACb,GAAE,CAACkL,EAASC,EAAQxQ,EAAMoE,IACvByM,EAAYF,GAA8DG,UAC1EC,EAAkBJ,EAA+B,GAAK9K,EAAEA,GAACgJ,GAA0BM,GAAwBlL,GAAQ8K,GAAoBhP,GAAOqP,GAAqBnL,GAAQ9D,EAAgBA,EAAgBA,EAAgBA,EAAgB,CAAE,EAAEoP,GAA2BtL,GAAQoM,GAAaZ,GAA8BxL,GAAQhE,GAAW6P,GAAqB7L,GAAQwM,IAAUlR,GAAME,SAAWX,GAAe4D,EAAAA,IAAItE,KAAoBA,GAAkBuE,EAAuB,CAAC,6DAA8D5C,IAASiR,EAAU9R,KAACC,QAASuD,EAAAA,IAAIrE,KAAqBA,GAAmBsE,EAAuB,CAAC,2CAA4C,6BAA8B,iCAAkC,oCAAqCyF,GAAkB/F,GAAsBA,KACjzB4O,EAAiD,QAAvCd,EAAcpM,EAAK,sBAA4C,IAAhBoM,EAAyBA,EAAc,kCACpG,OAAoBzK,EAAAA,QAAMO,cAAc4K,EAAWvK,EAAS,CAAE,EAAEvC,EAAM6M,EAAmC,CACvGxM,IAAKA,EACLgM,KAAMA,EACNhJ,MAAOA,EACPnH,SAAUA,EACVyD,QAASA,EACTwN,QAASC,EAAOA,QAAC9R,QACjB+R,SAAUnN,IAAU7D,EAAAA,MAAM2B,KAC1BqE,WAAyBV,EAAK7C,QAACoD,cAAcoL,EAAAA,QAAe,MAC5DtR,KAAMA,EACN,cAAekR,EACfzN,UAAWqC,EAAEA,GAACkL,EAAiB5Q,EAAgB,CAAA,EAAIuC,EAAAA,IAAIpE,KAAqBA,GAAmBqE,EAAuB,CAAC,8BAA+B,uBAAwB+N,GAAe3Q,IAASiR,EAAAA,KAAW3R,SAAUuR,aAA6F,EAASA,EAAkCpN,aACpVkC,EAAAA,QAAMO,cAAc,MAAO,CAC1CzC,UAAWkM,IACGhK,EAAK7C,QAACoD,cAAc,MAAO,CACzC,YAAarH,GAAaK,WAC1BuE,UAAWqC,EAAAA,GAAG+I,GAAyBe,KACtClO,GAAOgP,IAAUlR,GAAME,OAASX,GAA6B4G,EAAAA,QAAMO,cAAcqL,UAAa,CAC/F,eAAe,EACf9N,UAAWd,EAAGA,IAACnE,KAAqBA,GAAmBoE,EAAuB,CAAC,4BAA6B,uBAAwBiN,GAAW3L,IAC/IlE,KAAMoM,EAAQ/J,YACdmP,MAAO,WACJhO,EACP,IACA2M,GAAWpJ,YAAc,aC5ElB,ICCH1I,GAAiBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBC,GAAkBqM,GDDtHyG,GAAiC9O,EAAGA,IAACtE,KAAoBA,GAAkBuE,EAAuB,CAAC,mEAAoE,WAAYG,UAAQ,IAC3L2O,GAAe/O,EAAAA,IAAIrE,KAAqBA,GAAmBsE,EAAuB,CAAC,sDACnF+O,GAAmBhP,EAAGA,IAACpE,KAAqBA,GAAmBqE,EAAuB,CAAC,kBAAmB,uBAAwB,WAAYqM,EAAUA,WAAC2C,MAAMzC,SAAUF,EAAAA,WAAW2C,MAAMrP,YAC1LsP,GAAiB,SAAwBtO,GAClD,IAAI8N,EAAW9N,EAAK8N,SAClBjF,EAAU7I,EAAK6I,QACjB,OAAOzJ,EAAAA,IAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,oBAAqB,eAAgB,mBAAoB,sBAAuB,kDAAmD,wCAAyC,WAAYM,EAAAA,aAAaJ,QAASuO,EAAW5Q,EAAOA,QAACqP,IAAI5N,OAASzB,EAAOA,QAACqP,IAAI1O,KAAMgL,EAAQ1K,KAAMqB,EAAOA,QAAC,GAAIF,EAAAA,mBAAmBiP,OAAQjP,EAAAA,mBAAmBiP,OACrZ,ECLIzO,GAAY,CAAC,WAAY,WAAY,OAAQ,WAAY,gBAAiB,YAAa,cAAe,eAAgB,QAAS,qBAAsB,eAAgB,YAAa,KAAM,kBAAmB,aAAc,YAAa,QAAS,cAAe,OAAQ,eAAgB,QAAS,WAAY,WAAY,kBAAmB,kBAAmB,kBAAmB,gBAAiB,aAAc,UAAW,YAAa,YAAa,SAAU,WAAY,gCAwBnc0O,GAAsBzF,EAAUA,YAAC,SAAU/I,EAAMyO,GAC1D,IAAIC,EACAzO,EAAWD,EAAKC,SAClB0O,EAAe3O,EAAK8N,SACpBc,EAAY5O,EAAKvD,KACjBA,OAAqB,IAAdmS,EAAuBhT,GAAKG,QAAU6S,EAC7CC,EAAgB7O,EAAKrD,SACrBA,OAA6B,IAAlBkS,GAAmCA,EAC9CC,EAAqB9O,EAAK+O,cAC1BA,OAAuC,IAAvBD,GAAuCA,EACvD1F,EAAiBpJ,EAAKqJ,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/C4F,EAAmBhP,EAAKiP,YACxBA,OAAmC,IAArBD,EAA8B,SAAWA,EACvDE,EAAoBlP,EAAKxE,aACzBA,OAAqC,IAAtB0T,EAA+B,GAAKA,EACnDC,EAAanP,EAAKmN,MAClBA,OAAuB,IAAfgC,EAAwBlT,GAAMC,KAAOiT,EAC7CC,EAAwBpP,EAAKmJ,mBAC7BA,OAA+C,IAA1BiG,EAAmChT,GAAmBC,QAAU+S,EACrFC,EAAoBrP,EAAKoN,aACzBA,OAAqC,IAAtBiC,EAA+BC,EAAYA,aAACC,MAAQF,EACnEG,EAAgBxP,EAAK,aACrByP,OAA6B,IAAlBD,EAA2BlU,GAAaC,KAAOiU,EAC1DE,EAAS1P,EAAKsE,GACdqL,EAAiB3P,EAAK,mBACtB4P,EAAY5P,EAAK,cACjBE,EAAYF,EAAKE,UACjBxC,EAAQsC,EAAKtC,MACb8C,EAAcR,EAAKQ,YACnBsM,EAAO9M,EAAK8M,KACZ+C,EAAe7P,EAAK6P,aACpB/L,EAAQ9D,EAAK8D,MACbgM,EAAW9P,EAAK8P,SAChB9C,EAAWhN,EAAKgN,SAChB1D,EAAkBtJ,EAAKsJ,gBACvBC,EAAkBvJ,EAAKuJ,gBACvBC,EAAkBxJ,EAAKwJ,gBACvBC,GAAgBzJ,EAAKyJ,cACrBC,GAAa1J,EAAK0J,WAClBC,GAAU3J,EAAK2J,QACfC,GAAY5J,EAAK4J,UACjBC,GAAY7J,EAAK6J,UACjBC,GAAS9J,EAAK8J,OACdC,GAAW/J,EAAK+J,SAChBsD,GAA+BrN,EAAKqN,6BACpC5M,GAAOC,EAAyBV,EAAMF,IACpCwE,GAAKF,EAAAA,eAAe,CACtBC,OAAQ,SACRC,GAAIoL,IAEFxG,GAAU/B,EAAAA,SAAQ,WACpB,OAAOyI,IAAclS,OAAQ+E,EAAYkN,QAAuDA,EAAiB,GAAGlU,OAAO6I,GAAI,SAChI,GAAE,CAACqL,EAAgBC,EAAWlS,EAAO4G,KACjC5G,GAAUiS,GAAmBC,GAChC3N,QAAQC,MAAM,sGAEhB,IACE4L,GADiBlN,EAAWA,YAAC+N,GACLb,SACtBiC,GAAgB,GAAGtU,OAAO6I,GAAI,gBAC9B0L,GAAS,GAAGvU,OAAO6I,GAAI,SAEzB+D,GAAaC,EADCC,EAAQA,UAAC,GACgB,GACvC7L,GAAO2L,GAAW,GAClB4H,GAAU5H,GAAW,GACnB6H,GAAe5I,EAAAA,gBAAgBmH,EAAQ,MACvC0B,GAAgB/H,GAAY,MAC5BgI,GAAehM,EAAAA,eAAe,CAChCC,OAAQ,WAENgM,GAAcjI,GAAY,MAC1BS,GAAUjK,GAASnC,GACnB6T,GAAenJ,EAAAA,SAAQ,WACzB,MAAO,CACL1K,KAAMA,EACNC,KAAMA,GACNC,SAAUA,EAEb,GAAE,CAACF,EAAMC,GAAMC,IAChBiF,EAAAA,WAAU,gBACMa,IAAVqB,QAAoCrB,IAAbqN,IAAuC,IAAb9C,GACnD/K,QAAQ2D,KAAK,oNAEhB,GAAE,CAACkK,EAAU9C,EAAUlJ,IAKxB,IAAIoJ,GAASjM,EAAAA,aAAY,WACvBgP,IAAQ,EACT,GAAE,IACChD,GAAUhM,EAAAA,aAAY,WACxBgP,IAAQ,GACRE,GAAcjP,QAAQa,OAC1B,GAAK,CAACoO,KACJvO,EAAAA,WAAU,WACR,GAAKlF,GAAL,CAGA,IAAI6T,EAAiB,SAAwB/F,GAC3C,IAAIgG,EAAeL,GAAcjP,QAAQuP,SAASjG,EAAMkG,SAAWL,GAAYnP,QAAQuP,SAASjG,EAAMkG,QACtGT,GAAQO,EACd,EAEI,OADAG,SAASC,iBAAiB,YAAaL,GAChC,WACLI,SAASE,oBAAoB,YAAaN,EAChD,CARK,CASF,GAAE,CAACF,GAAaF,GAAezT,KAChC,IAAIoU,GAAoC3J,EAAAA,SAAQ,WAC9C,IAAI2J,EAAoC,KAQxC,YAPcrO,IAAVqB,QAAwCrB,IAAjBoN,GACzB7K,GAAuB/E,GAAU,SAAUzC,EAAQC,GAC7CiJ,GAAmBlJ,EAAQC,EAAOoS,KACpCiB,EAAoCtT,EAE9C,IAEWsT,CACR,GAAE,CAAC7Q,EAAU4P,EAAc/L,IAS1BiN,GAAazI,EADEC,EAAQA,SAACuI,IACgB,GACxCE,GAA6BD,GAAW,GACxCE,GAAgCF,GAAW,GAK7CnP,EAAAA,WAAU,WAEN,IAAIsP,EAD6B,OAA/BF,IAEFC,GAA6G,QAA9EC,EN9E9B,SAAyBjR,EAAUkR,GACxC,IAAInR,EAAMoR,EAAOC,EAAOC,EAKpBC,EACAC,EACAC,EACAC,EAeJ,OAdA1M,GAAuB/E,GAAU,SAAUzC,GACzC,GAAIA,IAAW2T,EACbI,EAAeJ,OACV,GAAI3T,EAAOgF,MAAMvC,WAAakR,EAAe3O,MAAMvC,UAAYzC,EAAOgF,MAAMsB,QAAUqN,EAAe3O,MAAMsB,MAAO,CACvH,IAAI6N,EAC+C,QAAlDA,EAAwBH,SAA4D,IAA1BG,IAA2DH,EAAuBhU,EAC9I,MAAM,QAA2BiF,IAAvBjF,EAAOgF,MAAMsB,OAAuBtG,EAAOgF,MAAMsB,QAAUqN,EAAe3O,MAAMsB,MAAO,CAChG,IAAI8N,EACyC,QAA5CA,EAAqBH,SAAsD,IAAvBG,IAAqDH,EAAoBjU,EAC/H,MAAM,GAAIwI,GAAexI,KAAYwI,GAAemL,GAAiB,CACpE,IAAIU,EACyB,QAA5BA,EAAaH,SAAsC,IAAfG,IAAqCH,EAAYlU,EACvF,CACL,IAC+P,QAArPwC,EAAmM,QAA3LoR,EAAiI,QAAxHC,EAA2C,QAAlCC,EAAgBC,SAA4C,IAAlBD,EAA2BA,EAAgBE,SAA4C,IAAVH,EAAmBA,EAAQI,SAAyC,IAAVL,EAAmBA,EAAQM,SAAgC,IAAT1R,EAAkBA,EAAO,IAChS,CMqDwD8R,CAAgB7R,EAAU+Q,WAA8D,IAArBE,EAA8BA,EAAmBJ,GAEzK,GAAE,CAAC7Q,EAAU6Q,GAAmCE,KACjD,IAAIe,GAAiB5K,EAAAA,SAAQ,WAC3B,QAAc1E,IAAVqB,EAAqB,CACvB,IAAIkO,EAAkB,KAMtB,OALAhN,GAAuB/E,GAAU,SAAUzC,EAAQC,GAC7CiJ,GAAmBlJ,EAAQC,EAAOqG,KACpCkO,EAAkBxU,EAE5B,IACawU,CACb,CACM,OAAOhB,EAEV,GAAE,CAAC/Q,EAAU+Q,GAA4BlN,IACtCmO,GAAWhR,EAAAA,aAAY,SAAUzD,EAAQgN,GAC3CA,EAAM0H,iBACN1H,EAAMC,uBACQhI,IAAVqB,GACFmN,GAA8BzT,GAEhCsS,SAA4CA,EAAS9J,GAAexI,GAASgN,GAC7E2H,QAAiB1P,GACjBwK,IACD,GAAE,CAAC6C,EAAU7C,GAASnJ,IACnBsO,GAAwBnR,EAAAA,aAAY,SAAUzD,EAAQ6U,GACxD,OAAO,SAAU7H,GACfA,EAAM0H,iBACN1H,EAAMC,kBACD9N,GAAa0V,IAChBJ,GAASzU,EAAQgN,GACjByC,KAER,CACG,GAAE,CAACtQ,EAAUsQ,GAASgF,KAOrBK,GAAahK,EADEC,EAAAA,WACyB,GACxCgK,GAAgBD,GAAW,GAC3BH,GAAmBG,GAAW,GAC5BE,GAAiBrL,EAAAA,SAAQ,WAC3B,IAAIqL,EAAiB,GASrB,OARIzD,GACFyD,EAAeC,KAAK,MAEtBzN,GAAuB/E,GAAU,SAAUzC,EAAQC,GAC5C6I,GAAiB9I,EAAQC,IAC5B+U,EAAeC,KAAKjV,EAE5B,IACWgV,CACX,GAAK,CAACvS,EAAU8O,IACV2D,GAAwBzR,eAAY,SAAUuJ,QAC1B/H,IAAlB8P,IACFN,GAASM,GAAe/H,EAE9B,GAAK,CAAC+H,GAAeN,KACfU,GAAqB1R,EAAAA,aAAY,WACnCkR,GAAiBK,GAAe,GACpC,GAAK,CAACA,KACAI,GAAoB3R,EAAAA,aAAY,WAClCkR,GAAiBK,GAAeA,GAAezL,OAAS,GAC5D,GAAK,CAACyL,KACAK,GAAwB5R,EAAAA,aAAY,WACtC,QAAsBwB,IAAlB8P,IAAyE,IAA1CC,GAAeM,QAAQP,IACxDK,SACK,CACL,IAAIG,EAAQP,GAAeM,QAAQP,IAAiB,EACpDJ,GAAiBK,GAAeO,GACjC,CACF,GAAE,CAACP,GAAgBD,GAAeK,KAC/BI,GAAoB/R,EAAAA,aAAY,WAClC,QAAsBwB,IAAlB8P,IAA+BC,GAAeM,QAAQP,MAAmBC,GAAezL,OAAS,EACnG4L,SACK,CACL,IAAII,EAAQP,GAAeM,QAAQP,IAAiB,EACpDJ,GAAiBK,GAAeO,GACjC,CACF,GAAE,CAACP,GAAgBD,GAAeI,KAC/BM,GAAwBhS,EAAAA,aAAY,SAAUzD,EAAQ6U,GACxD,OAAO,SAAU7H,GACfA,EAAM0H,iBACN1H,EAAMC,kBACD9N,GAAa0V,GAChBF,GAAiB3U,EAEzB,CACA,GAAK,CAACb,IACAwG,GAAYlC,eAAY,SAAUuJ,GACpC,IAAI0I,EAAsBC,EAE1B,KAAI3I,EAAM4I,SAAW5I,EAAM6I,UAAY7I,EAAM8I,QAA7C,CAGA,IAAIC,EAAiE,QAAhDL,EAAuB7C,GAAYnP,eAA8C,IAAzBgS,OAAkC,EAASA,EAAqBzC,SAASE,SAAS6C,eAC3JC,EAAsE,QAAnDN,EAAwBhD,GAAcjP,eAA+C,IAA1BiS,OAAmC,EAASA,EAAsB1C,SAASE,SAAS6C,eAItK,GAHyBC,GAAmBF,EAI1C,OAAQ/I,EAAMlI,KACZ,KAAKoR,EAAAA,OAAOC,IACZ,KAAKD,EAAMA,OAACE,OACV3G,KACAkF,QAAiB1P,GACjB,MACF,KAAKiR,EAAAA,OAAOG,MACZ,KAAKH,EAAMA,OAACI,MACNpX,KAAS+W,GAEXjJ,EAAM0H,iBAERQ,GAAsBlI,GACtB,MACF,KAAKkJ,EAAMA,OAACK,SACLrX,IAAQ+W,GACXvG,KAEF1C,EAAM0H,iBACNW,KACA,MACF,KAAKa,EAAMA,OAACM,WACLtX,IAAQ+W,GACXvG,KAEF1C,EAAM0H,iBACNc,KAjCL,CAqCL,GAAK,CAAC3C,GAAaF,GAAelD,GAASvQ,GAAMgW,GAAuBG,GAAuBG,GAAmB9F,KAChH+G,mBAAiB,UAAW9Q,IAM5B,IAAI+Q,GAAeC,EAAAA,kBACf5T,GAAY4G,EAAAA,SAAQ,WACtB,IAAI5G,GAAY,EAIhB,OAHAyE,GAAuB/E,GAAU,SAAUzC,GACzC+C,IAAcA,OAAmCkC,IAAvBjF,EAAOgF,MAAMrC,MAC7C,IACWI,CACX,GAAK,CAACN,IACAmU,GAA2BjN,EAAAA,SAAQ,WACrC,OAAwB,OAAjB+M,IAAiD,OAAxB7D,GAAYnP,cAAsCuB,IAAlB8P,IAA+B7V,EAChG,GAAE,CAAC6V,GAAelC,GAAa3T,GAAMwX,KAClCG,GAAoBlN,EAAAA,SAAQ,WAC9B,IAAI9I,EAA8B,OAAnB0T,GACf,OAAoB3P,EAAK7C,QAACoD,cAAc5C,GAAgB,CACtDG,eAAWuC,EACXtC,WAAOsC,EACPpE,SAAUA,EACVL,QAA2B,OAAlBuU,GACT5V,UAAU,EACVyD,QAASgS,GAAsB,MAAM,GACrC/R,QAAS4S,GAAsB,MAAM,GACrC1S,WAAW,EACXD,sBAAuBjC,GAAY+V,IAClCnF,EACP,GAAK,CAACmF,GAA0B7B,GAAeH,GAAuBa,GAAuBhE,EAAa8C,KACpGuC,GAAmBnN,EAAAA,SAAQ,WAC7B,OAAO5B,GAA0BtF,GAAU,SAAUzC,EAAQC,GAC3D,IAAIY,EAAWb,IAAWuU,GACtBpV,EAAW2J,GAAiB9I,EAAQC,GACxC,OAAOkN,EAAcA,EAAc,CAAA,EAAInN,EAAOgF,OAAQ,GAAI,CACxDtC,UAAW1C,EAAOgF,MAAMtC,UACxBC,MAAO3C,EAAOgF,MAAMrC,MACpB9B,SAAUA,EACVL,QAASR,IAAW+U,GACpB5V,SAAUA,EACVsD,SAAUzC,EAAOgF,MAAMvC,SACvBM,UAAWA,GACXH,QAASgS,GAAsB5U,EAAQb,GACvC0D,QAAS4S,GAAsBzV,EAAQb,GACvC2D,sBAAuBjC,GAAY+V,IAE3C,IAAO,WACDnS,QAAQC,MAAM,0EACpB,GACA,GAAK,CAACkS,GAA0BnU,EAAUsS,GAAeH,GAAuBa,GAAuB1S,GAAWwR,KAC5GrH,GAAeC,EAAc,CAC/BlB,cAAeA,GACfC,WAAYA,GACZC,QAASA,GACTC,UAAWA,GACXC,UAAWA,GACXC,OAAQA,GACRC,SAAUA,IACTV,EAAY,CACbA,UAAWA,EACXG,gBAAiBA,EACjBF,gBAAiBA,EACjBC,gBAAiBA,GACf,CACFF,UAAWA,IAEb,OAAoBjH,EAAK7C,QAACoD,cAAc4R,UAAoB,CAC1DzG,SAAUA,IACI1L,EAAK7C,QAACoD,cAAc,MAAO,CACzC7B,IAAKoP,GACLhQ,UAAWqC,EAAAA,GAAG4L,GAAcjO,GAC5B,YAAauP,IACX/R,GAAS8C,IAA6B4B,EAAAA,QAAMO,cAAc,MAAO,CACnEzC,UAAWgO,IACVxQ,GAAsB0E,EAAAA,QAAMO,cAAc6R,QAAO,CAClDC,QAASrE,GACT9L,GAAI4E,GACJ4E,SAAUA,GACVnR,SAAUA,EACVuD,UAAWqC,EAAEA,GAAC1F,EAAgBA,EAAgB,CAAE,EAAEuR,GAAkB3R,IAASb,GAAKI,OAAQoD,MAAItE,KAAoBA,GAAkBuE,EAAuB,CAAC,wCAAyC,6EAA8E+N,GAAe3Q,IAASb,GAAKG,SAAUqD,EAAGA,IAACrE,KAAqBA,GAAmBsE,EAAuB,CAAC,yJAA0JD,EAAGA,IAACpE,KAAqBA,GAAmBqE,EAAuB,CAAC,2BAA4B,0CAA2C,6CAA8C,wDAAyDyF,GAAkB/F,GAAoBZ,KAAMY,GAAoBC,cACz0BtB,GAAQ8C,GAA4B4B,EAAAA,QAAMO,cAAc+R,EAAAA,YAAa,CACtEpQ,GAAIyL,GACJjC,SAAUA,GACVnR,SAAUA,EACVuD,UAAWqC,EAAAA,GAAG1F,EAAgBA,EAAgB,CAAE,EAAEuR,GAAkB3R,IAASb,GAAKI,OAAQoD,EAAAA,IAAInE,KAAqBA,GAAmBoE,EAAuB,CAAC,wCAAyC,6EAA8E+N,GAAe3Q,IAASb,GAAKG,SAAUqD,EAAAA,IAAIlE,KAAqBA,GAAmBmE,EAAuB,CAAC,2BAA4B,0CAA2C,6CAA8C,wDAAyDyF,GAAkB/F,GAA0BZ,KAAMY,GAA0BC,cACznBwB,IAA4B4B,EAAAA,QAAMO,cAAcpG,GAAcoY,SAAU,CACzE7Q,MAAOwM,IACOlO,EAAAA,QAAMO,cAAciK,GAAY5J,EAAS,CAAA,EAAIvC,GAAM,CACjE6D,GAAI8L,GACJtP,IAAKqP,GACLrD,KAAMA,EACNE,SAAUA,EACVlJ,MAAOkC,GAAe+L,IACtB5T,KAAyB,OAAnB4T,GAA0BA,GAAevP,MAAMvC,SAAWgP,EAChElC,WAA+B,OAAnBgF,GACZ7E,OAAQA,GACRD,QAASA,GACT,kBAAmB/D,GACnB,aAAexL,GAAUiS,OAA6BlN,EAAZmN,EAC1C,gBAAiBI,GACjB,gBAAiBtT,GACjB,mBAAoBqT,GACpB,eAAgB5C,IAAUlR,GAAME,MAChC,gBAAiBQ,EACjBnB,aAAcA,EACd2R,MAAOA,EACPC,aAAcA,EACdC,6BAA8BA,KACfjL,EAAK7C,QAACoD,cAAcmG,GAAU9F,EAAS,CACtDkG,QAASA,GACT5E,GAAI0L,GACJ/G,iBAAkBkH,GAClBrP,IAAKuP,GACLnQ,UAAWqC,EAAAA,GAAG1F,EAAgB,CAAE,EAAEuC,EAAGA,IAACjE,KAAqBA,GAAmBkE,EAAuB,CAAC,gCAAiC,6BAAmF,QAApDqP,EAAyByB,GAAcjP,eAAgD,IAA3BwN,OAAoC,EAASA,EAAuBkG,aAAczL,IAAuB/M,GAAmBC,UAC9V8M,mBAAoBA,GACnBuB,IAAeqE,GAAiBsF,GAAmBC,MAAqBnH,IAAUlR,GAAME,OAASX,GAA6B4G,EAAAA,QAAMO,cAAc,OAAQ,CAC3J,YAAarH,GAAaE,aAC1B0E,UAAWqC,EAAEA,GAAC+L,GAAe,CAC3BR,SAAUA,GACVjF,QAASA,KACPzJ,EAAAA,IAAIhE,KAAqBA,GAAmBiE,EAAuB,CAAC,uBAAwB,sCAAuC,yCAA0C,gDAAiDyF,GAAkB/F,GAA0BZ,KAAMY,GAA0BC,YAAanC,EAAgB,CAAA,EAAIuC,EAAAA,IAAIqI,KAAqBA,GAAmBpI,EAAuB,CAAC,iMAAkM3C,MACplBlB,IACL,IACAgT,GAAOhL,YAAc,SACrBgL,GAAO/K,UAAY,CACjB/F,MAAOgG,EAASnE,QAACsE,OACjB,kBAAmBH,EAASnE,QAACsE,OAC7B,aAAcH,EAASnE,QAACsE,OACxBrD,YAAakD,EAASnE,QAACoE,KACvBsL,YAAavL,EAASnE,QAACsE,OACvB3D,UAAWwD,EAASnE,QAACsE,OACrBiK,SAAUpK,EAASnE,QAACwE,KACpBtH,KAAMiH,EAASnE,QAACmF,MAAMmQ,OAAOC,OAAOlZ,KACpCe,SAAU+G,EAASnE,QAACwE,KACpBO,GAAIZ,EAASnE,QAACsE,OACdC,MAAOJ,EAASnE,QAACsE,OACjBgM,aAAcnM,EAASnE,QAACsE,OACxBiM,SAAUpM,EAASnE,QAACwV,KACpB/H,SAAUtJ,EAASnE,QAACwE,KACpBvI,aAAckI,EAASnE,QAACsE,OACxBsJ,MAAOzJ,EAASnE,QAACmF,MAAMmQ,OAAOC,OAAO7Y,KACrC8S,cAAerL,EAASnE,QAACwE,KACzBqJ,aAAc1J,EAASnE,QAACmF,MAAMmQ,OAAOC,OAAOxF,EAAYA,eACxDnG,mBAAoBzF,EAASnE,QAACmF,MAAMmQ,OAAOC,OAAO1Y"}