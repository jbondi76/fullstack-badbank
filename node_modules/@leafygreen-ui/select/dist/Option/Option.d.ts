import React from 'react';
import PropTypes from 'prop-types';
import { InternalProps, OptionProps } from './Option.types';
export declare function InternalOption({ children, className, glyph, selected, focused, disabled, onClick, onFocus, triggerScrollIntoView, hasGlyphs, description, ...rest }: InternalProps): React.JSX.Element;
export declare namespace InternalOption {
    var displayName: string;
}
export declare function Option(_: OptionProps): JSX.Element;
export declare namespace Option {
    var displayName: string;
    var propTypes: {
        children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
        className: PropTypes.Requireable<string>;
        glyph: PropTypes.Requireable<PropTypes.ReactElementLike>;
        value: PropTypes.Requireable<string>;
        disabled: PropTypes.Requireable<boolean>;
        description: PropTypes.Requireable<string>;
    };
}
export type OptionElement = Omit<React.ReactComponentElement<typeof Option>, 'props'> & {
    props: OptionProps;
};
//# sourceMappingURL=Option.d.ts.map