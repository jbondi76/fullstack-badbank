[
  {
    "tags": {
      "param": "props.open Boolean to describe whether or not Modal is open.\nprops.size String to determine size of Modal. ['small', 'default', 'large']\nprops.setOpen Callback to change the open state of Modal.\nprops.children Content to appear inside of Modal container.\nprops.shouldClose Callback to determine whether or not Modal should close when user tries to close it.\nprops.className className applied to container div.\nprops.contentClassName className applied to overlay div.\nprops.initialFocus By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus. With this option you can specify a different element to receive that initial focus. Selector string (which will be passed to document.querySelector() to find the DOM node).\nprops.closeIconColor Choose between dark or light close icon. Default is dark."
    },
    "description": "\nModals place content on top of main window.",
    "methods": [],
    "displayName": "Modal",
    "props": {
      "ModalProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the Modal component.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "open": {
          "name": "open",
          "defaultValue": {
            "value": "false"
          },
          "description": "Determines the open state of the modal",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "'default'"
          },
          "description": "Specifies the size of the Modal.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ModalSize",
            "value": [
              {
                "value": "\"small\""
              },
              {
                "value": "\"default\""
              },
              {
                "value": "\"large\""
              }
            ]
          },
          "tags": {
            "default": "'default'"
          }
        },
        "setOpen": {
          "name": "setOpen",
          "defaultValue": {
            "value": "() => {}"
          },
          "description": "Callback to change the open state of the Modal.",
          "required": false,
          "type": {
            "name": "(open: boolean) => void | Dispatch<SetStateAction<boolean>>"
          },
          "tags": {
            "default": "() => {}"
          }
        },
        "shouldClose": {
          "name": "shouldClose",
          "defaultValue": {
            "value": "() => true"
          },
          "description": "Callback to determine whether or not Modal should close when user tries to close it.",
          "required": false,
          "type": {
            "name": "() => boolean"
          },
          "tags": {
            "default": "() => true"
          }
        },
        "contentClassName": {
          "name": "contentClassName",
          "defaultValue": null,
          "description": "className applied to overlay div.\nDisclaimer: This prop may be deprecated in future versions of Modal",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "initialFocus": {
          "name": "initialFocus",
          "defaultValue": null,
          "description": "By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus.\nWith this option you can specify a different element to receive that initial focus.\nSelector string (which will be passed to document.querySelector() to find the DOM node)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "closeIconColor": {
          "name": "closeIconColor",
          "defaultValue": {
            "value": "'default'"
          },
          "description": "Determines the color of the close icon.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "CloseIconColor",
            "value": [
              {
                "value": "\"default\""
              },
              {
                "value": "\"dark\""
              },
              {
                "value": "\"light\""
              }
            ]
          },
          "tags": {
            "default": "'default'"
          }
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      }
    }
  },
  {
    "tags": {
      "param": "props.open Boolean to describe whether or not Modal is open.\nprops.size String to determine size of Modal. ['small', 'default', 'large']\nprops.setOpen Callback to change the open state of Modal.\nprops.children Content to appear inside of Modal container.\nprops.shouldClose Callback to determine whether or not Modal should close when user tries to close it.\nprops.className className applied to container div.\nprops.contentClassName className applied to overlay div.\nprops.initialFocus By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus. With this option you can specify a different element to receive that initial focus. Selector string (which will be passed to document.querySelector() to find the DOM node).\nprops.closeIconColor Choose between dark or light close icon. Default is dark."
    },
    "description": "\nModals place content on top of main window.",
    "methods": [],
    "displayName": "LeafygreenUiModal",
    "props": {
      "ModalProps": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Content that will appear inside of the Modal component.",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "open": {
          "name": "open",
          "defaultValue": {
            "value": "false"
          },
          "description": "Determines the open state of the modal",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        },
        "size": {
          "name": "size",
          "defaultValue": {
            "value": "'default'"
          },
          "description": "Specifies the size of the Modal.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "ModalSize",
            "value": [
              {
                "value": "\"small\""
              },
              {
                "value": "\"default\""
              },
              {
                "value": "\"large\""
              }
            ]
          },
          "tags": {
            "default": "'default'"
          }
        },
        "setOpen": {
          "name": "setOpen",
          "defaultValue": {
            "value": "() => {}"
          },
          "description": "Callback to change the open state of the Modal.",
          "required": false,
          "type": {
            "name": "(open: boolean) => void | Dispatch<SetStateAction<boolean>>"
          },
          "tags": {
            "default": "() => {}"
          }
        },
        "shouldClose": {
          "name": "shouldClose",
          "defaultValue": {
            "value": "() => true"
          },
          "description": "Callback to determine whether or not Modal should close when user tries to close it.",
          "required": false,
          "type": {
            "name": "() => boolean"
          },
          "tags": {
            "default": "() => true"
          }
        },
        "contentClassName": {
          "name": "contentClassName",
          "defaultValue": null,
          "description": "className applied to overlay div.\nDisclaimer: This prop may be deprecated in future versions of Modal",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "initialFocus": {
          "name": "initialFocus",
          "defaultValue": null,
          "description": "By default, when a focus trap is activated the first element in the focus trap's tab order will receive focus.\nWith this option you can specify a different element to receive that initial focus.\nSelector string (which will be passed to document.querySelector() to find the DOM node)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "closeIconColor": {
          "name": "closeIconColor",
          "defaultValue": {
            "value": "'default'"
          },
          "description": "Determines the color of the close icon.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "CloseIconColor",
            "value": [
              {
                "value": "\"default\""
              },
              {
                "value": "\"dark\""
              },
              {
                "value": "\"light\""
              }
            ]
          },
          "tags": {
            "default": "'default'"
          }
        }
      },
      "HTMLAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "AriaAttributes": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes",
      "DOMAttributes": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes",
      "DarkModeProps": {
        "darkMode": {
          "name": "darkMode",
          "defaultValue": {
            "value": "false"
          },
          "description": "Renders the component with dark mode styles.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {
            "default": "false"
          }
        }
      }
    }
  }
]