{"version":3,"file":"index.js","sources":["../../src/styles.ts","../../src/TooltipContent.tsx","../../src/types.ts","../../src/GuideCue.tsx"],"sourcesContent":["import { transparentize } from 'polished';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const timeout1 = 400;\nexport const timeout2 = 100;\n\nconst size = 24;\n\nexport const tooltipMultistepStyles = css`\n  padding: 32px 16px 16px;\n`;\n\nexport const tooltipStyles = css`\n  cursor: auto;\n`;\n\nexport const beaconStyles = (\n  prefersReducedMotion: boolean,\n  darkMode: boolean,\n) => {\n  const color = darkMode ? palette.blue.light2 : palette.blue.base;\n\n  const sharedCss = css`\n    position: relative;\n\n    div {\n      width: ${size}px;\n      height: ${size}px;\n      border-radius: 50%;\n      background-color: ${transparentize(0.5, color)};\n      transform-origin: center;\n      position: relative;\n    }\n  `;\n\n  if (prefersReducedMotion) {\n    return cx(\n      sharedCss,\n      css`\n        div {\n          box-shadow: 0px 0px 0px 4px ${transparentize(0.83, color)};\n        }\n      `,\n    );\n  }\n\n  return cx(\n    sharedCss,\n    css`\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        border-radius: 50%;\n        translate: -50% -50%;\n        top: 50%;\n        left: 50%;\n        scale: 0.9;\n        opacity: 0;\n        width: ${size}px;\n        height: ${size}px;\n        background: rgba(255, 255, 255, 0);\n        box-shadow: 0px 0px 0px 0px ${transparentize(1, color)};\n      }\n\n      // inner most pulse ring\n      &::before {\n        animation: pulse-outer 2.3s infinite cubic-bezier(0.42, 0, 0.61, 0.69);\n      }\n\n      // outer mosts pulse ring\n      &::after {\n        animation: pulse-outer-2 2.3s infinite cubic-bezier(0.42, 0, 0.46, 0.72);\n      }\n\n      @keyframes pulse-outer {\n        10% {\n          box-shadow: 0px 0px 0px 0px ${transparentize(0.95, color)};\n          opacity: 1;\n        }\n\n        40%,\n        100% {\n          // this should scale up to 1 and have 0 opacity by 42% and remain that way until 100%\n          scale: 1;\n          box-shadow: 0px 0px 0px 15px ${transparentize(0.7, color)};\n          opacity: 0;\n        }\n      }\n\n      @keyframes pulse-outer-2 {\n        10% {\n          box-shadow: 0px 0px 0px 0px ${transparentize(0.95, color)};\n          opacity: 1;\n        }\n\n        35%,\n        100% {\n          // this should scale up to 1 and have 0 opacity by 35% and remain that way until 100%. This is 35% so that it gives the illusion of disappearing before the first ring.\n          scale: 1;\n          box-shadow: 0px 0px 0px 18px ${transparentize(0.7, color)};\n          opacity: 0;\n        }\n      }\n\n      div {\n        animation: pulse-inner 2.3s infinite cubic-bezier(0.42, 0, 0.58, 0.72);\n\n        @keyframes pulse-inner {\n          40% {\n            // at 0% this will start to slowly scale and by 40% this should scale to 1.3\n            scale: 1.3;\n          }\n          73% {\n            // By 73% this should scale back to 1. From 73% to 100% it will remain at 1.\n            scale: 1;\n          }\n        }\n      }\n    `,\n  );\n};\n\nexport const contentStyles = css`\n  margin-bottom: 16px;\n`;\n\nexport const footerStyles = css`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const bodyThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.light1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.black};\n  `,\n};\n\nexport const bodyTitleStyles = css`\n  margin-bottom: 4px;\n`;\n\nexport const closeStyles = css`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nexport const closeHoverStyles = css`\n  color: ${palette.gray.dark2};\n  &:hover,\n  &:active {\n    &::before {\n      background-color: ${palette.gray.light3};\n    }\n  }\n`;\n\nexport const stepStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.base};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark2};\n  `,\n};\n\nexport const buttonStyles = css`\n  height: 28px;\n`;\n","import React from 'react';\nimport { Options } from 'focus-trap';\nimport FocusTrap from 'focus-trap-react';\n\nimport Button from '@leafygreen-ui/button';\nimport { cx } from '@leafygreen-ui/emotion';\nimport { useIdAllocator } from '@leafygreen-ui/hooks';\nimport XIcon from '@leafygreen-ui/icon/dist/X';\nimport IconButton from '@leafygreen-ui/icon-button';\nimport { Theme } from '@leafygreen-ui/lib';\nimport Tooltip from '@leafygreen-ui/tooltip';\nimport { Body, Disclaimer } from '@leafygreen-ui/typography';\n\nimport {\n  bodyThemeStyles,\n  bodyTitleStyles,\n  buttonStyles,\n  closeHoverStyles,\n  closeStyles,\n  contentStyles,\n  footerStyles,\n  stepStyles,\n  tooltipMultistepStyles,\n  tooltipStyles,\n} from './styles';\nimport { GuideCueProps } from './types';\n\nconst ariaLabelledby = 'guide-cue-label';\nconst ariaDescribedby = 'guide-cue-desc';\n\ntype TooltipContentProps = Partial<GuideCueProps> & {\n  theme: Theme;\n  title: string;\n  isStandalone: boolean;\n  buttonText: string;\n  onEscClose: () => void;\n  handleButtonClick: () => void;\n  handleCloseClick: () => void;\n  usePortal?: boolean;\n};\n\nfunction TooltipContent({\n  darkMode,\n  open,\n  setOpen,\n  tooltipJustify,\n  tooltipAlign,\n  refEl,\n  portalClassName,\n  portalContainer,\n  scrollContainer,\n  popoverZIndex,\n  theme,\n  title,\n  isStandalone,\n  buttonText,\n  numberOfSteps,\n  currentStep,\n  children,\n  tooltipClassName,\n  onEscClose,\n  handleButtonClick,\n  handleCloseClick,\n  usePortal = true,\n  ...tooltipProps\n}: TooltipContentProps) {\n  const focusId = useIdAllocator({ prefix: 'guide-cue' });\n\n  const focusTrapOptions: Options = {\n    clickOutsideDeactivates: true,\n  };\n\n  return (\n    <>\n      <Tooltip\n        darkMode={darkMode}\n        open={open}\n        setOpen={setOpen} // setOpen is called when the `Esc` key is pressed. This behavior is handled inside the tooltip component.\n        justify={tooltipJustify}\n        align={tooltipAlign}\n        refEl={refEl}\n        className={cx(\n          { [tooltipMultistepStyles]: !isStandalone },\n          tooltipStyles,\n          tooltipClassName,\n        )}\n        portalClassName={portalClassName}\n        portalContainer={portalContainer}\n        scrollContainer={scrollContainer}\n        popoverZIndex={popoverZIndex}\n        onClose={onEscClose}\n        role=\"dialog\"\n        aria-labelledby={ariaLabelledby}\n        usePortal={usePortal}\n        {...tooltipProps}\n      >\n        <FocusTrap focusTrapOptions={focusTrapOptions}>\n          <div>\n            {!isStandalone && (\n              <IconButton\n                className={cx(closeStyles, { [closeHoverStyles]: darkMode })}\n                aria-label=\"Close Tooltip\"\n                onClick={handleCloseClick}\n                darkMode={!darkMode}\n              >\n                <XIcon />\n              </IconButton>\n            )}\n            <div className={contentStyles}>\n              <Body\n                id={ariaLabelledby}\n                as=\"h2\"\n                className={bodyTitleStyles}\n                darkMode={!darkMode}\n              >\n                <strong>{title}</strong>\n              </Body>\n              <Body\n                as=\"div\"\n                className={bodyThemeStyles[theme]}\n                id={ariaDescribedby}\n              >\n                {children}\n              </Body>\n            </div>\n            <div className={footerStyles}>\n              {!isStandalone && (\n                <Disclaimer className={stepStyles[theme]}>\n                  {currentStep} of {numberOfSteps}\n                </Disclaimer>\n              )}\n              <Button\n                variant=\"primary\"\n                onClick={() => handleButtonClick()}\n                darkMode={!darkMode}\n                className={buttonStyles}\n                id={focusId}\n              >\n                {buttonText}\n              </Button>\n            </div>\n          </div>\n        </FocusTrap>\n      </Tooltip>\n    </>\n  );\n}\n\nTooltipContent.displayName = 'TooltipContent';\nexport default TooltipContent;\n","import { DarkModeProps } from '@leafygreen-ui/lib';\nimport { Align, Justify } from '@leafygreen-ui/popover';\nimport { TooltipProps } from '@leafygreen-ui/tooltip';\n\nexport const TooltipAlign = {\n  Top: Align.Top,\n  Bottom: Align.Bottom,\n  Left: Align.Left,\n  Right: Align.Right,\n} as const;\n\nexport type TooltipAlign = (typeof TooltipAlign)[keyof typeof TooltipAlign];\n\nexport const TooltipJustify = {\n  Start: Justify.Start,\n  Middle: Justify.Middle,\n  End: Justify.End,\n} as const;\n\nexport type TooltipJustify =\n  (typeof TooltipJustify)[keyof typeof TooltipJustify];\n\n// Exclude these from tooltip (tooltip already extends popover props)\ntype ModifiedTooltipProps = Omit<\n  TooltipProps,\n  | 'usePortal'\n  | 'justify'\n  | 'align'\n  | 'onClick'\n  | 'trigger'\n  | 'triggerEvent'\n  | 'shouldClose'\n  | 'className'\n  | 'children'\n  | 'onClose'\n  | 'setOpen'\n  | 'open'\n  | 'refEl'\n  | 'darkMode'\n  | 'initialOpen'\n>;\n\ninterface StandaloneProps {\n  /**\n   * Used to determine which tooltip will be shown. If `numberOfSteps > 1` then the multi-step tooltip will be shown else the stand-alone tooltip will be shown. This number will only be displayed in the multi-step tooltip.\n   */\n  numberOfSteps: 1;\n\n  /**\n   * Used to display the current step. If `numberOfSteps === 1` this number will not display.\n   */\n  currentStep?: never;\n}\n\ninterface MultistepProps {\n  /**\n   * Used to determine which tooltip will be shown. If `numberOfSteps > 1` then the multi-step tooltip will be shown else the stand-alone tooltip will be shown. This number will only be displayed in the multi-step tooltip.\n   */\n  numberOfSteps: number;\n\n  /**\n   * Used to display the current step. If `numberOfSteps === 1` this number will not display.\n   */\n  currentStep: number;\n}\n\ntype ConditionalProps = StandaloneProps | MultistepProps;\n\nexport type GuideCueProps = ModifiedTooltipProps &\n  ConditionalProps &\n  DarkModeProps & {\n    /**\n     * Determines if the `Tooltip` will appear as open or close.\n     * @default false\n     */\n    open: boolean;\n\n    /**\n     * Callback to change the open state of the Tooltip.\n     */\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n\n    /**\n     * Reference to an element that the tooltip should be positioned against.\n     */\n    refEl: React.RefObject<HTMLElement>;\n\n    /**\n     * Title to appear inside of Tooltip.\n     */\n    title: string;\n\n    /**\n     * Body content to appear inside the tooltip, under the title.\n     */\n    children: React.ReactNode;\n\n    /**\n     * ClassName to be applied to the tooltip element.\n     */\n    tooltipClassName?: string;\n\n    /**\n     * Text to appear inside the primary button. The default text for the stand-alone tooltip is `Got it`. The default text for the multi-step tooltip varies on the `numberOfSteps` and `currentStep`. If `numberOfSteps === currentStep` the text is `Got it` else it is `Next.\n     */\n    buttonText?: string;\n\n    /**\n     * Callback fired when the dismiss(X) button is clicked or when the `Esc` key is pressed. This only applies to the multi-step tooltip.\n     */\n    onDismiss?: () => void;\n\n    /**\n     * Callback fired when the primary button is clicked. This applies to both the stand-alone and multi-step tooltip. This is also fired when the `Esc` key is pressed in the stand-alone tooltip.\n     */\n    onPrimaryButtonClick?: () => void;\n\n    /**\n     * Determines the alignment of the tooltip.\n     * @default 'top'\n     */\n    tooltipAlign?: TooltipAlign;\n\n    /**\n     * Determines the justification of the tooltip.\n     * @default 'middle'\n     */\n    tooltipJustify?: TooltipJustify;\n\n    /**\n     * Determines the alignment of the beacon(animated pulsing circle that appears on top of the trigger element). This only applies to the multi-step tooltip.\n     * @default 'center-horizontal'\n     */\n    beaconAlign?: Align;\n  };\n","import React, { useEffect, useRef, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { usePrefersReducedMotion } from '@leafygreen-ui/a11y';\nimport { useIsomorphicLayoutEffect } from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport Popover, { Align } from '@leafygreen-ui/popover';\n\nimport { beaconStyles, timeout1, timeout2 } from './styles';\nimport TooltipContent from './TooltipContent';\nimport { GuideCueProps, TooltipAlign, TooltipJustify } from './types';\n\nfunction GuideCue({\n  open,\n  setOpen,\n  refEl,\n  numberOfSteps,\n  currentStep = 1,\n  darkMode: darkModeProp,\n  title,\n  children,\n  onDismiss = () => {},\n  onPrimaryButtonClick = () => {},\n  tooltipClassName,\n  portalClassName,\n  buttonText: buttonTextProp,\n  tooltipAlign = TooltipAlign.Top,\n  tooltipJustify = TooltipJustify.Middle,\n  beaconAlign = Align.CenterHorizontal,\n  portalContainer,\n  portalRef,\n  scrollContainer,\n  popoverZIndex,\n  ...tooltipProps\n}: GuideCueProps) {\n  const { darkMode, theme } = useDarkMode(darkModeProp);\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [popoverOpen, setPopoverOpen] = useState<boolean>(false);\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false);\n  const beaconRef = useRef<HTMLDivElement | null>(null);\n\n  /**\n   * Determines the button text. If there is nothing passed to the `buttonText` prop then default text will show depending on the numberOfSteps.\n   */\n  const buttonText = buttonTextProp\n    ? buttonTextProp\n    : currentStep === numberOfSteps || numberOfSteps === 1\n    ? 'Got it'\n    : 'Next';\n\n  /**\n   * Determines if the stand-alone tooltip should be shown. If there are multiple steps the multip-step tooltip will be shown.\n   */\n  const isStandalone = numberOfSteps <= 1;\n\n  useEffect(() => {\n    let openTimeout: NodeJS.Timeout, closeTimeout: NodeJS.Timeout;\n\n    if (open && !isStandalone) {\n      // Adding a timeout to the tooltip so the tooltip is positioned correctly. Without the delay the tooltip can sometime shift when it is first visible. Only applies to multi-step tooltip.\n      // beacon opens first\n      setPopoverOpen(true);\n      openTimeout = setTimeout(\n        () =>\n          // React 18 automatically batches all updates which appears to break the opening transition. flushSync prevents this state update from automically batching. Instead updates are made synchronously.\n          flushSync(() => {\n            // tooltip opens a little after the beacon opens\n            setTooltipOpen(true);\n          }),\n        timeout1,\n      );\n    } else {\n      // Adding a timeout to the popover because if we close both the tooltip and the popover at the same time the transition is not visible. Only applies to multi-step tooltip.\n      // tooltip closes first\n      setTooltipOpen(false);\n      // beacon closes a little after the tooltip cloese\n      closeTimeout = setTimeout(() => setPopoverOpen(false), timeout2);\n    }\n\n    return () => {\n      clearTimeout(openTimeout);\n      clearTimeout(closeTimeout);\n    };\n  }, [open, isStandalone]);\n\n  /**\n   * Callback fired when the X icon is clicked . It closes the tooltip and fires the callback that was passed to `onDismiss`.\n   */\n  const handleCloseClick = () => {\n    setOpen(false);\n    setTimeout(() => onDismiss(), timeout1);\n  };\n\n  /**\n   * Callback fired when the primary bottom is clicked. It closes the tooltip and fires the callback that was passed to `onPrimaryButtonClick`.\n   */\n  const handleButtonClick = () => {\n    setOpen(false);\n    setTimeout(() => onPrimaryButtonClick(), isStandalone ? 0 : timeout1);\n  };\n\n  /**\n   * This callback is fired when the Esc key closes the tooltip since this happens directly in the `Tooltip` component. If this is a stand-alone tooltip then we use the callback for the primary button(`onPrimaryButtonClick`) since that is the callback that would be fired if the primary button was clicked. If it's the multi-step tooltip we use the callback from the dismiss(X) button(`onDismiss`) since thats the callback that would be fired if the dismiss(X) button was clicked.\n   */\n  const onEscClose = isStandalone ? onPrimaryButtonClick : onDismiss;\n\n  const sharedProps = {\n    portalClassName,\n    portalContainer,\n    portalRef,\n    scrollContainer,\n  };\n\n  const tooltipContentProps = {\n    darkMode,\n    open,\n    setOpen,\n    tooltipJustify,\n    tooltipAlign,\n    refEl,\n    popoverZIndex,\n    numberOfSteps,\n    currentStep,\n    theme,\n    title,\n    isStandalone,\n    buttonText,\n    tooltipClassName,\n    onEscClose,\n    handleButtonClick,\n    handleCloseClick,\n    ...tooltipProps,\n  };\n\n  const [shouldRender, setShouldRender] = useState(false);\n\n  useIsomorphicLayoutEffect(() => setShouldRender(true), []);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <>\n      {isStandalone ? (\n        // Standalone tooltip\n        // this is using the reference from the `refEl` prop to position itself against\n        <TooltipContent {...tooltipContentProps} {...sharedProps}>\n          {children}\n        </TooltipContent>\n      ) : (\n        // Multistep tooltip\n        <Popover\n          active={popoverOpen}\n          refEl={refEl}\n          align={beaconAlign}\n          justify={TooltipJustify.Middle}\n          spacing={-12} // width of beacon is 24px, 24/2 = 12\n          adjustOnMutation={true}\n          popoverZIndex={popoverZIndex}\n          {...sharedProps}\n        >\n          {/* The beacon is using the popover component to position itself */}\n          <div\n            ref={beaconRef}\n            className={beaconStyles(prefersReducedMotion, darkMode)}\n          >\n            <div />\n          </div>\n\n          {/* The tooltip is using the ref of the beacon as the trigger to position itself against */}\n          {/* Instead of passing the beacon as the tooltip trigger prop we pass a reference to the beacon to the `refEl` prop. By passing only the reference we avoid default tooltip behaviors such as closing the tooltip on background click or showing and hiding the tooltip on hover. */}\n          <TooltipContent\n            {...tooltipContentProps}\n            refEl={beaconRef}\n            open={tooltipOpen}\n            usePortal={false}\n          >\n            {children}\n          </TooltipContent>\n        </Popover>\n      )}\n    </>\n  );\n}\n\nGuideCue.displayName = 'GuideCue';\nGuideCue.propTypes = {\n  children: PropTypes.node,\n  darkMode: PropTypes.bool,\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n  refEl: PropTypes.shape({\n    current:\n      typeof window !== 'undefined'\n        ? PropTypes.instanceOf(Element)\n        : PropTypes.any,\n  }),\n  numberOfSteps: PropTypes.number.isRequired,\n  currentStep: function (props: { [x: string]: any }, propName: string) {\n    // if numberOfSteps > 1 and currentStep is not a number then throw error\n    if (props['numberOfSteps'] > 1 && typeof props[propName] !== 'number') {\n      return new Error(\n        '`currentStep` prop of type `number` is required if numberOfSteps > 1',\n      );\n    }\n\n    // if numberOfSteps <= 1 && currentStep prop exist and it is not a number make sure its a number\n    if (\n      props['numberOfSteps'] <= 1 &&\n      props[propName] !== undefined &&\n      typeof props[propName] !== 'number'\n    ) {\n      return new Error(\n        `'currentStep' prop is invalid. Type '${typeof props[\n          propName\n        ]}' supplied to 'currentStep', expected 'number'`,\n      );\n    }\n  },\n  title: PropTypes.string,\n  tooltipClassName: PropTypes.string,\n  buttonText: PropTypes.string,\n  onDismiss: PropTypes.func,\n  onPrimaryButtonClick: PropTypes.func,\n  tooltipAlign: PropTypes.oneOf(Object.values(TooltipAlign)),\n  tooltipJustify: PropTypes.oneOf(Object.values(TooltipJustify)),\n  beaconAlign: PropTypes.oneOf(Object.values(Align)),\n  // Popover Props\n  popoverZIndex: PropTypes.number,\n  scrollContainer:\n    typeof window !== 'undefined'\n      ? PropTypes.instanceOf(Element)\n      : PropTypes.any,\n  portalContainer:\n    typeof window !== 'undefined'\n      ? PropTypes.instanceOf(Element)\n      : PropTypes.any,\n  portalClassName: PropTypes.string,\n  portalRef: PropTypes.shape({\n    current:\n      typeof window !== 'undefined'\n        ? PropTypes.instanceOf(Element)\n        : PropTypes.any,\n  }),\n};\n\nexport default GuideCue;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","tooltipMultistepStyles","css","_taggedTemplateLiteral","tooltipStyles","beaconStyles","prefersReducedMotion","darkMode","color","palette","blue","light2","base","sharedCss","transparentize","cx","contentStyles","footerStyles","bodyThemeStyles","_defineProperty","Theme","Light","gray","light1","Dark","black","bodyTitleStyles","closeStyles","closeHoverStyles","dark2","light3","stepStyles","buttonStyles","_excluded","ariaLabelledby","ariaDescribedby","TooltipContent","_ref","open","setOpen","tooltipJustify","tooltipAlign","refEl","portalClassName","portalContainer","scrollContainer","popoverZIndex","theme","title","isStandalone","buttonText","numberOfSteps","currentStep","children","tooltipClassName","onEscClose","handleButtonClick","handleCloseClick","_ref$usePortal","usePortal","tooltipProps","_objectWithoutProperties","focusId","useIdAllocator","prefix","React","createElement","Fragment","Tooltip","_extends","justify","align","className","onClose","role","FocusTrap","focusTrapOptions","clickOutsideDeactivates","IconButton","onClick","XIcon","Body","id","as","Disclaimer","Button","variant","displayName","TooltipAlign","Top","Align","Bottom","Left","Right","TooltipJustify","Start","Justify","Middle","End","GuideCue","_ref$currentStep","darkModeProp","_ref$onDismiss","onDismiss","_ref$onPrimaryButtonC","onPrimaryButtonClick","buttonTextProp","_ref$tooltipAlign","_ref$tooltipJustify","_ref$beaconAlign","beaconAlign","CenterHorizontal","portalRef","_useDarkMode","useDarkMode","usePrefersReducedMotion","_useState2","_slicedToArray","useState","popoverOpen","setPopoverOpen","_useState4","tooltipOpen","setTooltipOpen","beaconRef","useRef","useEffect","openTimeout","closeTimeout","setTimeout","flushSync","clearTimeout","sharedProps","tooltipContentProps","_objectSpread","_useState6","shouldRender","setShouldRender","useIsomorphicLayoutEffect","Popover","active","spacing","adjustOnMutation","ref","propTypes","PropTypes","node","bool","func","shape","current","window","instanceOf","Element","any","number","isRequired","props","propName","Error","undefined","concat","_typeof","string","oneOf","Object","values"],"mappings":"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"}