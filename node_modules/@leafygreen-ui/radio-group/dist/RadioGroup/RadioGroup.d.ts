import React from 'react';
import PropTypes from 'prop-types';
import { RadioGroupProps } from './RadioGroup.types';
/**
 *
 * RadioGroup component
 *
 * ```
<RadioGroup onChange={() => execute callback onChange}>
  <Radio value='Radio-1'>Radio 1</Radio>
  <Radio value='Radio-2'>Radio 2</Radio>
</RadioGroup>
```
 * @param props.children Content to appear inside of RadioGroup component.
 * @param props.onChange Callback to be executed when a Radio is selected.
 * @param props.value Radio that should appear checked. If value passed, component will be controlled by consumer.
 * @param props.className className applied to RadioGroup container.
 * @param props.name Name passed to each Radio belonging to the RadioGroup.
 * @param props.darkMode Determines whether or not the RadioGroup will appear in dark mode.
 * @param props.size Determines the size of the Radio components Can be 'small' or 'default.
 */
declare function RadioGroup({ darkMode: darkModeProp, size, className, onChange, children, value: controlledValue, name: nameProp, bold, ...rest }: RadioGroupProps): React.JSX.Element;
declare namespace RadioGroup {
    var propTypes: {
        darkMode: PropTypes.Requireable<boolean>;
        size: PropTypes.Requireable<"xsmall" | "small" | "default">;
        className: PropTypes.Requireable<string>;
        value: PropTypes.Requireable<string | number>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        name: PropTypes.Requireable<string>;
    };
    var displayName: string;
}
export default RadioGroup;
//# sourceMappingURL=RadioGroup.d.ts.map