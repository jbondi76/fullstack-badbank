"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Placeholder = void 0;
const react_1 = __importStar(require("react"));
const emotion_1 = require("@leafygreen-ui/emotion");
const tokens_1 = require("@leafygreen-ui/tokens");
const palette_1 = require("@leafygreen-ui/palette");
const use_theme_1 = require("../hooks/use-theme");
const scale = 4;
const percent = (num) => (num * 100).toFixed(3) + '%';
const move = (0, emotion_1.keyframes)({
    from: {
        backgroundPosition: `${percent(scale)} 0`,
    },
    to: {
        backgroundPosition: '0 0',
    },
});
const placeholder = (0, emotion_1.css)({
    alignSelf: 'center',
    borderRadius: 3,
    maxWidth: '80%',
    backgroundColor: 'var(--gradient-start)',
    backgroundImage: `linear-gradient(
        to right,
        var(--gradient-start) 0%,
        var(--gradient-end) ${percent(1 / scale / 2)},
        var(--gradient-start) ${percent(1 / scale)},
        var(--gradient-start) 100%
    )`,
    backgroundSize: `${percent(scale)} 100%`,
    backgroundPosition: '0 0',
    animation: `${move} ${scale}s infinite linear`,
});
function getBoundRandom(min, max) {
    return Math.random() * (max - min) + min;
}
const Placeholder = ({ className, minChar = 5, maxChar = 15, width: propsWidth, height: propsHeight = tokens_1.spacing[3], gradientStart, gradientEnd, style: propsStyle, ...props }) => {
    const darkMode = (0, use_theme_1.useDarkMode)();
    const width = (0, react_1.useMemo)(() => {
        return propsWidth || `${Math.round(getBoundRandom(minChar, maxChar))}ch`;
    }, [minChar, maxChar, propsWidth]);
    const style = (0, react_1.useMemo)(() => ({
        width,
        height: propsHeight,
        '--gradient-start': gradientStart || (darkMode ? palette_1.palette.gray.dark2 : palette_1.palette.gray.light2),
        '--gradient-end': gradientEnd || (darkMode ? palette_1.palette.gray.dark4 : palette_1.palette.gray.light3),
        ...propsStyle,
    }), [darkMode, width, propsHeight, gradientStart, gradientEnd, propsStyle]);
    return (react_1.default.createElement("div", { ...props, role: "presentation", "data-testid": props['data-testid'] ?? 'placeholder', className: (0, emotion_1.cx)(placeholder, className), style: style }));
};
exports.Placeholder = Placeholder;
//# sourceMappingURL=placeholder.js.map