"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorBoundary = void 0;
const react_1 = __importDefault(require("react"));
const emotion_1 = require("@leafygreen-ui/emotion");
const tokens_1 = require("@leafygreen-ui/tokens");
const leafygreen_1 = require("./leafygreen");
const errorContainerStyles = (0, emotion_1.css)({
    padding: tokens_1.spacing[3],
    width: '100%',
});
class ErrorBoundary extends react_1.default.Component {
    constructor() {
        super(...arguments);
        this.state = {
            error: null,
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error,
        };
    }
    componentDidCatch(error, errorInfo) {
        if (this.props.onError) {
            this.props.onError(error, errorInfo);
        }
    }
    render() {
        const { className, displayName } = this.props;
        const { error } = this.state;
        if (error) {
            return (react_1.default.createElement("div", { className: (0, emotion_1.cx)(errorContainerStyles, className) },
                react_1.default.createElement(leafygreen_1.Banner, { variant: "danger" },
                    "An error occurred while rendering",
                    displayName ? ` ${displayName}` : '',
                    ": ",
                    error.message)));
        }
        return this.props.children;
    }
}
const _ErrorBoundary = (props) => {
    return process?.env?.COMPASS_DISABLE_ERROR_BOUNDARY === 'true' ? (react_1.default.createElement(react_1.default.Fragment, null, props.children)) : (react_1.default.createElement(ErrorBoundary, { ...props }));
};
exports.ErrorBoundary = _ErrorBoundary;
//# sourceMappingURL=error-boundary.js.map