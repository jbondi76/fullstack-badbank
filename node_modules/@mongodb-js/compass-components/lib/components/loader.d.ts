import React from 'react';
type SpinLoaderProps = {
    size?: string | number;
    title?: string;
    darkMode?: boolean;
};
type SpinLoaderWithLabelProps = Omit<SpinLoaderProps, 'size' | 'title'> & {
    progressText: string;
    className?: string;
    children?: React.ReactNode;
    ['data-testid']?: string;
};
type CancelLoaderProps = Omit<SpinLoaderWithLabelProps, 'children'> & {
    onCancel(): void;
    cancelText: string;
};
declare function SpinLoader({ size, title, darkMode: _darkMode, }: SpinLoaderProps): JSX.Element;
declare function SpinLoaderWithLabel({ className, progressText, ['data-testid']: dataTestId, children, darkMode: _darkMode, ...props }: SpinLoaderWithLabelProps): JSX.Element;
declare function CancelLoader({ cancelText, onCancel, ...props }: CancelLoaderProps): React.ReactElement;
export { SpinLoaderWithLabel, SpinLoader, CancelLoader };
//# sourceMappingURL=loader.d.ts.map