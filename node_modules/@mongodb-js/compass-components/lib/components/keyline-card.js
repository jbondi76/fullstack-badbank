"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeylineCard = void 0;
const react_1 = __importStar(require("react"));
const tokens_1 = require("@leafygreen-ui/tokens");
const emotion_1 = require("@leafygreen-ui/emotion");
const palette_1 = require("@leafygreen-ui/palette");
const polished_1 = require("polished");
const use_theme_1 = require("../hooks/use-theme");
const use_focus_ring_1 = require("../hooks/use-focus-ring");
const merge_props_1 = require("../utils/merge-props");
const containerStyles = (0, emotion_1.css)({
    border: `1px solid ${palette_1.palette.gray.light2}`,
    borderRadius: tokens_1.spacing[2],
    transition: `${tokens_1.transitionDuration.default}ms ease-in-out`,
    transitionProperty: `border, box-shadow`,
});
const keylineLightThemeStyles = (0, emotion_1.css)({
    background: palette_1.palette.white,
});
const keylineDarkThemeStyles = (0, emotion_1.css)({
    background: palette_1.palette.black,
    borderColor: palette_1.palette.gray.dark2,
});
const lightBaseBoxShadow = `0 4px 10px -4px ${(0, polished_1.transparentize)(0.7, palette_1.palette.black)}`;
const darkBaseBoxShadow = `0 4px 20px -4px ${palette_1.palette.black}`;
const lightHoverBoxShadow = `0 4px 20px -4px ${(0, polished_1.transparentize)(0.8, palette_1.palette.black)}`;
const darkHoverBoxShadow = `0 4px 20px -4px ${(0, polished_1.transparentize)(0.3, palette_1.palette.black)}`;
const clickableStyleLight = (0, emotion_1.css)({
    cursor: 'pointer',
    boxShadow: lightBaseBoxShadow,
    '&:hover': {
        border: `1px solid ${palette_1.palette.gray.light2}`,
        boxShadow: lightHoverBoxShadow,
    },
    '&:active': {
        boxShadow: 'none',
    },
});
const clickableStyleDark = (0, emotion_1.css)({
    cursor: 'pointer',
    boxShadow: darkBaseBoxShadow,
    '&:hover': {
        boxShadow: darkHoverBoxShadow,
    },
});
const KeylineCard = (0, react_1.forwardRef)(function KeylineCard({ className, contentStyle, ...props }, ref) {
    const darkMode = (0, use_theme_1.useDarkMode)();
    const focusRingProps = (0, use_focus_ring_1.useFocusRing)();
    const allProps = (0, merge_props_1.mergeProps)(contentStyle === 'clickable'
        ? { role: 'button', tabIndex: 0, ...focusRingProps }
        : {}, {
        className: (0, emotion_1.cx)(containerStyles, darkMode ? keylineDarkThemeStyles : keylineLightThemeStyles, contentStyle === 'clickable' &&
            (darkMode ? clickableStyleDark : clickableStyleLight), className),
    }, props);
    return react_1.default.createElement("div", { ref: ref, ...allProps });
});
exports.KeylineCard = KeylineCard;
//# sourceMappingURL=keyline-card.js.map