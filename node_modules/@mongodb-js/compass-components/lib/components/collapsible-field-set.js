"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollapsibleFieldSet = void 0;
const react_1 = __importDefault(require("react"));
const emotion_1 = require("@leafygreen-ui/emotion");
const tokens_1 = require("@leafygreen-ui/tokens");
const utils_1 = require("@react-aria/utils");
const leafygreen_1 = require("./leafygreen");
const form_field_container_1 = __importDefault(require("./form-field-container"));
const infoLinkStyles = (0, emotion_1.css)({
    marginLeft: tokens_1.spacing[1],
});
const fieldsetStyles = (0, emotion_1.css)({
    paddingLeft: tokens_1.spacing[4],
});
const CollapsibleFieldSet = ({ description, disabled, helpUrl, label, onToggle, toggled, children, 'data-testid': testId, id: _id, }) => {
    const checkboxId = (0, utils_1.useId)();
    const id = _id ?? checkboxId;
    return (react_1.default.createElement(form_field_container_1.default, { "data-testid": testId },
        react_1.default.createElement(leafygreen_1.Checkbox, { "data-testid": testId && `${testId}-checkbox`, onChange: (event) => {
                onToggle(event.target.checked);
            }, disabled: disabled, label: react_1.default.createElement(leafygreen_1.Label, { htmlFor: id, "data-testid": testId && `${testId}-label` }, label), description: !description
                ? ''
                : (react_1.default.createElement(react_1.default.Fragment, null,
                    description,
                    !!helpUrl && (react_1.default.createElement(leafygreen_1.Link, { className: infoLinkStyles, href: helpUrl, "aria-label": label }, "Learn More")))), checked: toggled, id: id }),
        toggled && react_1.default.createElement("fieldset", { className: fieldsetStyles }, children)));
};
exports.CollapsibleFieldSet = CollapsibleFieldSet;
//# sourceMappingURL=collapsible-field-set.js.map