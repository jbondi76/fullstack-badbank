"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
const react_1 = __importDefault(require("react"));
const emotion_1 = require("@leafygreen-ui/emotion");
const tokens_1 = require("@leafygreen-ui/tokens");
const leafygreen_1 = require("../leafygreen");
const use_scrollbars_1 = require("../../hooks/use-scrollbars");
const use_stacked_component_1 = require("../../hooks/use-stacked-component");
const contentStyles = (0, emotion_1.css)({
    width: '600px',
    letterSpacing: 0,
    padding: 0,
    transform: 'none',
});
const modalFullScreenStyles = (0, emotion_1.css)({
    '& > div': {
        paddingTop: tokens_1.spacing[4],
        paddingBottom: tokens_1.spacing[4],
        paddingLeft: tokens_1.spacing[5],
        paddingRight: tokens_1.spacing[5],
        height: '100vh',
        maxHeight: '100vh',
    },
});
const contentFullScreenStyles = (0, emotion_1.css)({
    width: '100%',
    height: '100%',
    maxHeight: '100%',
    margin: 0,
    alignSelf: 'stretch',
    '& > div': {
        height: '100%',
        maxHeight: '100%',
    },
});
function UnwrappedModal({ className, contentClassName, children, fullScreen = false, ...props }) {
    const { className: scrollbarStyles } = (0, use_scrollbars_1.useScrollbars)();
    return (react_1.default.createElement(leafygreen_1.Modal, { className: (0, emotion_1.cx)(scrollbarStyles, fullScreen && modalFullScreenStyles, className), contentClassName: (0, emotion_1.cx)(contentStyles, fullScreen && contentFullScreenStyles, contentClassName), ...props },
        react_1.default.createElement(leafygreen_1.Body, { as: "div" }, children)));
}
const Modal = (0, use_stacked_component_1.withStackedComponentStyles)(UnwrappedModal);
exports.Modal = Modal;
//# sourceMappingURL=modal.js.map