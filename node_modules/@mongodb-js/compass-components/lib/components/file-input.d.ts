import React from 'react';
type FileInputVariant = 'default' | 'small' | 'vertical';
export type ElectronFileDialogOptions = {
    title?: string;
    defaultPath?: string;
    filters?: {
        name: string;
        extensions: string[];
    }[];
    buttonLabel?: string;
    properties?: string[];
};
type FileChooserOptions = {
    multi?: boolean;
    mode: 'open' | 'save';
    accept?: string;
} & ElectronFileDialogOptions;
export type FileInputBackend = {
    openFileChooser: (options: FileChooserOptions) => void;
    onFilesChosen: (listener: (files: string[]) => void) => () => void;
};
export declare const FileInputBackendContext: React.Context<(() => FileInputBackend) | null>;
export type ElectronShowFileDialogProvider<ElectronWindow> = {
    getCurrentWindow(): ElectronWindow;
    dialog: {
        showSaveDialog(window: ElectronWindow, options: Partial<ElectronFileDialogOptions>): Promise<{
            canceled: boolean;
            filePath?: string;
        }>;
        showOpenDialog(window: ElectronWindow, options: Partial<ElectronFileDialogOptions>): Promise<{
            canceled: boolean;
            filePaths: string[];
        }>;
    };
};
export declare const FileInputBackendProvider: React.FunctionComponent<{
    createFileInputBackend: (() => FileInputBackend) | null;
}>;
export declare function createElectronFileInputBackend<ElectronWindow>(electron: ElectronShowFileDialogProvider<ElectronWindow>): () => FileInputBackend;
declare function FileInput({ autoOpen, id, label, dataTestId, onChange, disabled, optional, optionalMessage, error, errorMessage, variant, showFileOnNewLine, link, description, values, className, multi, mode, accept, title, defaultPath, filters, buttonLabel, properties, }: {
    autoOpen?: boolean;
    id: string;
    label: string;
    dataTestId?: string;
    onChange: (files: string[]) => void;
    disabled?: boolean;
    optional?: boolean;
    optionalMessage?: string;
    error?: boolean;
    errorMessage?: string;
    variant?: FileInputVariant;
    link?: string;
    description?: string;
    showFileOnNewLine?: boolean;
    values?: string[];
    className?: string;
} & FileChooserOptions): React.ReactElement;
export default FileInput;
//# sourceMappingURL=file-input.d.ts.map