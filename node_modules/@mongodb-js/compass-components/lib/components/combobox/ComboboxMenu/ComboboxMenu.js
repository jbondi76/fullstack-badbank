"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComboboxMenu = void 0;
const react_1 = __importStar(require("react"));
const isUndefined_1 = __importDefault(require("lodash/isUndefined"));
const emotion_1 = require("@leafygreen-ui/emotion");
const hooks_1 = require("@leafygreen-ui/hooks");
const icon_1 = __importDefault(require("@leafygreen-ui/icon"));
const palette_1 = require("@leafygreen-ui/palette");
const leafygreen_1 = require("../../leafygreen");
const ComboboxContext_1 = require("../ComboboxContext");
const Menu_styles_1 = require("./Menu.styles");
exports.ComboboxMenu = react_1.default.forwardRef(({ children, id, refEl, labelId, searchLoadingMessage, searchErrorMessage, searchEmptyMessage, className, ...popoverProps }, forwardedRef) => {
    const { disabled, darkMode, theme, size, isOpen, searchState } = (0, react_1.useContext)(ComboboxContext_1.ComboboxContext);
    const ref = (0, hooks_1.useForwardedRef)(forwardedRef, null);
    const availableSpace = (0, hooks_1.useAvailableSpace)(refEl);
    const maxHeightValue = !(0, isUndefined_1.default)(availableSpace)
        ? `${Math.min(availableSpace, 256)}px`
        : 'unset';
    const renderedMenuContents = (0, react_1.useMemo)(() => {
        const messageStyles = (0, emotion_1.cx)(Menu_styles_1.menuMessageBaseStyle, Menu_styles_1.menuMessageThemeStyle[theme], Menu_styles_1.menuMessageSizeStyle[size]);
        switch (searchState) {
            case 'loading': {
                return (react_1.default.createElement("span", { className: messageStyles },
                    react_1.default.createElement(icon_1.default, { glyph: "Refresh", color: darkMode ? palette_1.palette.blue.light1 : palette_1.palette.blue.base, className: Menu_styles_1.loadingIconStyle }),
                    searchLoadingMessage));
            }
            case 'error': {
                return (react_1.default.createElement("span", { className: messageStyles },
                    react_1.default.createElement(icon_1.default, { glyph: "Warning", color: darkMode ? palette_1.palette.red.light1 : palette_1.palette.red.base }),
                    searchErrorMessage));
            }
            case 'unset':
            default: {
                if (children &&
                    typeof children === 'object' &&
                    'length' in children &&
                    children.length > 0) {
                    return react_1.default.createElement("ul", { className: Menu_styles_1.menuList }, children);
                }
                return react_1.default.createElement("span", { className: messageStyles }, searchEmptyMessage);
            }
        }
    }, [
        theme,
        size,
        searchState,
        darkMode,
        searchLoadingMessage,
        searchErrorMessage,
        children,
        searchEmptyMessage,
    ]);
    return (react_1.default.createElement(leafygreen_1.Popover, { active: isOpen && !disabled, spacing: 4, align: "bottom", justify: "middle", refEl: refEl, adjustOnMutation: true, className: (0, emotion_1.cx)(className, Menu_styles_1.popoverStyle, Menu_styles_1.popoverThemeStyle[theme]), ...popoverProps },
        react_1.default.createElement("div", { ref: ref, id: id, role: "listbox", "aria-labelledby": labelId, "aria-expanded": isOpen, className: (0, emotion_1.cx)(Menu_styles_1.menuBaseStyle, Menu_styles_1.menuThemeStyle[theme], (0, emotion_1.css) `
              max-height: ${maxHeightValue};
            `), onMouseDownCapture: (e) => e.preventDefault() }, renderedMenuContents)));
});
exports.ComboboxMenu.displayName = 'ComboboxMenu';
//# sourceMappingURL=ComboboxMenu.js.map