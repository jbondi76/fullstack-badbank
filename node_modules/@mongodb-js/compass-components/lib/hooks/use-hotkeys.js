"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyboardShortcut = exports.formatHotkey = exports.useHotkeys = void 0;
const react_1 = __importDefault(require("react"));
const react_hotkeys_hook_1 = require("react-hotkeys-hook");
const leafygreen_1 = require("../components/leafygreen");
const tokens_1 = require("@leafygreen-ui/tokens");
const emotion_1 = require("@leafygreen-ui/emotion");
const shortcutContainerStyles = (0, emotion_1.css)({
    display: 'flex',
    gap: tokens_1.spacing[1],
});
const isMac = () => navigator.userAgent.indexOf('Mac') !== -1;
const useHotkeys = (key, callback, options, deps) => {
    return (0, react_hotkeys_hook_1.useHotkeys)(key, callback, options, deps);
};
exports.useHotkeys = useHotkeys;
const formatHotkey = (key) => {
    let shortcut = key.toLowerCase();
    shortcut = isMac()
        ? shortcut
            .replace(/\bmeta\b/, '⌘')
            .replace(/\balt\b/, 'option')
            .replace(/\bmod\b/, '⌘')
        : shortcut.replace(/\bmod\b/, 'ctrl');
    return shortcut
        .replace(/\+/g, ' + ')
        .replace(/\s+/g, ' ')
        .replace('arrowup', '↑')
        .replace('arrowdown', '↓')
        .replace(/\b\w/g, (c) => c.toUpperCase())
        .trim();
};
exports.formatHotkey = formatHotkey;
const KeyboardShortcut = ({ hotkey }) => {
    const key = (0, exports.formatHotkey)(hotkey);
    return (react_1.default.createElement("span", { className: shortcutContainerStyles }, key.split('+').map((x) => (react_1.default.createElement(leafygreen_1.InlineKeyCode, { key: x }, x.trim())))));
};
exports.KeyboardShortcut = KeyboardShortcut;
//# sourceMappingURL=use-hotkeys.js.map