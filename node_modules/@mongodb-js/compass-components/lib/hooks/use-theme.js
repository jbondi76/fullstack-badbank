"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withDarkMode = exports.Theme = exports.ThemeProvider = exports.useDarkMode = void 0;
const react_1 = __importDefault(require("react"));
const leafygreen_provider_1 = __importStar(require("@leafygreen-ui/leafygreen-provider"));
var Theme;
(function (Theme) {
    Theme["Light"] = "Light";
    Theme["Dark"] = "Dark";
})(Theme || (Theme = {}));
exports.Theme = Theme;
function useDarkMode(localDarkMode) {
    const darkMode = (0, leafygreen_provider_1.useDarkMode)(localDarkMode);
    return darkMode.darkMode;
}
exports.useDarkMode = useDarkMode;
const ThemeProvider = ({ children, theme, }) => {
    return theme.enabled ? (react_1.default.createElement(leafygreen_provider_1.default, { darkMode: theme.theme === Theme.Dark }, children)) : (react_1.default.createElement(react_1.default.Fragment, null, children));
};
exports.ThemeProvider = ThemeProvider;
const withDarkMode = function (WrappedComponent) {
    const ComponentWithDarkMode = (props, ref) => {
        const darkMode = useDarkMode();
        return (react_1.default.createElement(WrappedComponent, { darkMode: darkMode, ref: ref, ...props }));
    };
    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    ComponentWithDarkMode.displayName = `WithDarkMode(${displayName})`;
    return react_1.default.forwardRef(ComponentWithDarkMode);
};
exports.withDarkMode = withDarkMode;
//# sourceMappingURL=use-theme.js.map