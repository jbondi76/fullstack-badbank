"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePersistedState = void 0;
const react_1 = require("react");
function usePersistedState(id, initialValue, storage = globalThis.localStorage) {
    const idRef = (0, react_1.useRef)(id);
    const storageRef = (0, react_1.useRef)(storage);
    const [state, setState] = (0, react_1.useState)(() => {
        const initialStored = storageRef.current.getItem(idRef.current);
        if (initialStored) {
            try {
                return JSON.parse(initialStored);
            }
            catch (e) {
                throw new Error('Failed to parse stored value, usePersistedState only supports serializeable values. ' +
                    e.message);
            }
        }
        if (typeof initialValue === 'function') {
            return initialValue();
        }
        return initialValue;
    });
    (0, react_1.useEffect)(() => {
        storageRef.current.setItem(idRef.current, JSON.stringify(state));
    }, [state]);
    return [state, setState];
}
exports.usePersistedState = usePersistedState;
//# sourceMappingURL=use-persisted-state.js.map