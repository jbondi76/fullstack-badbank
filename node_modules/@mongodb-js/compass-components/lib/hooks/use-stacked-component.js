"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withStackedComponentPopoverStyles = exports.withStackedComponentStyles = exports.useStackedComponent = exports.StackedComponentProvider = void 0;
const react_1 = __importStar(require("react"));
const StackedComponentContext = (0, react_1.createContext)(null);
const StackedComponentProvider = ({ zIndex, children, }) => {
    const value = (0, react_1.useMemo)(() => ({ zIndex }), [zIndex]);
    return (react_1.default.createElement(StackedComponentContext.Provider, { value: value }, children));
};
exports.StackedComponentProvider = StackedComponentProvider;
const useStackedComponent = () => {
    return (0, react_1.useContext)(StackedComponentContext);
};
exports.useStackedComponent = useStackedComponent;
const withBaseStyles = function (WrappedComponent, usePopoverZIndex) {
    const ComponentWithStackedStyles = (props, ref) => {
        const context = (0, exports.useStackedComponent)();
        const stackedElementProps = (0, react_1.useMemo)(() => {
            if (context?.zIndex) {
                if (usePopoverZIndex) {
                    return {
                        popoverZIndex: props.popoverZIndex ??
                            context.zIndex,
                    };
                }
                else {
                    return {
                        style: {
                            zIndex: context.zIndex,
                            ...props.style,
                        },
                    };
                }
            }
            return {};
        }, [
            context,
            props.popoverZIndex,
            props.style,
        ]);
        return react_1.default.createElement(WrappedComponent, { ref: ref, ...props, ...stackedElementProps });
    };
    const displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    ComponentWithStackedStyles.displayName = `WithStackedStyles(${displayName})`;
    return react_1.default.forwardRef(ComponentWithStackedStyles);
};
const withStackedComponentStyles = function (WrappedComponent) {
    return withBaseStyles(WrappedComponent, false);
};
exports.withStackedComponentStyles = withStackedComponentStyles;
const withStackedComponentPopoverStyles = function (WrappedComponent) {
    return withBaseStyles(WrappedComponent, true);
};
exports.withStackedComponentPopoverStyles = withStackedComponentPopoverStyles;
//# sourceMappingURL=use-stacked-component.js.map